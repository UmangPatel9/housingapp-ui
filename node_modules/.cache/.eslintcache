[{"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx":"1","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts":"2","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts":"3","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx":"4","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx":"5","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx":"6","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx":"7","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx":"8","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx":"9","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx":"10","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx":"11","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx":"12","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx":"13","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx":"14","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx":"15","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx":"16","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx":"17","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx":"18","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx":"19","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx":"20","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx":"21"},{"size":197,"mtime":1632199423730,"results":"22","hashOfConfig":"23"},{"size":5256,"mtime":1630685610000,"results":"24","hashOfConfig":"23"},{"size":425,"mtime":1630685610000,"results":"25","hashOfConfig":"23"},{"size":2479,"mtime":1633151743364,"results":"26","hashOfConfig":"23"},{"size":513,"mtime":1633003693065,"results":"27","hashOfConfig":"23"},{"size":2945,"mtime":1633071146591,"results":"28","hashOfConfig":"23"},{"size":4734,"mtime":1632988528624,"results":"29","hashOfConfig":"23"},{"size":4332,"mtime":1632998039839,"results":"30","hashOfConfig":"23"},{"size":10567,"mtime":1632988058390,"results":"31","hashOfConfig":"23"},{"size":10575,"mtime":1633168161692,"results":"32","hashOfConfig":"23"},{"size":11569,"mtime":1632986048173,"results":"33","hashOfConfig":"23"},{"size":3388,"mtime":1633090785784,"results":"34","hashOfConfig":"23"},{"size":3748,"mtime":1633097250294,"results":"35","hashOfConfig":"23"},{"size":1124,"mtime":1633090740917,"results":"36","hashOfConfig":"23"},{"size":4254,"mtime":1633150327245,"results":"37","hashOfConfig":"23"},{"size":3749,"mtime":1633151771021,"results":"38","hashOfConfig":"23"},{"size":5562,"mtime":1633095879398,"results":"39","hashOfConfig":"23"},{"size":3369,"mtime":1633080084758,"results":"40","hashOfConfig":"23"},{"size":1776,"mtime":1633089485868,"results":"41","hashOfConfig":"23"},{"size":1826,"mtime":1633097257735,"results":"42","hashOfConfig":"23"},{"size":22441,"mtime":1633169562691,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ftw0h2",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx",[],["98","99"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx",["100"],"import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\nimport Home from './pages/Index';\nimport ForgetPassword from './pages/Forget-Password';\nimport ResetPassword from './pages/Reset-Password';\nimport Signup from './pages/Signup';\nimport StaffSignup from './pages/Staff-signup';\nimport TenantSignup from './pages/Tenant-signup';\nimport ManagementDashboard from './pages/Management-dashboard';\nimport ManagementSignup from './pages/Management-signup';\nimport ManageProperties from './pages/Manage-properties';\nimport AddNewProperty from './pages/Add-new-property';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n        <Route exact path=\"/index\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          {/* <Redirect to=\"/index\" /> */}\n          <Home />\n        </Route>\n        <Route exact path=\"/forget-password\">\n          <ForgetPassword />\n        </Route>\n        <Route exact path=\"/reset-password\">\n          <ResetPassword />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route exact path=\"/management-signup\">\n          <ManagementSignup />\n        </Route>\n        <Route exact path=\"/staff-signup\">\n          <StaffSignup />\n        </Route>\n        <Route exact path=\"/tenant-signup\">\n          <TenantSignup />\n        </Route>\n        <Route exact path=\"/management-dashboard\">\n          <ManagementDashboard />\n        </Route>\n        <Route exact path=\"/manage-properties\">\n          <ManageProperties />\n        </Route>\n        <Route exact path=\"/add-new-property\">\n          <AddNewProperty />\n        </Route>\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx",["101","102","103"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonContent, IonPage, IonLabel, IonInput, IonButton, IonGrid, IonRow, IonCol, IonItem, IonList, IonRadioGroup, IonListHeader, IonRadio } from '@ionic/react';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst TENANT = \"tenant\"\r\nconst MANAGEMENT = \"management\"\r\nconst STAFF = \"staff\"\r\n\r\nconst Signup: React.FC = () => {\r\n  const [userType, setUserType] = useState<string>();\r\n  // const [selected, setSelected] = useState<string>();\r\n  var radioButtonValue = \"\";\r\n  let history = useHistory();\r\n  const inputChangeHandler = (event: CustomEvent) => {\r\n    console.log(event?.detail?.value);\r\n    setUserType(event?.detail?.value); \r\n\r\n    // if(event.detail.value && event.detail.value === \"tenant\") {\r\n    //   console.log('tanant selected');\r\n    //   radioButtonValue = \"tenant\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"management\") {\r\n    //   console.log('management selected');\r\n    //   radioButtonValue = \"management\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"staff\") {\r\n    //   console.log('staff selected');\r\n    //   radioButtonValue = \"staff\";\r\n    // }\r\n\r\n  };\r\n  \r\n\r\n  const pageRediect = () => {\r\n    history.push(`/${userType}-signup`);\r\n    // switch(userType) {\r\n    //   case TENANT: {\r\n    //     history.push(\"/Tenant-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case MANAGEMENT: {\r\n    //     history.push(\"/Management-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case STAFF: {\r\n    //     history.push(\"/Staff-signup\");\r\n    //     break;\r\n    //   }\r\n    //   default: {\r\n    //     break;\r\n    //   }\r\n       \r\n    // }\r\n\r\n    // if ( radioButtonValue == \"tenant\" ) {\r\n    //   console.log('tenant checked');\r\n    //   history.push(\"/Tenant-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"management\" ) {\r\n    //   console.log('management checked');\r\n    //   history.push(\"/Management-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"staff\" ) {\r\n    //   console.log('staff checked');\r\n    //   history.push(\"/Staff-signup\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n        <Header />\r\n\r\n        <IonContent fullscreen>\r\n            <IonGrid>\r\n                <IonRow className=\"signup-form login-form-row \">\r\n                    <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"6\">\r\n                        {/* <p>What are you registering as?</p> */}\r\n                        <IonList>\r\n                          <IonRadioGroup defaultValue={TENANT} onIonChange={inputChangeHandler}>\r\n                            <IonListHeader>\r\n                              <IonLabel>\r\n                                What are you registering as?\r\n                              </IonLabel>\r\n                            </IonListHeader>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Tenant\r\n                                <p>I am (or plan on) renting an apartment, condos or houses.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={TENANT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Management\r\n                                <p>I am plan to add and manage properties or apartments to rent.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={MANAGEMENT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Staff\r\n                                <p>I am staff member for a property.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={STAFF} />\r\n                              \r\n                            </IonItem>\r\n\r\n                          </IonRadioGroup>\r\n                        </IonList>\r\n\r\n                        \r\n                    </IonCol>\r\n\r\n                    <IonCol size=\"8\" sizeMd=\"4\" sizeLg=\"4\">\r\n                      <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" onClick={pageRediect}>\r\n                          Continue\r\n                      </IonButton>\r\n                    </IonCol>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Signup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx",["104"],"import { \r\n  IonContent, \r\n  IonPage, \r\n  IonLabel, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol,  \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                     <FormProvider {...methods}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                           <h2>Create new password</h2>\r\n                           <p>Your new password must be different from previous used password.</p>\r\n\r\n                           <IonGrid>\r\n                              <IonRow>\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Enter new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput\r\n                                       mode=\"md\" \r\n                                       type=\"password\" \r\n                                       {...register('password1', {\r\n                                          required: 'Password Is Required'\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password1\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Cofnirm new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput \r\n                                       mode=\"md\"\r\n                                       type=\"password\" \r\n                                       {...register('password2', {\r\n                                          // required: true,\r\n                                          validate: {\r\n                                             noMatch: (value: string) => {\r\n                                                return value !== getValues(\"password1\")\r\n                                                   ? \"Passwords do not match\"\r\n                                                   : undefined;\r\n                                             },\r\n                                          },\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password2\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                                    Reset Password\r\n                                    </IonButton>\r\n                                 </IonCol>\r\n                              </IonRow>\r\n                           </IonGrid>\r\n\r\n                        </form>\r\n                     </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx",["105","106"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst ManagementSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password Is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default ManagementSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx",["107","108"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx",["109","110"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst TenantSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   ;\r\n   ;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password Is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Lease Code (Optional):</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"number\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default TenantSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx",["111"],"import React, { useState } from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { \r\n    IonHeader, \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonImg,\r\n    IonButton,\r\n    IonPopover,\r\n    IonIcon,\r\n    useIonPopover,\r\n} from '@ionic/react';\r\n\r\nimport ChangePropertyPopover from './Change-Property-Popup';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst HeaderMain: React.FC = () => {\r\n    \r\n    let history = useHistory();\r\n    \r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    const [present, dismiss] = useIonPopover(ChangePropertyPopover, { onHide: () => dismiss() });\r\n\r\n    const pageBack = () => {\r\n      history.goBack();\r\n    };\r\n\r\n    return (\r\n        \r\n        <IonHeader className=\"inner-main-header\">\r\n            <IonGrid>\r\n                <IonRow className=\"\">\r\n\r\n                    <IonButton className=\"back-buton\" fill=\"clear\"  onClick={pageBack}>\r\n                        {/* <IonBackButton icon=\"assets/images/back-arrow.svg\" text=\"back\" defaultHref=\"/\" /> */}\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/back-arrow.svg\" />\r\n                    </IonButton>\r\n\r\n                    <div className=\"apart-logo\">\r\n                        <a href=\"/\">\r\n                            <IonImg className=\"logo\" src=\"assets/images/aparto-logo.svg\" />\r\n                        </a>\r\n                    </div>\r\n\r\n                    <IonPopover\r\n                        cssClass='my-custom-class'\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <p>This is popover content</p>\r\n                    </IonPopover>\r\n                    <IonButton className=\"notification-button ion-hide-lg-down\" fill=\"clear\" onClick={\r\n                        (e) => {\r\n                        // e.persist();\r\n                        setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                        }}\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        <span className=\"notification-count\">4</span>\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"message-button ion-hide-lg-down\" fill=\"clear\" href=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        {/* <span className=\"notification-count\">4</span> */}\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"account-button ion-hide-lg-down\" fill=\"clear\" href=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/ios-person.svg\"/>\r\n                    </IonButton>\r\n\r\n                    <IonButton \r\n                        className=\"change-property\" \r\n                        fill=\"clear\" \r\n                        onClick={(e) =>\r\n                          present({\r\n                            event: e.nativeEvent,\r\n                            cssClass: 'change-property-popup'\r\n                          })\r\n                        }\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        <div className=\"proerty-name\">BL1 <span className=\"ion-hide-lg-down\">- Belvedaire 1</span></div>\r\n                    </IonButton>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonHeader>\r\n        \r\n    );\r\n};\r\n\r\nexport default HeaderMain;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx",["112","113","114"],"import React from \"react\";\r\n\r\nimport { \r\n    IonFooter, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList, \r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <IonFooter className=\"ion-hide-lg-down\">\r\n            <IonGrid>\r\n                <IonRow>\r\n                    <IonCol className=\"footer-top-col\" size=\"12\">\r\n                        <IonList>\r\n                            <IonItem><a href=\"#\">Contact Us</a></IonItem>\r\n                            <IonItem><a href=\"#\">About</a></IonItem>\r\n                            <IonItem><a href=\"#\">Terms of Use</a></IonItem>\r\n                        </IonList>\r\n                        \r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"12\">\r\n                        <p className=\"ion-text-center\"> All rights reserved.</p>\r\n                    </IonCol>\r\n                   \r\n                </IonRow>\r\n\r\n            </IonGrid>\r\n        </IonFooter>\r\n        \r\n    );\r\n};\r\n\r\nexport default Footer;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx",["115","116","117"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonButton,\r\n    IonPopover,\r\n    IonIcon,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonRadio\r\n} from '@ionic/react';\r\n\r\nimport { createOutline, addOutline } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ChangePropertyPopover: React.FC <{\r\n    onHide: () => void;\r\n}>= ({ onHide }) => {\r\n\r\n    // const [changePropertypopoverState, setShowchangePropertyPopover] = useState({ showPopover: false, event: undefined });\r\n\r\n    interface PopoverOptions {\r\n        cssClass: 'my-custom-class',\r\n    }\r\n\r\n    const inputChangeHandler = (event: CustomEvent) => {\r\n\r\n    };\r\n\r\n    return (\r\n                    \r\n        // <IonPopover\r\n        //     cssClass='change-property-popup'\r\n        //     event={changePropertypopoverState.event}\r\n        //     isOpen={changePropertypopoverState.showPopover}\r\n        //     onDidDismiss={() => setShowchangePropertyPopover({ showPopover: false, event: undefined })}\r\n        // >\r\n        <IonGrid className=\"change-property-popup-wrapper\">   \r\n            <IonList>\r\n                <p>Select a propeprty...</p>\r\n                <IonRadioGroup onIonChange={inputChangeHandler}>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    BL1 - Belvedaire 1\r\n                    <p>10 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"BL1\" />\r\n                </IonItem>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    4MS - 400 Maisonneuve\r\n                    <p>400 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"4MS\" />\r\n                </IonItem>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    BL2 - Belvedaire 2\r\n                    <p>20 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"BL2\" />\r\n                </IonItem>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    1BR - 100 Berri\r\n                    <p>400 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"1BR\" />\r\n                </IonItem>\r\n\r\n                </IonRadioGroup>\r\n            </IonList>\r\n\r\n            <IonGrid>\r\n                <IonRow>\r\n                    <IonCol size=\"6\" className=\"login-btn\">\r\n                        <IonButton className=\"manage-property-btn\" href=\"/manage-properties\" expand=\"block\" shape=\"round\" fill=\"solid\" >\r\n                        <div className=\"button-inner\">\r\n                            <IonIcon icon={createOutline} />\r\n                            <span>Manage List of Properties</span>\r\n                        </div>\r\n                        </IonButton>\r\n                    </IonCol>\r\n                    <IonCol size=\"6\" className=\"login-btn\">\r\n                        <IonButton className=\"add-property-btn secondary-button\" href=\"/add-new-property\" expand=\"block\" shape=\"round\" fill=\"solid\">\r\n                        <div className=\"button-inner\">\r\n                            <IonIcon icon={addOutline} />\r\n                            <span>Add a Property</span>\r\n                        </div>\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonGrid> \r\n        // </IonPopover>\r\n        \r\n    );\r\n};\r\n\r\nexport default ChangePropertyPopover;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx",["118","119","120"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonPage,\r\n    IonContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonIcon,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonFabList,\r\n    IonButton,\r\n    IonReorder, \r\n    IonReorderGroup\r\n} from '@ionic/react';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport ManagePropertyMoreMenu from '../components/ManagePropertyMoreMenu';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport { add } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\n\r\nconst ManageProperties: React.FC = () => {\r\n\r\n    const toggleReorder = (event: CustomEvent<ItemReorderEventDetail>) => {\r\n        event.detail.complete();\r\n    };\r\n\r\n    return (\r\n\r\n        <IonPage>\r\n  \r\n            <HeaderMain />\r\n  \r\n            <IonContent className=\"dashboard-wrapper\" fullscreen>\r\n\r\n                <IonGrid className=\"dashboard-main-grid manage-property-wrapper\">  \r\n                    <IonRow class=\"dashboard-main-row\">\r\n\r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n                        \r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonList>\r\n                                <p>Add, rearrange, edit or delete properties.</p>\r\n                                <IonReorderGroup>\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            BL1 - Belvedaire 1\r\n                                            <p>10 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            4MS - 400 Maisonneuve\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            BL2 - Belvedaire 2\r\n                                            <p>20 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            1BR - 100 Berri\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n                                </IonReorderGroup>\r\n                            </IonList>\r\n                        </IonCol>\r\n                        \r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n                    \r\n                    </IonRow>\r\n\r\n                </IonGrid>\r\n                 \r\n\r\n                <IonFab className=\"property-fab-button\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton>\r\n                        <IonIcon src=\"/assets/images/format_list_bulleted.svg\"  />\r\n                    </IonFabButton>\r\n                    <IonFabList side=\"top\">\r\n                        <IonList>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\" href=\"#\">\r\n                                    <IonIcon icon={add} />  \r\n                                    <span>Add a Property</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon icon=\"/assets/images/reorder.svg\"  />\r\n                                    <span>Rearrange List</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        </IonList>\r\n                    </IonFabList>\r\n                </IonFab>\r\n            </IonContent>\r\n\r\n            <Footer />\r\n            <FooterMobile />\r\n\r\n        </IonPage>\r\n        \r\n    );\r\n};\r\n\r\nexport default ManageProperties;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx",["121","122","123","124","125"],"import React from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton,  \r\n    IonCol, \r\n    IonList,\r\n    IonItem,\r\n    IonAvatar\r\n  } from '@ionic/react';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst DashboardSidebar: React.FC = () => {\r\n    return (\r\n\r\n        <IonCol className=\"dashboard-sidebar\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n            <p className=\"ion-hide-lg-up\">What would you like to do today?</p>\r\n\r\n            <IonList className=\"sidebar-menu-list\">\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" href=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Manage-Lease-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\">Manage <b>Tenants & Leases</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" href=\"#\">\r\n                        <div className=\"dashboard-button-inner\">    \r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Pay-Rent-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\">Manage <b>Rents</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" href=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Repair-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\">Manage <b>Requests</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" href=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Posts-Home-Icon.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\">Manage <b>Posts</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" slot=\"start\" fill=\"clear\" href=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Staff-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\">Manage <b>Staff accesses</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n            </IonList>\r\n        </IonCol>\r\n        \r\n    );\r\n};\r\n\r\nexport default DashboardSidebar;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx",["126","127","128","129","130"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyMoreMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" href=\"#\">Modify</IonButton>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\"  color=\"danger\" href=\"#\">Remove</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyMoreMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx",["131","132","133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":18},{"ruleId":"139","severity":1,"message":"143","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"144","line":4,"column":41,"nodeType":"141","messageId":"142","endLine":4,"endColumn":49},{"ruleId":"139","severity":1,"message":"145","line":18,"column":7,"nodeType":"141","messageId":"142","endLine":18,"endColumn":23},{"ruleId":"139","severity":1,"message":"146","line":23,"column":22,"nodeType":"141","messageId":"142","endLine":23,"endColumn":29},{"ruleId":"139","severity":1,"message":"147","line":1,"column":36,"nodeType":"141","messageId":"142","endLine":1,"endColumn":44},{"ruleId":"139","severity":1,"message":"148","line":48,"column":10,"nodeType":"141","messageId":"142","endLine":48,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":1,"column":36,"nodeType":"141","messageId":"142","endLine":1,"endColumn":44},{"ruleId":"139","severity":1,"message":"148","line":50,"column":10,"nodeType":"141","messageId":"142","endLine":50,"endColumn":14},{"ruleId":"139","severity":1,"message":"147","line":1,"column":36,"nodeType":"141","messageId":"142","endLine":1,"endColumn":44},{"ruleId":"139","severity":1,"message":"148","line":50,"column":10,"nodeType":"141","messageId":"142","endLine":50,"endColumn":14},{"ruleId":"139","severity":1,"message":"149","line":8,"column":5,"nodeType":"141","messageId":"142","endLine":8,"endColumn":11},{"ruleId":"150","severity":1,"message":"151","line":22,"column":38,"nodeType":"152","endLine":22,"endColumn":50},{"ruleId":"150","severity":1,"message":"151","line":23,"column":38,"nodeType":"152","endLine":23,"endColumn":50},{"ruleId":"150","severity":1,"message":"151","line":24,"column":38,"nodeType":"152","endLine":24,"endColumn":50},{"ruleId":"139","severity":1,"message":"147","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"153","line":8,"column":5,"nodeType":"141","messageId":"142","endLine":8,"endColumn":15},{"ruleId":"139","severity":1,"message":"154","line":28,"column":15,"nodeType":"141","messageId":"142","endLine":28,"endColumn":29},{"ruleId":"139","severity":1,"message":"147","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"155","line":10,"column":5,"nodeType":"141","messageId":"142","endLine":10,"endColumn":18},{"ruleId":"139","severity":1,"message":"156","line":38,"column":11,"nodeType":"141","messageId":"142","endLine":38,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":26,"column":33,"nodeType":"152","endLine":26,"endColumn":82},{"ruleId":"157","severity":1,"message":"158","line":37,"column":33,"nodeType":"152","endLine":37,"endColumn":78},{"ruleId":"157","severity":1,"message":"158","line":48,"column":33,"nodeType":"152","endLine":48,"endColumn":76},{"ruleId":"157","severity":1,"message":"158","line":59,"column":33,"nodeType":"152","endLine":59,"endColumn":80},{"ruleId":"157","severity":1,"message":"158","line":70,"column":33,"nodeType":"152","endLine":70,"endColumn":75},{"ruleId":"139","severity":1,"message":"159","line":4,"column":5,"nodeType":"141","messageId":"142","endLine":4,"endColumn":15},{"ruleId":"139","severity":1,"message":"160","line":5,"column":5,"nodeType":"141","messageId":"142","endLine":5,"endColumn":12},{"ruleId":"139","severity":1,"message":"161","line":7,"column":5,"nodeType":"141","messageId":"142","endLine":7,"endColumn":12},{"ruleId":"139","severity":1,"message":"162","line":8,"column":5,"nodeType":"141","messageId":"142","endLine":8,"endColumn":11},{"ruleId":"139","severity":1,"message":"149","line":9,"column":5,"nodeType":"141","messageId":"142","endLine":9,"endColumn":11},{"ruleId":"139","severity":1,"message":"163","line":40,"column":12,"nodeType":"141","messageId":"142","endLine":40,"endColumn":16},{"ruleId":"139","severity":1,"message":"164","line":40,"column":18,"nodeType":"141","messageId":"142","endLine":40,"endColumn":25},{"ruleId":"139","severity":1,"message":"165","line":48,"column":65,"nodeType":"141","messageId":"142","endLine":48,"endColumn":74},{"ruleId":"139","severity":1,"message":"148","line":63,"column":11,"nodeType":"141","messageId":"142","endLine":63,"endColumn":15},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'IonInput' is defined but never used.","'radioButtonValue' is assigned a value but never used.","'trigger' is assigned a value but never used.","'useState' is defined but never used.","'prev' is assigned a value but never used.","'IonCol' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'IonPopover' is defined but never used.","'PopoverOptions' is defined but never used.","'IonRadioGroup' is defined but never used.","'toggleReorder' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'IonContent' is defined but never used.","'IonPage' is defined but never used.","'IonGrid' is defined but never used.","'IonRow' is defined but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'getValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]