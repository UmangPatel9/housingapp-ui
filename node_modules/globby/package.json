{
  "_args": [
    [
      {
        "raw": "globby@^11.0.3",
        "scope": null,
        "escapedName": "globby",
        "name": "globby",
        "rawSpec": "^11.0.3",
        "spec": ">=11.0.3 <12.0.0",
        "type": "range"
      },
      "G:\\Umang\\Housing app\\react app\\housingapp-ui\\node_modules\\@typescript-eslint\\typescript-estree"
    ]
  ],
  "_from": "globby@^11.0.3",
  "_hasShrinkwrap": false,
  "_id": "globby@11.0.4",
  "_location": "/globby",
  "_nodeVersion": "12.22.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/globby_11.0.4_1623850073303_0.7398850776225132"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "7.10.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "globby@^11.0.3",
    "scope": null,
    "escapedName": "globby",
    "name": "globby",
    "rawSpec": "^11.0.3",
    "spec": ">=11.0.3 <12.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@typescript-eslint/typescript-estree"
  ],
  "_resolved": "https://registry.npmjs.org/globby/-/globby-11.0.4.tgz",
  "_shasum": "2cbaff77c2f2a62e71e9b2813a67b97a3a3001a5",
  "_shrinkwrap": null,
  "_spec": "globby@^11.0.3",
  "_where": "G:\\Umang\\Housing app\\react app\\housingapp-ui\\node_modules\\@typescript-eslint\\typescript-estree",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "https://sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/globby/issues"
  },
  "dependencies": {
    "array-union": "^2.1.0",
    "dir-glob": "^3.0.1",
    "fast-glob": "^3.1.1",
    "ignore": "^5.1.4",
    "merge2": "^1.3.0",
    "slash": "^3.0.0"
  },
  "description": "User-friendly glob matching",
  "devDependencies": {
    "ava": "^3.13.0",
    "get-stream": "^6.0.0",
    "glob-stream": "^6.1.0",
    "globby": "github:sindresorhus/globby#main",
    "matcha": "^0.7.0",
    "rimraf": "^3.0.2",
    "tsd": "^0.13.1",
    "xo": "^0.33.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-9O4MVG9ioZJ08ffbcyVYyLOJLk5JQ688pJ4eMGLpdWLHq/Wr1D9BlriLQyL0E+jbkuePVZXYFj47QM/v093wHg==",
    "shasum": "2cbaff77c2f2a62e71e9b2813a67b97a3a3001a5",
    "tarball": "https://registry.npmjs.org/globby/-/globby-11.0.4.tgz",
    "fileCount": 7,
    "unpackedSize": 21758,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgyfxZCRA9TVsSAnZWagAAyyYP/1qmveok0cokUmxEySzG\ngX406MxsPte9d33hEMzO0Q7BSwukXHIDWdgeBpXlNwa3nLy6bmLAyz1LpbO8\nU9CIH2KlMsL9TrF0/3RoIKjTPr9Kwbvmy01yCY3FDRgHsMnpCbD0l+8ou6DW\nL5yZwadAeecfHbum0/Wfh9dwtSgauGrn2fVVcS2IALfo21QMFGq2pdm/yZRa\n0lDp/S0ax9Oeto1iz9FSCO2Ax1BCoJGpPVgWOi3Et9mNplzBNn8W8Y1Daq9s\n3OGXqwWCT3fm+BNGzN8BRByzYjaLh2ZR1/AlmE24o1UAPibc4dUqM16tFU7v\nusToD4WG+cRts2tQQvEwmSCq0l+cgp6jCLw9NG0gX8XjDdntOx5xAvjrQoT/\nqdAMhkV8SOS8EL01yslqoSC2htOade0CapuPRPZqeRpYxYHWbC3Qo+Py45G9\nc/aBgzGA5aq0URCI0P3mguctlfH61c2yM39TyBs1IXs6sOlYW3UK2UNPsK0t\nosVcw8iuzXLRPJM3NMZxwKx5vTNFu8y/Vh7cMFhbd1OujQUmImOW3s5TpUZC\nnBKcRnJFKRTFfDlUUC2kmdpHMmRARIyvcFoZVn4yxksAxE9tHihVsXAo88bS\neUpH+5z0QjC3ph6BErqDw/HAISWt/ThOFA5dbRtdigBVOPS+EanYZ8m4Ta4y\nwNGw\r\n=5W/n\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "index.js",
    "index.d.ts",
    "gitignore.js",
    "stream-utils.js"
  ],
  "funding": "https://github.com/sponsors/sindresorhus",
  "gitHead": "94e192c7b73fa76f9a95131fe4714aec94731ebe",
  "homepage": "https://github.com/sindresorhus/globby#readme",
  "keywords": [
    "all",
    "array",
    "directories",
    "expand",
    "files",
    "filesystem",
    "filter",
    "find",
    "fnmatch",
    "folders",
    "fs",
    "glob",
    "globbing",
    "globs",
    "gulpfriendly",
    "match",
    "matcher",
    "minimatch",
    "multi",
    "multiple",
    "paths",
    "pattern",
    "patterns",
    "traverse",
    "util",
    "utility",
    "wildcard",
    "wildcards",
    "promise",
    "gitignore",
    "git"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "globby",
  "optionalDependencies": {},
  "readme": "# globby\n\n> User-friendly glob matching\n\nBased on [`fast-glob`](https://github.com/mrmlnc/fast-glob) but adds a bunch of useful features.\n\n## Features\n\n- Promise API\n- Multiple patterns\n- Negated patterns: `['foo*', '!foobar']`\n- Expands directories: `foo` → `foo/**/*`\n- Supports `.gitignore`\n\n## Install\n\n```\n$ npm install globby\n```\n\n## Usage\n\n```\n├── unicorn\n├── cake\n└── rainbow\n```\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tconst paths = await globby(['*', '!cake']);\n\n\tconsole.log(paths);\n\t//=> ['unicorn', 'rainbow']\n})();\n```\n\n## API\n\nNote that glob patterns can only contain forward-slashes, not backward-slashes, so if you want to construct a glob pattern from path components, you need to use `path.posix.join()` instead of `path.join()`.\n\n### globby(patterns, options?)\n\nReturns a `Promise<string[]>` of matching paths.\n\n#### patterns\n\nType: `string | string[]`\n\nSee supported `minimatch` [patterns](https://github.com/isaacs/minimatch#usage).\n\n#### options\n\nType: `object`\n\nSee the [`fast-glob` options](https://github.com/mrmlnc/fast-glob#options-3) in addition to the ones below.\n\n##### expandDirectories\n\nType: `boolean | string[] | object`\\\nDefault: `true`\n\nIf set to `true`, `globby` will automatically glob directories for you. If you define an `Array` it will only glob files that matches the patterns inside the `Array`. You can also define an `object` with `files` and `extensions` like below:\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tconst paths = await globby('images', {\n\t\texpandDirectories: {\n\t\t\tfiles: ['cat', 'unicorn', '*.jpg'],\n\t\t\textensions: ['png']\n\t\t}\n\t});\n\n\tconsole.log(paths);\n\t//=> ['cat.png', 'unicorn.png', 'cow.jpg', 'rainbow.jpg']\n})();\n```\n\nNote that if you set this option to `false`, you won't get back matched directories unless you set `onlyFiles: false`.\n\n##### gitignore\n\nType: `boolean`\\\nDefault: `false`\n\nRespect ignore patterns in `.gitignore` files that apply to the globbed files.\n\n### globby.sync(patterns, options?)\n\nReturns `string[]` of matching paths.\n\n### globby.stream(patterns, options?)\n\nReturns a [`stream.Readable`](https://nodejs.org/api/stream.html#stream_readable_streams) of matching paths.\n\nSince Node.js 10, [readable streams are iterable](https://nodejs.org/api/stream.html#stream_readable_symbol_asynciterator), so you can loop over glob matches in a [`for await...of` loop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of) like this:\n\n```js\nconst globby = require('globby');\n\n(async () => {\n\tfor await (const path of globby.stream('*.tmp')) {\n\t\tconsole.log(path);\n\t}\n})();\n```\n\n### globby.generateGlobTasks(patterns, options?)\n\nReturns an `object[]` in the format `{pattern: string, options: Object}`, which can be passed as arguments to [`fast-glob`](https://github.com/mrmlnc/fast-glob). This is useful for other globbing-related packages.\n\nNote that you should avoid running the same tasks multiple times as they contain a file system cache. Instead, run this method each time to ensure file system changes are taken into consideration.\n\n### globby.hasMagic(patterns, options?)\n\nReturns a `boolean` of whether there are any special glob characters in the `patterns`.\n\nNote that the options affect the results.\n\nThis function is backed by [`fast-glob`](https://github.com/mrmlnc/fast-glob#isdynamicpatternpattern-options).\n\n### globby.gitignore(options?)\n\nReturns a `Promise<(path: string) => boolean>` indicating whether a given path is ignored via a `.gitignore` file.\n\nTakes `cwd?: string` and `ignore?: string[]` as options. `.gitignore` files matched by the ignore config are not used for the resulting filter function.\n\n```js\nconst {gitignore} = require('globby');\n\n(async () => {\n\tconst isIgnored = await gitignore();\n\tconsole.log(isIgnored('some/file'));\n})();\n```\n\n### globby.gitignore.sync(options?)\n\nReturns a `(path: string) => boolean` indicating whether a given path is ignored via a `.gitignore` file.\n\nTakes the same options as `globby.gitignore`.\n\n## Globbing patterns\n\nJust a quick overview.\n\n- `*` matches any number of characters, but not `/`\n- `?` matches a single character, but not `/`\n- `**` matches any number of characters, including `/`, as long as it's the only thing in a path part\n- `{}` allows for a comma-separated list of \"or\" expressions\n- `!` at the beginning of a pattern will negate the match\n\n[Various patterns and expected matches.](https://github.com/sindresorhus/multimatch/blob/main/test/test.js)\n\n## globby for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of globby and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-globby?utm_source=npm-globby&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [multimatch](https://github.com/sindresorhus/multimatch) - Match against a list instead of the filesystem\n- [matcher](https://github.com/sindresorhus/matcher) - Simple wildcard matching\n- [del](https://github.com/sindresorhus/del) - Delete files and directories\n- [make-dir](https://github.com/sindresorhus/make-dir) - Make a directory and its parents if needed\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/globby.git"
  },
  "scripts": {
    "bench": "npm update glob-stream fast-glob && matcha bench.js",
    "test": "xo && ava && tsd"
  },
  "version": "11.0.4",
  "xo": {
    "ignores": [
      "fixtures"
    ]
  }
}
