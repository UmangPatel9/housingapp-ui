[{"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx":"1","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts":"2","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts":"3","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx":"4","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx":"5","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx":"6","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx":"7","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx":"8","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx":"9","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx":"10","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx":"11","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx":"12","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx":"13","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx":"14","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx":"15","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx":"16","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx":"17","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx":"18","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx":"19","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx":"20","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx":"21","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx":"22","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx":"23","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx":"24","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx":"25","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx":"26","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx":"27","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx":"28","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx":"29","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx":"30"},{"size":197,"mtime":1632199423730,"results":"31","hashOfConfig":"32"},{"size":5256,"mtime":1630685610000,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1630685610000,"results":"34","hashOfConfig":"32"},{"size":3622,"mtime":1633871856386,"results":"35","hashOfConfig":"32"},{"size":1171,"mtime":1633522834456,"results":"36","hashOfConfig":"32"},{"size":3214,"mtime":1633522553982,"results":"37","hashOfConfig":"32"},{"size":4817,"mtime":1633502948222,"results":"38","hashOfConfig":"32"},{"size":4415,"mtime":1633502942367,"results":"39","hashOfConfig":"32"},{"size":10622,"mtime":1633502982576,"results":"40","hashOfConfig":"32"},{"size":10624,"mtime":1633524265820,"results":"41","hashOfConfig":"32"},{"size":11624,"mtime":1633502978588,"results":"42","hashOfConfig":"32"},{"size":3881,"mtime":1633590236797,"results":"43","hashOfConfig":"32"},{"size":3680,"mtime":1633695906943,"results":"44","hashOfConfig":"32"},{"size":1507,"mtime":1633524545428,"results":"45","hashOfConfig":"32"},{"size":4439,"mtime":1633522070980,"results":"46","hashOfConfig":"32"},{"size":3697,"mtime":1633524045935,"results":"47","hashOfConfig":"32"},{"size":5992,"mtime":1633523406234,"results":"48","hashOfConfig":"32"},{"size":3423,"mtime":1633766489920,"results":"49","hashOfConfig":"32"},{"size":1776,"mtime":1633089485868,"results":"50","hashOfConfig":"32"},{"size":5768,"mtime":1633524386933,"results":"51","hashOfConfig":"32"},{"size":33759,"mtime":1633337229768,"results":"52","hashOfConfig":"32"},{"size":1631,"mtime":1633337742523,"results":"53","hashOfConfig":"32"},{"size":3951,"mtime":1633691306825,"results":"54","hashOfConfig":"32"},{"size":5273,"mtime":1633685622094,"results":"55","hashOfConfig":"32"},{"size":7273,"mtime":1633872150966,"results":"56","hashOfConfig":"32"},{"size":3742,"mtime":1633759280504,"results":"57","hashOfConfig":"32"},{"size":9911,"mtime":1633870706632,"results":"58","hashOfConfig":"32"},{"size":11774,"mtime":1633872209730,"results":"59","hashOfConfig":"32"},{"size":9452,"mtime":1633871283480,"results":"60","hashOfConfig":"32"},{"size":10385,"mtime":1633871946514,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ftw0h2",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx",[],["136","137"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx",["138"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx",["139","140","141"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonContent, IonPage, IonLabel, IonInput, IonButton, IonGrid, IonRow, IonCol, IonItem, IonList, IonRadioGroup, IonListHeader, IonRadio } from '@ionic/react';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst TENANT = \"tenant\"\r\nconst MANAGEMENT = \"management\"\r\nconst STAFF = \"staff\"\r\n\r\nconst Signup: React.FC = () => {\r\n\r\n  const [userType, setUserType] = useState<string>();\r\n  // const [selected, setSelected] = useState<string>();\r\n  var radioButtonValue = \"\";\r\n  let history = useHistory();\r\n  const inputChangeHandler = (event: CustomEvent) => {\r\n    console.log(event?.detail?.value);\r\n    setUserType(event?.detail?.value); \r\n\r\n    // if(event.detail.value && event.detail.value === \"tenant\") {\r\n    //   console.log('tanant selected');\r\n    //   radioButtonValue = \"tenant\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"management\") {\r\n    //   console.log('management selected');\r\n    //   radioButtonValue = \"management\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"staff\") {\r\n    //   console.log('staff selected');\r\n    //   radioButtonValue = \"staff\";\r\n    // }\r\n\r\n  };\r\n  \r\n\r\n  const pageRediect = () => {\r\n    history.push(`/${userType}-signup`);\r\n    // switch(userType) {\r\n    //   case TENANT: {\r\n    //     history.push(\"/Tenant-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case MANAGEMENT: {\r\n    //     history.push(\"/Management-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case STAFF: {\r\n    //     history.push(\"/Staff-signup\");\r\n    //     break;\r\n    //   }\r\n    //   default: {\r\n    //     break;\r\n    //   }\r\n       \r\n    // }\r\n\r\n    // if ( radioButtonValue == \"tenant\" ) {\r\n    //   console.log('tenant checked');\r\n    //   history.push(\"/Tenant-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"management\" ) {\r\n    //   console.log('management checked');\r\n    //   history.push(\"/Management-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"staff\" ) {\r\n    //   console.log('staff checked');\r\n    //   history.push(\"/Staff-signup\");\r\n    // }\r\n  };\r\n\r\n  const doNothing = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n        <Header class=\"with-back-arrow\" onBack={doNothing} />\r\n\r\n        <IonContent fullscreen>\r\n            <IonGrid>\r\n                <IonRow className=\"signup-form login-form-row \">\r\n                    <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"6\">\r\n                        {/* <p>What are you registering as?</p> */}\r\n                        <IonList>\r\n                          <IonRadioGroup defaultValue={TENANT} onIonChange={inputChangeHandler}>\r\n                            <IonListHeader>\r\n                              <IonLabel>\r\n                                What are you registering as?\r\n                              </IonLabel>\r\n                            </IonListHeader>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Tenant\r\n                                <p>I am (or plan on) renting an apartment, condos or houses.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={TENANT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Management\r\n                                <p>I am plan to add and manage properties or apartments to rent.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={MANAGEMENT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Staff\r\n                                <p>I am staff member for a property.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={STAFF} />\r\n                              \r\n                            </IonItem>\r\n\r\n                          </IonRadioGroup>\r\n                        </IonList>\r\n\r\n                        \r\n                    </IonCol>\r\n\r\n                    <IonCol size=\"8\" sizeMd=\"4\" sizeLg=\"4\">\r\n                      <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" onClick={pageRediect}>\r\n                          Continue\r\n                      </IonButton>\r\n                    </IonCol>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Signup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx",["142"],"import { \r\n  IonContent, \r\n  IonPage, \r\n  IonLabel, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol,  \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   const doNothing = () => {\r\n\r\n   }\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow\"  onBack={doNothing}/>\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                     <FormProvider {...methods}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                           <h2>Create new password</h2>\r\n                           <p>Your new password must be different from previous used password.</p>\r\n\r\n                           <IonGrid>\r\n                              <IonRow>\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Enter new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput\r\n                                       mode=\"md\" \r\n                                       type=\"password\" \r\n                                       {...register('password1', {\r\n                                          required: 'Password is Required'\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password1\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Confirm new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput \r\n                                       mode=\"md\"\r\n                                       type=\"password\" \r\n                                       {...register('password2', {\r\n                                          // required: true,\r\n                                          validate: {\r\n                                             noMatch: (value: string) => {\r\n                                                return value !== getValues(\"password1\")\r\n                                                   ? \"Passwords do not match\"\r\n                                                   : undefined;\r\n                                             },\r\n                                          },\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password2\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                                    Reset Password\r\n                                    </IonButton>\r\n                                 </IonCol>\r\n                              </IonRow>\r\n                           </IonGrid>\r\n\r\n                        </form>\r\n                     </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx",["143"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst ManagementSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default ManagementSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx",["144","145"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst StaffSignup: React.FC = () => {\r\n\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, setValue, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\" onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                   value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                   message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default StaffSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx",["146"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst TenantSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   ;\r\n   ;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Lease Code (Optional):</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"number\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default TenantSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx",["147"],"import React, { useState } from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { \r\n    IonHeader, \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonImg,\r\n    IonButton,\r\n    IonPopover,\r\n    IonIcon,\r\n    useIonPopover,\r\n} from '@ionic/react';\r\n\r\nimport ChangePropertyPopover from './Change-Property-Popup';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst HeaderMain: React.FC = () => {\r\n    \r\n    let history = useHistory();\r\n    \r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    const [present, dismiss] = useIonPopover(ChangePropertyPopover, { onHide: () => dismiss() });\r\n\r\n    const pageBack = () => {\r\n      history.goBack();\r\n    };\r\n\r\n    return (\r\n        \r\n        <IonHeader className=\"inner-main-header\">\r\n            <IonGrid>\r\n                <IonRow className=\"\">\r\n\r\n                    <IonButton className=\"back-buton\" fill=\"clear\"  onClick={pageBack}>\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/back-arrow.svg\" />\r\n                    </IonButton>\r\n\r\n                    <div className=\"apart-logo\">\r\n                        <IonButton routerLink=\"/\" fill=\"clear\">\r\n                            <IonImg className=\"logo\" src=\"assets/images/aparto-logo.svg\" />\r\n                        </IonButton>\r\n                    </div>\r\n\r\n                    <IonPopover\r\n                        cssClass='my-custom-class'\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <p>This is popover content</p>\r\n                    </IonPopover>\r\n                    <IonButton className=\"notification-button ion-hide-lg-down\" fill=\"clear\" onClick={\r\n                        (e) => {\r\n                        // e.persist();\r\n                        setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                        }}\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        <span className=\"notification-count\">4</span>\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"message-button ion-hide-lg-down\" fill=\"clear\" routerLink=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        {/* <span className=\"notification-count\">4</span> */}\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"account-button ion-hide-lg-down\" fill=\"clear\" routerLink=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/ios-person.svg\"/>\r\n                    </IonButton>\r\n\r\n                    <IonButton \r\n                        className=\"change-property\" \r\n                        fill=\"clear\" \r\n                        onClick={(e) =>\r\n                          present({\r\n                            event: e.nativeEvent,\r\n                            cssClass: 'change-property-popup'\r\n                          })\r\n                        }\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        <div className=\"proerty-name\">BL1 <span className=\"ion-hide-lg-down\">- Belvedaire 1</span></div>\r\n                    </IonButton>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonHeader>\r\n        \r\n    );\r\n};\r\n\r\nexport default HeaderMain;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx",["148"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonButton,\r\n    IonIcon,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonRadio\r\n} from '@ionic/react';\r\n\r\nimport { createOutline, addOutline, close } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ChangePropertyPopover: React.FC <{\r\n    onHide: () => void;\r\n}>= ({ onHide }) => {\r\n\r\n    const inputChangeHandler = (event: CustomEvent) => {\r\n\r\n    };\r\n\r\n    return (\r\n                    \r\n        // <IonPopover\r\n        //     cssClass='change-property-popup'\r\n        //     event={changePropertypopoverState.event}\r\n        //     isOpen={changePropertypopoverState.showPopover}\r\n        //     onDidDismiss={() => setShowchangePropertyPopover({ showPopover: false, event: undefined })}\r\n        // >\r\n        <IonGrid className=\"change-property-popup-wrapper\">\r\n            <IonButton className=\"close-popup-button\" onClick={onHide} fill=\"clear\">\r\n                <IonIcon icon={close} />\r\n            </IonButton>   \r\n            <IonList>\r\n                <p>Select a propeprty...</p>\r\n                <IonRadioGroup onIonChange={inputChangeHandler}>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    BL1 - Belvedaire 1\r\n                    <p>10 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"BL1\" />\r\n                </IonItem>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    4MS - 400 Maisonneuve\r\n                    <p>400 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"4MS\" />\r\n                </IonItem>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    BL2 - Belvedaire 2\r\n                    <p>20 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"BL2\" />\r\n                </IonItem>\r\n\r\n                <IonItem className=\"user-select-item\">\r\n                    <IonLabel>\r\n                    1BR - 100 Berri\r\n                    <p>400 Maisonneuve, Montreal</p>\r\n                    </IonLabel>\r\n                    <IonRadio mode=\"md\" value=\"1BR\" />\r\n                </IonItem>\r\n\r\n                </IonRadioGroup>\r\n            </IonList>\r\n\r\n            <IonGrid>\r\n                <IonRow>\r\n                    <IonCol size=\"6\" className=\"login-btn\">\r\n                        <IonButton className=\"manage-property-btn\" routerLink=\"/manage-properties\" expand=\"block\" shape=\"round\" fill=\"solid\" >\r\n                        <div className=\"button-inner\">\r\n                            <IonIcon icon={createOutline} />\r\n                            <span>Manage List of Properties</span>\r\n                        </div>\r\n                        </IonButton>\r\n                    </IonCol>\r\n                    <IonCol size=\"6\" className=\"login-btn\">\r\n                        <IonButton className=\"add-property-btn secondary-button\" routerLink=\"/add-new-property\" expand=\"block\" shape=\"round\" fill=\"solid\">\r\n                        <div className=\"button-inner\">\r\n                            <IonIcon icon={addOutline} />\r\n                            <span>Add a Property</span>\r\n                        </div>\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonGrid> \r\n        // </IonPopover>\r\n        \r\n    );\r\n};\r\n\r\nexport default ChangePropertyPopover;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx",["149","150","151"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonPage,\r\n    IonContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonIcon,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonFabList,\r\n    IonButton,\r\n    IonReorder, \r\n    IonReorderGroup\r\n} from '@ionic/react';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport ManagePropertyMoreMenu from '../components/ManagePropertyMoreMenu';\r\nimport ManagePropertyArchievedMenu from '../components/ManagePropertyArchievedMenu';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport { add } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\n\r\nconst ManageProperties: React.FC = () => {\r\n\r\n    const toggleReorder = (event: CustomEvent<ItemReorderEventDetail>) => {\r\n        event.detail.complete();\r\n    };\r\n\r\n    return (\r\n\r\n        <IonPage>\r\n  \r\n            <HeaderMain />\r\n  \r\n            <IonContent className=\"dashboard-wrapper\" fullscreen>\r\n\r\n                <IonGrid className=\"dashboard-main-grid manage-property-wrapper\">  \r\n                    <IonRow class=\"dashboard-main-row\">\r\n\r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n                        \r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonList>\r\n                                <p>Add, rearrange, edit or delete properties.</p>\r\n                                <IonReorderGroup>\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            BL1 - Belvedaire 1\r\n                                            <p>10 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            4MS - 400 Maisonneuve\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item archieved-propeprty\">\r\n                                        <IonLabel>\r\n                                            BL2 - Belvedaire 2\r\n                                            <p>20 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyArchievedMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            1BR - 100 Berri\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n                                </IonReorderGroup>\r\n                            </IonList>\r\n                        </IonCol>\r\n                        \r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n                    \r\n                    </IonRow>\r\n\r\n                </IonGrid>\r\n                 \r\n\r\n                <IonFab className=\"property-fab-button\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton>\r\n                        <IonIcon src=\"/assets/images/format_list_bulleted.svg\"  />\r\n                    </IonFabButton>\r\n                    <IonFabList side=\"top\">\r\n                        <IonList>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\" routerLink=\"/add-new-property\">\r\n                                    <IonIcon icon={add} />  \r\n                                    <span>Add a Property</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon icon=\"/assets/images/reorder.svg\"  />\r\n                                    <span>Rearrange List</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon />\r\n                                    <span>Hide Archieved</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        </IonList>\r\n                    </IonFabList>\r\n                </IonFab>\r\n            </IonContent>\r\n\r\n            <Footer />\r\n            <FooterMobile />\r\n\r\n        </IonPage>\r\n        \r\n    );\r\n};\r\n\r\nexport default ManageProperties;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx",["152","153","154","155","156"],"import React from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton,  \r\n    IonCol, \r\n    IonList,\r\n    IonItem,\r\n    IonAvatar\r\n  } from '@ionic/react';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst DashboardSidebar: React.FC = () => {\r\n    return (\r\n\r\n        <IonCol className=\"dashboard-sidebar\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n            <p className=\"ion-hide-lg-up\">What would you like to do today?</p>\r\n\r\n            <IonList className=\"sidebar-menu-list\">\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" routerLink=\"/manage-tenants\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Manage-Lease-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Tenants</b> & <b>Leases</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" routerLink=\"#\">\r\n                        <div className=\"dashboard-button-inner\">    \r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Pay-Rent-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Rents</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" routerLink=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Repair-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Repairs</b> & <b>Requests</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" routerLink=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Posts-Home-Icon.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Posts</b> & <b>Marketplace</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" slot=\"start\" fill=\"clear\" routerLink=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Staff-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Staff</b> accesses</IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n            </IonList>\r\n        </IonCol>\r\n        \r\n    );\r\n};\r\n\r\nexport default DashboardSidebar;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx",["157","158","159","160","161"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyMoreMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" href=\"#\">Modify</IonButton>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\"  color=\"danger\" href=\"#\">Remove</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyMoreMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx",["162","163"],"import React, { useState } from \"react\";\r\n\r\nimport { \r\n    IonFooter, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonButton,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonList,\r\n    IonItem,\r\n    IonAvatar,\r\n    IonLabel\r\n} from '@ionic/react';\r\n\r\nimport { menuOutline, settingsSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst FooterMobile: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <IonFooter className=\"ion-hide-lg-up\">\r\n            <IonGrid>\r\n\r\n                <IonRow>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-notification-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-home-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-message-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonPopover\r\n                        cssClass='my-custom-class' \r\n                        mode=\"ios\"\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <IonList className=\"footer-mobile-menu\">\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">\r\n                                        <IonIcon icon=\"/assets/images/swap-horizontal.svg\"  />\r\n                                        <span className=\"\">Tenant Account</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/ios-person.svg\"  />\r\n                                        <span className=\"\">Account Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/bill-icon.svg\"  />\r\n                                        <span className=\"\">Billing History</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon={settingsSharp}  />\r\n                                        <span className=\"\">Service Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">FAQ</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">Logout</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                        </IonList>\r\n                    </IonPopover>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton \r\n                            className=\"footer-menu-button\" \r\n                            fill=\"clear\"\r\n                            onClick={\r\n                                    (e) => {\r\n                                    // e.persist();\r\n                                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                                }}\r\n                        >\r\n                            <IonIcon slot=\"icon-only\" icon={menuOutline} />\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n\r\n            </IonGrid>\r\n        </IonFooter>\r\n        \r\n    );\r\n};\r\n\r\nexport default FooterMobile;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx",["164","165","166","167","168"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow,\r\n    IonCol, \r\n    IonLabel, \r\n    IonInput, \r\n    IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonNote,\r\n    IonItem,\r\n    IonIcon\r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm, Controller } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport { close } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n    initialSlide: 0,\r\n    speed: 400\r\n};\r\n\r\nconst AddNewProperty: React.FC = () => {\r\n    const mySlides = useRef<any>(null);\r\n\r\n    const [city, setCity] = useState<string>(); \r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n    const scrollToTop= () => {\r\n        contentRef.current && contentRef.current.scrollToTop();\r\n    };\r\n\r\n    const methods = useForm();\r\n    const { register, trigger, handleSubmit, control, setValue, getValues, formState: { errors } } = methods;\r\n\r\n    useEffect(() => {\r\n        mySlides.current.lockSwipes(true);\r\n    });\r\n\r\n    const next = async (fields: any) => {\r\n        const result = await trigger(fields);\r\n        if (!result) return;\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slideNext();\r\n        await mySlides.current.lockSwipes(true);\r\n        scrollToTop();\r\n    };\r\n\r\n    const prev = async () => {\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slidePrev();\r\n        await mySlides.current.lockSwipes(true);\r\n    };\r\n    \r\n        \r\n    const onSubmit = (data: any) => {\r\n        console.log(data);\r\n    };\r\n\r\n\r\n    return (\r\n    <IonPage>\r\n\r\n         <HeaderMain />\r\n\r\n         <IonContent className=\"dashboard-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n\r\n            <IonGrid className=\"dashboard-main-grid add-proepry-wrapper\">\r\n                <IonRow className=\"ion-justify-content-between dashboard-main-row\">\r\n\r\n                    {/* sidebar start  */}\r\n                    <DashboardSidebar />\r\n                    {/* sidebar end  */}\r\n                        \r\n                    <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"4\">\r\n                        <FormProvider {...methods}>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow className=\"ion-justify-content-center\">\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Property Name</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyName', {\r\n                                                            required: 'Property name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyName\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Property Name Suffix (3 Characters)</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyNameSuffix', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z]{3}$/i,\r\n                                                                message: 'Property name suffix should only contain characters and it should not more than 3 characters.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyNameSuffix\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Address</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyAddress', {\r\n                                                            required: 'Address is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyAddress\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">City</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('city', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"city1\">City 1</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city2\">City 2</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city3\">City 3</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city4\">City 4</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city5\">City 5</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"city\"\r\n                                                        rules={{ required: 'Please select city' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"city\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Province/State</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('state', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"state1\">State 1</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state2\">State 2</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state3\">State 3</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state4\">State 4</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state5\">State 5</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"state\"\r\n                                                        rules={{ required: 'Please select State' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"state\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Country</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('country', {\r\n                                                            required: 'Country name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"country\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Postal code</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('postalCode', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z0-9]{6}$/i,\r\n                                                                message: 'Please enter a valid postal code.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"postalCode\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['propertyName','propertyNameSuffix', 'propertyAddress', 'city', 'state', 'country', 'postalCode'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next([])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow className=\"ion-justify-content-center\">\r\n\r\n                                                <IonNote>Roughly estimate the number of apartments per floor in your building. After generating the building, you will be able to specifically change the layout per floor if some floor do not have the same number of apartments.</IonNote>\r\n\r\n                                                <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"margin-right-auto form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Number of Floors</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\"   \r\n                                                        {...register('numberOfFloors', {\r\n                                                            required: 'Please mention number of floors.',\r\n                                                            pattern: {\r\n                                                                value: /\\d{3}$/i,\r\n                                                                message: 'Invalid floor number'\r\n                                                             }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"numberOfFloors\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Number of Apartments per Floor</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\"   \r\n                                                        {...register('numberOfApartments', {\r\n                                                            required: 'Please mention number of Apartments per floor.',\r\n                                                            pattern: {\r\n                                                                value: /^[0-9]{3}$/i,\r\n                                                                message: 'Invalid number of apartments per floor'\r\n                                                             }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"numberOfApartments\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Units Number Format</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('unitesNumberFormat', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"101\">101</IonSelectOption>\r\n                                                            <IonSelectOption value=\"102\">102</IonSelectOption>\r\n                                                            <IonSelectOption value=\"103\">103</IonSelectOption>\r\n                                                            <IonSelectOption value=\"104\">104</IonSelectOption>\r\n                                                            <IonSelectOption value=\"105\">105</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"unitesNumberFormat\"\r\n                                                        rules={{ required: 'Please select Units Number Formate' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"unitesNumberFormat\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['numberOfFloors', 'numberOfApartments', 'unitesNumberFormat'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next([])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n\r\n                                        <div>\r\n                                            <IonNote>You are almost done adding the property to your account. To customize a floor, select a floor from the dropdown menu, then add, remove or change the apartment number format to match the ones that you own.</IonNote>\r\n\r\n                                            <div className=\"generated-floor-box\">\r\n                                                <IonGrid>\r\n                                                    <IonRow className=\"ion-justify-content-center\">\r\n                                                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"form-field margin-right-auto\">\r\n                                                            <IonLabel className=\"form-lable\">Choose a floor</IonLabel>\r\n                                                            <Controller\r\n                                                                render={({ field }) => (\r\n                                                                <IonSelect\r\n                                                                    mode=\"md\"\r\n                                                                    placeholder=\"\"\r\n                                                                    // value={field.value}\r\n                                                                    value=\"5\"\r\n                                                                    onIonChange={e => setValue('chooseFloor', e.detail.value)}\r\n                                                                >\r\n                                                                    <IonSelectOption value=\"5\">5</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"6\">6</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"7\">7</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"8\">8</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"9\">9</IonSelectOption>\r\n                                                                </IonSelect>\r\n                                                                )}\r\n                                                                control={control}   \r\n                                                                name=\"chooseFloor\"\r\n                                                                rules={{ required: 'Please choose floor' }}\r\n                                                            />\r\n                                                            <ErrorMessage\r\n                                                                errors={errors}\r\n                                                                name=\"unitesNumberFormat\"\r\n                                                                as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                            />\r\n                                                        </IonCol>\r\n\r\n                                                        <IonCol size=\"12\" className=\"form-field\">\r\n                                                            <IonLabel className=\"form-lable\">Add, rename or delete apartment:</IonLabel>\r\n                                                            <IonGrid>\r\n                                                                <IonRow className=\"ion-justify-content-start\">\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"501\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"502\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"503\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"504\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"505\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"506\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info add-unit-button\">\r\n                                                                            <IonButton className=\"\" fill=\"clear\">\r\n                                                                                <IonLabel>Add a Unit</IonLabel>\r\n                                                                            </IonButton>\r\n                                                                            \r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n                                                                </IonRow>\r\n                                                            </IonGrid>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                </IonGrid>   \r\n                                            </div>\r\n\r\n                                            <IonGrid>\r\n                                                <IonRow className=\"ion-justify-content-center\">                     <IonCol size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\"     className=\"form-field sign-up-btn\">\r\n                                                        <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                                                Submit\r\n                                                        </IonButton>\r\n                                                    </IonCol>\r\n\r\n                                                </IonRow>\r\n                                            </IonGrid>\r\n                                        </div>\r\n\r\n                                    </IonSlide>\r\n\r\n                                </IonSlides>\r\n                            </form>\r\n                        </FormProvider>\r\n                    </IonCol>\r\n\r\n                    {/* dashboar posts start */}\r\n                    <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                    </IonCol>\r\n                    {/* dashboar post end */}\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n\r\n            <Footer />\r\n\r\n        </IonContent>\r\n\r\n        \r\n        <FooterMobile />\r\n\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default AddNewProperty;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx",["169","170","171","172","173"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyArchievedMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" href=\"#\">Restore</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyArchievedMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx",["174"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx",["175","176","177","178"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx",["179","180","181"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx",["182","183","184","185"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx",["186","187","188","189"],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":18},{"ruleId":"194","severity":1,"message":"198","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":23},{"ruleId":"194","severity":1,"message":"199","line":4,"column":41,"nodeType":"196","messageId":"197","endLine":4,"endColumn":49},{"ruleId":"194","severity":1,"message":"200","line":19,"column":7,"nodeType":"196","messageId":"197","endLine":19,"endColumn":23},{"ruleId":"194","severity":1,"message":"201","line":23,"column":22,"nodeType":"196","messageId":"197","endLine":23,"endColumn":29},{"ruleId":"194","severity":1,"message":"202","line":1,"column":36,"nodeType":"196","messageId":"197","endLine":1,"endColumn":44},{"ruleId":"194","severity":1,"message":"202","line":1,"column":36,"nodeType":"196","messageId":"197","endLine":1,"endColumn":44},{"ruleId":"194","severity":1,"message":"203","line":35,"column":56,"nodeType":"196","messageId":"197","endLine":35,"endColumn":64},{"ruleId":"194","severity":1,"message":"202","line":1,"column":36,"nodeType":"196","messageId":"197","endLine":1,"endColumn":44},{"ruleId":"194","severity":1,"message":"204","line":8,"column":5,"nodeType":"196","messageId":"197","endLine":8,"endColumn":11},{"ruleId":"194","severity":1,"message":"202","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"202","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"205","line":10,"column":5,"nodeType":"196","messageId":"197","endLine":10,"endColumn":18},{"ruleId":"194","severity":1,"message":"206","line":39,"column":11,"nodeType":"196","messageId":"197","endLine":39,"endColumn":24},{"ruleId":"207","severity":1,"message":"208","line":26,"column":33,"nodeType":"209","endLine":26,"endColumn":82},{"ruleId":"207","severity":1,"message":"208","line":37,"column":33,"nodeType":"209","endLine":37,"endColumn":78},{"ruleId":"207","severity":1,"message":"208","line":48,"column":33,"nodeType":"209","endLine":48,"endColumn":76},{"ruleId":"207","severity":1,"message":"208","line":59,"column":33,"nodeType":"209","endLine":59,"endColumn":80},{"ruleId":"207","severity":1,"message":"208","line":70,"column":33,"nodeType":"209","endLine":70,"endColumn":75},{"ruleId":"194","severity":1,"message":"210","line":4,"column":5,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"194","severity":1,"message":"211","line":5,"column":5,"nodeType":"196","messageId":"197","endLine":5,"endColumn":12},{"ruleId":"194","severity":1,"message":"212","line":7,"column":5,"nodeType":"196","messageId":"197","endLine":7,"endColumn":12},{"ruleId":"194","severity":1,"message":"213","line":8,"column":5,"nodeType":"196","messageId":"197","endLine":8,"endColumn":11},{"ruleId":"194","severity":1,"message":"204","line":9,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":11},{"ruleId":"194","severity":1,"message":"214","line":13,"column":5,"nodeType":"196","messageId":"197","endLine":13,"endColumn":14},{"ruleId":"194","severity":1,"message":"215","line":14,"column":5,"nodeType":"196","messageId":"197","endLine":14,"endColumn":13},{"ruleId":"194","severity":1,"message":"216","line":17,"column":5,"nodeType":"196","messageId":"197","endLine":17,"endColumn":12},{"ruleId":"194","severity":1,"message":"217","line":44,"column":12,"nodeType":"196","messageId":"197","endLine":44,"endColumn":16},{"ruleId":"194","severity":1,"message":"218","line":44,"column":18,"nodeType":"196","messageId":"197","endLine":44,"endColumn":25},{"ruleId":"194","severity":1,"message":"219","line":52,"column":65,"nodeType":"196","messageId":"197","endLine":52,"endColumn":74},{"ruleId":"194","severity":1,"message":"220","line":67,"column":11,"nodeType":"196","messageId":"197","endLine":67,"endColumn":15},{"ruleId":"194","severity":1,"message":"210","line":4,"column":5,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"194","severity":1,"message":"211","line":5,"column":5,"nodeType":"196","messageId":"197","endLine":5,"endColumn":12},{"ruleId":"194","severity":1,"message":"212","line":7,"column":5,"nodeType":"196","messageId":"197","endLine":7,"endColumn":12},{"ruleId":"194","severity":1,"message":"213","line":8,"column":5,"nodeType":"196","messageId":"197","endLine":8,"endColumn":11},{"ruleId":"194","severity":1,"message":"204","line":9,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":11},{"ruleId":"194","severity":1,"message":"221","line":13,"column":23,"nodeType":"196","messageId":"197","endLine":13,"endColumn":31},{"ruleId":"194","severity":1,"message":"202","line":1,"column":24,"nodeType":"196","messageId":"197","endLine":1,"endColumn":32},{"ruleId":"194","severity":1,"message":"222","line":9,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":12},{"ruleId":"194","severity":1,"message":"216","line":18,"column":5,"nodeType":"196","messageId":"197","endLine":18,"endColumn":12},{"ruleId":"194","severity":1,"message":"223","line":21,"column":32,"nodeType":"196","messageId":"197","endLine":21,"endColumn":43},{"ruleId":"194","severity":1,"message":"222","line":9,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":12},{"ruleId":"194","severity":1,"message":"216","line":19,"column":5,"nodeType":"196","messageId":"197","endLine":19,"endColumn":12},{"ruleId":"194","severity":1,"message":"223","line":22,"column":32,"nodeType":"196","messageId":"197","endLine":22,"endColumn":43},{"ruleId":"194","severity":1,"message":"222","line":9,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":12},{"ruleId":"194","severity":1,"message":"216","line":19,"column":5,"nodeType":"196","messageId":"197","endLine":19,"endColumn":12},{"ruleId":"194","severity":1,"message":"224","line":22,"column":10,"nodeType":"196","messageId":"197","endLine":22,"endColumn":15},{"ruleId":"194","severity":1,"message":"223","line":22,"column":32,"nodeType":"196","messageId":"197","endLine":22,"endColumn":43},{"ruleId":"194","severity":1,"message":"202","line":1,"column":24,"nodeType":"196","messageId":"197","endLine":1,"endColumn":32},{"ruleId":"194","severity":1,"message":"222","line":9,"column":5,"nodeType":"196","messageId":"197","endLine":9,"endColumn":12},{"ruleId":"194","severity":1,"message":"216","line":18,"column":5,"nodeType":"196","messageId":"197","endLine":18,"endColumn":12},{"ruleId":"194","severity":1,"message":"223","line":21,"column":32,"nodeType":"196","messageId":"197","endLine":21,"endColumn":43},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'IonInput' is defined but never used.","'radioButtonValue' is assigned a value but never used.","'trigger' is assigned a value but never used.","'useState' is defined but never used.","'setValue' is assigned a value but never used.","'IonCol' is defined but never used.","'IonRadioGroup' is defined but never used.","'toggleReorder' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IonContent' is defined but never used.","'IonPage' is defined but never used.","'IonGrid' is defined but never used.","'IonRow' is defined but never used.","'IonAvatar' is defined but never used.","'IonLabel' is defined but never used.","'IonItem' is defined but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'getValues' is assigned a value but never used.","'prev' is assigned a value but never used.","'addSharp' is defined but never used.","'IonList' is defined but never used.","'chevronDown' is defined but never used.","'close' is defined but never used.","no-global-assign","no-unsafe-negation"]