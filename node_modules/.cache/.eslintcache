[{"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx":"1","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts":"2","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts":"3","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx":"4","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx":"5","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx":"6","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx":"7","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx":"8","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx":"9","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx":"10","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx":"11","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx":"12","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx":"13","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx":"14","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx":"15","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx":"16","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx":"17","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx":"18","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx":"19","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx":"20","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx":"21","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx":"22","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx":"23","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx":"24","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx":"25","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx":"26","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx":"27","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx":"28","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx":"29","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx":"30","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-rents.tsx":"31","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsGeneralTab.tsx":"32","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsSearchTab.tsx":"33","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Rent-pay-details.tsx":"34"},{"size":197,"mtime":1632199423730,"results":"35","hashOfConfig":"36"},{"size":5256,"mtime":1630685610000,"results":"37","hashOfConfig":"36"},{"size":425,"mtime":1630685610000,"results":"38","hashOfConfig":"36"},{"size":3906,"mtime":1634033327328,"results":"39","hashOfConfig":"36"},{"size":1171,"mtime":1633522834456,"results":"40","hashOfConfig":"36"},{"size":3214,"mtime":1633522553982,"results":"41","hashOfConfig":"36"},{"size":4817,"mtime":1633502948222,"results":"42","hashOfConfig":"36"},{"size":4415,"mtime":1633502942367,"results":"43","hashOfConfig":"36"},{"size":10622,"mtime":1633502982576,"results":"44","hashOfConfig":"36"},{"size":10624,"mtime":1633524265820,"results":"45","hashOfConfig":"36"},{"size":11624,"mtime":1633502978588,"results":"46","hashOfConfig":"36"},{"size":3881,"mtime":1633590236797,"results":"47","hashOfConfig":"36"},{"size":3680,"mtime":1633695906943,"results":"48","hashOfConfig":"36"},{"size":1507,"mtime":1633524545428,"results":"49","hashOfConfig":"36"},{"size":4439,"mtime":1633522070980,"results":"50","hashOfConfig":"36"},{"size":3761,"mtime":1634018368699,"results":"51","hashOfConfig":"36"},{"size":5992,"mtime":1633523406234,"results":"52","hashOfConfig":"36"},{"size":3626,"mtime":1634041004507,"results":"53","hashOfConfig":"36"},{"size":1788,"mtime":1634016874629,"results":"54","hashOfConfig":"36"},{"size":5764,"mtime":1633958231266,"results":"55","hashOfConfig":"36"},{"size":33759,"mtime":1633337229768,"results":"56","hashOfConfig":"36"},{"size":1637,"mtime":1634016904596,"results":"57","hashOfConfig":"36"},{"size":3951,"mtime":1633691306825,"results":"58","hashOfConfig":"36"},{"size":5273,"mtime":1633947879703,"results":"59","hashOfConfig":"36"},{"size":7273,"mtime":1633921683389,"results":"60","hashOfConfig":"36"},{"size":3742,"mtime":1633759280504,"results":"61","hashOfConfig":"36"},{"size":9911,"mtime":1633870706632,"results":"62","hashOfConfig":"36"},{"size":26481,"mtime":1633935488348,"results":"63","hashOfConfig":"36"},{"size":9452,"mtime":1633871283480,"results":"64","hashOfConfig":"36"},{"size":12895,"mtime":1633935625645,"results":"65","hashOfConfig":"36"},{"size":3958,"mtime":1633941880262,"results":"66","hashOfConfig":"36"},{"size":9524,"mtime":1634014150836,"results":"67","hashOfConfig":"36"},{"size":5030,"mtime":1633957706542,"results":"68","hashOfConfig":"36"},{"size":8764,"mtime":1633945142710,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ftw0h2",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"72"},"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx",[],["155","156"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx",["157"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx",["158","159","160"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonContent, IonPage, IonLabel, IonInput, IonButton, IonGrid, IonRow, IonCol, IonItem, IonList, IonRadioGroup, IonListHeader, IonRadio } from '@ionic/react';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst TENANT = \"tenant\"\r\nconst MANAGEMENT = \"management\"\r\nconst STAFF = \"staff\"\r\n\r\nconst Signup: React.FC = () => {\r\n\r\n  const [userType, setUserType] = useState<string>();\r\n  // const [selected, setSelected] = useState<string>();\r\n  var radioButtonValue = \"\";\r\n  let history = useHistory();\r\n  const inputChangeHandler = (event: CustomEvent) => {\r\n    console.log(event?.detail?.value);\r\n    setUserType(event?.detail?.value); \r\n\r\n    // if(event.detail.value && event.detail.value === \"tenant\") {\r\n    //   console.log('tanant selected');\r\n    //   radioButtonValue = \"tenant\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"management\") {\r\n    //   console.log('management selected');\r\n    //   radioButtonValue = \"management\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"staff\") {\r\n    //   console.log('staff selected');\r\n    //   radioButtonValue = \"staff\";\r\n    // }\r\n\r\n  };\r\n  \r\n\r\n  const pageRediect = () => {\r\n    history.push(`/${userType}-signup`);\r\n    // switch(userType) {\r\n    //   case TENANT: {\r\n    //     history.push(\"/Tenant-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case MANAGEMENT: {\r\n    //     history.push(\"/Management-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case STAFF: {\r\n    //     history.push(\"/Staff-signup\");\r\n    //     break;\r\n    //   }\r\n    //   default: {\r\n    //     break;\r\n    //   }\r\n       \r\n    // }\r\n\r\n    // if ( radioButtonValue == \"tenant\" ) {\r\n    //   console.log('tenant checked');\r\n    //   history.push(\"/Tenant-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"management\" ) {\r\n    //   console.log('management checked');\r\n    //   history.push(\"/Management-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"staff\" ) {\r\n    //   console.log('staff checked');\r\n    //   history.push(\"/Staff-signup\");\r\n    // }\r\n  };\r\n\r\n  const doNothing = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n        <Header class=\"with-back-arrow\" onBack={doNothing} />\r\n\r\n        <IonContent fullscreen>\r\n            <IonGrid>\r\n                <IonRow className=\"signup-form login-form-row \">\r\n                    <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"6\">\r\n                        {/* <p>What are you registering as?</p> */}\r\n                        <IonList>\r\n                          <IonRadioGroup defaultValue={TENANT} onIonChange={inputChangeHandler}>\r\n                            <IonListHeader>\r\n                              <IonLabel>\r\n                                What are you registering as?\r\n                              </IonLabel>\r\n                            </IonListHeader>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Tenant\r\n                                <p>I am (or plan on) renting an apartment, condos or houses.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={TENANT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Management\r\n                                <p>I am plan to add and manage properties or apartments to rent.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={MANAGEMENT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Staff\r\n                                <p>I am staff member for a property.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={STAFF} />\r\n                              \r\n                            </IonItem>\r\n\r\n                          </IonRadioGroup>\r\n                        </IonList>\r\n\r\n                        \r\n                    </IonCol>\r\n\r\n                    <IonCol size=\"8\" sizeMd=\"4\" sizeLg=\"4\">\r\n                      <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" onClick={pageRediect}>\r\n                          Continue\r\n                      </IonButton>\r\n                    </IonCol>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Signup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx",["161"],"import { \r\n  IonContent, \r\n  IonPage, \r\n  IonLabel, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol,  \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   const doNothing = () => {\r\n\r\n   }\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow\"  onBack={doNothing}/>\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                     <FormProvider {...methods}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                           <h2>Create new password</h2>\r\n                           <p>Your new password must be different from previous used password.</p>\r\n\r\n                           <IonGrid>\r\n                              <IonRow>\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Enter new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput\r\n                                       mode=\"md\" \r\n                                       type=\"password\" \r\n                                       {...register('password1', {\r\n                                          required: 'Password is Required'\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password1\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Confirm new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput \r\n                                       mode=\"md\"\r\n                                       type=\"password\" \r\n                                       {...register('password2', {\r\n                                          // required: true,\r\n                                          validate: {\r\n                                             noMatch: (value: string) => {\r\n                                                return value !== getValues(\"password1\")\r\n                                                   ? \"Passwords do not match\"\r\n                                                   : undefined;\r\n                                             },\r\n                                          },\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password2\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                                    Reset Password\r\n                                    </IonButton>\r\n                                 </IonCol>\r\n                              </IonRow>\r\n                           </IonGrid>\r\n\r\n                        </form>\r\n                     </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx",["162"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst ManagementSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default ManagementSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx",["163","164"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst StaffSignup: React.FC = () => {\r\n\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, setValue, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\" onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                   value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                   message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default StaffSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx",["165"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst TenantSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   ;\r\n   ;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Lease Code (Optional):</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"number\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default TenantSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx",["166"],"import React, { useState } from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { \r\n    IonHeader, \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonImg,\r\n    IonButton,\r\n    IonPopover,\r\n    IonIcon,\r\n    useIonPopover,\r\n} from '@ionic/react';\r\n\r\nimport ChangePropertyPopover from './Change-Property-Popup';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst HeaderMain: React.FC = () => {\r\n    \r\n    let history = useHistory();\r\n    \r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    const [present, dismiss] = useIonPopover(ChangePropertyPopover, { onHide: () => dismiss() });\r\n\r\n    const pageBack = () => {\r\n      history.goBack();\r\n    };\r\n\r\n    return (\r\n        \r\n        <IonHeader className=\"inner-main-header\">\r\n            <IonGrid>\r\n                <IonRow className=\"\">\r\n\r\n                    <IonButton className=\"back-buton\" fill=\"clear\"  onClick={pageBack}>\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/back-arrow.svg\" />\r\n                    </IonButton>\r\n\r\n                    <div className=\"apart-logo\">\r\n                        <IonButton routerLink=\"/\" fill=\"clear\">\r\n                            <IonImg className=\"logo\" src=\"assets/images/aparto-logo.svg\" />\r\n                        </IonButton>\r\n                    </div>\r\n\r\n                    <IonPopover\r\n                        cssClass='my-custom-class'\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <p>This is popover content</p>\r\n                    </IonPopover>\r\n                    <IonButton className=\"notification-button ion-hide-lg-down\" fill=\"clear\" onClick={\r\n                        (e) => {\r\n                        // e.persist();\r\n                        setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                        }}\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        <span className=\"notification-count\">4</span>\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"message-button ion-hide-lg-down\" fill=\"clear\" routerLink=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        {/* <span className=\"notification-count\">4</span> */}\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"account-button ion-hide-lg-down\" fill=\"clear\" routerLink=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/ios-person.svg\"/>\r\n                    </IonButton>\r\n\r\n                    <IonButton \r\n                        className=\"change-property\" \r\n                        fill=\"clear\" \r\n                        onClick={(e) =>\r\n                          present({\r\n                            event: e.nativeEvent,\r\n                            cssClass: 'change-property-popup'\r\n                          })\r\n                        }\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        <div className=\"proerty-name\">BL1 <span className=\"ion-hide-lg-down\">- Belvedaire 1</span></div>\r\n                    </IonButton>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonHeader>\r\n        \r\n    );\r\n};\r\n\r\nexport default HeaderMain;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx",["167"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx",["168","169","170"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonPage,\r\n    IonContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonIcon,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonFabList,\r\n    IonButton,\r\n    IonReorder, \r\n    IonReorderGroup\r\n} from '@ionic/react';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport ManagePropertyMoreMenu from '../components/ManagePropertyMoreMenu';\r\nimport ManagePropertyArchievedMenu from '../components/ManagePropertyArchievedMenu';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport { add } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\n\r\nconst ManageProperties: React.FC = () => {\r\n\r\n    const toggleReorder = (event: CustomEvent<ItemReorderEventDetail>) => {\r\n        event.detail.complete();\r\n    };\r\n\r\n    return (\r\n\r\n        <IonPage>\r\n  \r\n            <HeaderMain />\r\n  \r\n            <IonContent className=\"dashboard-wrapper\" fullscreen>\r\n\r\n                <IonGrid className=\"dashboard-main-grid manage-property-wrapper\">  \r\n                    <IonRow class=\"dashboard-main-row\">\r\n\r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n                        \r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonList>\r\n                                <p>Add, rearrange, edit or delete properties.</p>\r\n                                <IonReorderGroup>\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            BL1 - Belvedaire 1\r\n                                            <p>10 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            4MS - 400 Maisonneuve\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item archieved-propeprty\">\r\n                                        <IonLabel>\r\n                                            BL2 - Belvedaire 2\r\n                                            <p>20 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyArchievedMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            1BR - 100 Berri\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n                                </IonReorderGroup>\r\n                            </IonList>\r\n                        </IonCol>\r\n                        \r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n                    \r\n                    </IonRow>\r\n\r\n                </IonGrid>\r\n                 \r\n\r\n                <IonFab className=\"property-fab-button\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton>\r\n                        <IonIcon src=\"/assets/images/format_list_bulleted.svg\"  />\r\n                    </IonFabButton>\r\n                    <IonFabList side=\"top\">\r\n                        <IonList>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\" routerLink=\"/add-new-property\">\r\n                                    <IonIcon icon={add} />  \r\n                                    <span>Add a Property</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon icon=\"/assets/images/reorder.svg\"  />\r\n                                    <span>Rearrange List</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon />\r\n                                    <span>Hide Archieved</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        </IonList>\r\n                    </IonFabList>\r\n                </IonFab>\r\n            </IonContent>\r\n\r\n            <Footer />\r\n            <FooterMobile />\r\n\r\n        </IonPage>\r\n        \r\n    );\r\n};\r\n\r\nexport default ManageProperties;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx",["171","172","173","174","175","176","177","178","179","180","181","182"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx",["183","184","185","186","187"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx",["188","189"],"import React, { useState } from \"react\";\r\n\r\nimport { \r\n    IonFooter, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonButton,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonList,\r\n    IonItem,\r\n    IonAvatar,\r\n    IonLabel\r\n} from '@ionic/react';\r\n\r\nimport { menuOutline, settingsSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst FooterMobile: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <IonFooter className=\"ion-hide-lg-up\">\r\n            <IonGrid>\r\n\r\n                <IonRow>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-notification-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-home-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-message-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonPopover\r\n                        cssClass='footer-menu' \r\n                        mode=\"ios\"\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <IonList className=\"footer-mobile-menu\">\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">\r\n                                        <IonIcon icon=\"/assets/images/swap-horizontal.svg\"  />\r\n                                        <span className=\"\">Tenant Account</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/ios-person.svg\"  />\r\n                                        <span className=\"\">Account Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/bill-icon.svg\"  />\r\n                                        <span className=\"\">Billing History</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon={settingsSharp}  />\r\n                                        <span className=\"\">Service Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">FAQ</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">Logout</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                        </IonList>\r\n                    </IonPopover>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton \r\n                            className=\"footer-menu-button\" \r\n                            fill=\"clear\"\r\n                            onClick={\r\n                                    (e) => {\r\n                                    // e.persist();\r\n                                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                                }}\r\n                        >\r\n                            <IonIcon slot=\"icon-only\" icon={menuOutline} />\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n\r\n            </IonGrid>\r\n        </IonFooter>\r\n        \r\n    );\r\n};\r\n\r\nexport default FooterMobile;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx",["190","191","192","193","194"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow,\r\n    IonCol, \r\n    IonLabel, \r\n    IonInput, \r\n    IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonNote,\r\n    IonItem,\r\n    IonIcon\r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm, Controller } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport { close } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n    initialSlide: 0,\r\n    speed: 400\r\n};\r\n\r\nconst AddNewProperty: React.FC = () => {\r\n    const mySlides = useRef<any>(null);\r\n\r\n    const [city, setCity] = useState<string>(); \r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n    const scrollToTop= () => {\r\n        contentRef.current && contentRef.current.scrollToTop();\r\n    };\r\n\r\n    const methods = useForm();\r\n    const { register, trigger, handleSubmit, control, setValue, getValues, formState: { errors } } = methods;\r\n\r\n    useEffect(() => {\r\n        mySlides.current.lockSwipes(true);\r\n    });\r\n\r\n    const next = async (fields: any) => {\r\n        const result = await trigger(fields);\r\n        if (!result) return;\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slideNext();\r\n        await mySlides.current.lockSwipes(true);\r\n        scrollToTop();\r\n    };\r\n\r\n    const prev = async () => {\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slidePrev();\r\n        await mySlides.current.lockSwipes(true);\r\n    };\r\n    \r\n        \r\n    const onSubmit = (data: any) => {\r\n        console.log(data);\r\n    };\r\n\r\n\r\n    return (\r\n    <IonPage>\r\n\r\n         <HeaderMain />\r\n\r\n         <IonContent className=\"dashboard-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n\r\n            <IonGrid className=\"dashboard-main-grid add-proepry-wrapper\">\r\n                <IonRow className=\"ion-justify-content-between dashboard-main-row\">\r\n\r\n                    {/* sidebar start  */}\r\n                    <DashboardSidebar />\r\n                    {/* sidebar end  */}\r\n                        \r\n                    <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"4\">\r\n                        <FormProvider {...methods}>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow className=\"ion-justify-content-center\">\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Property Name</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyName', {\r\n                                                            required: 'Property name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyName\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Property Name Suffix (3 Characters)</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyNameSuffix', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z]{3}$/i,\r\n                                                                message: 'Property name suffix should only contain characters and it should not more than 3 characters.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyNameSuffix\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Address</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyAddress', {\r\n                                                            required: 'Address is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyAddress\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">City</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('city', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"city1\">City 1</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city2\">City 2</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city3\">City 3</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city4\">City 4</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city5\">City 5</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"city\"\r\n                                                        rules={{ required: 'Please select city' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"city\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Province/State</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('state', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"state1\">State 1</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state2\">State 2</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state3\">State 3</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state4\">State 4</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state5\">State 5</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"state\"\r\n                                                        rules={{ required: 'Please select State' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"state\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Country</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('country', {\r\n                                                            required: 'Country name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"country\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Postal code</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('postalCode', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z0-9]{6}$/i,\r\n                                                                message: 'Please enter a valid postal code.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"postalCode\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['propertyName','propertyNameSuffix', 'propertyAddress', 'city', 'state', 'country', 'postalCode'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next([])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow className=\"ion-justify-content-center\">\r\n\r\n                                                <IonNote>Roughly estimate the number of apartments per floor in your building. After generating the building, you will be able to specifically change the layout per floor if some floor do not have the same number of apartments.</IonNote>\r\n\r\n                                                <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"margin-right-auto form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Number of Floors</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\"   \r\n                                                        {...register('numberOfFloors', {\r\n                                                            required: 'Please mention number of floors.',\r\n                                                            pattern: {\r\n                                                                value: /\\d{3}$/i,\r\n                                                                message: 'Invalid floor number'\r\n                                                             }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"numberOfFloors\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Number of Apartments per Floor</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\"   \r\n                                                        {...register('numberOfApartments', {\r\n                                                            required: 'Please mention number of Apartments per floor.',\r\n                                                            pattern: {\r\n                                                                value: /^[0-9]{3}$/i,\r\n                                                                message: 'Invalid number of apartments per floor'\r\n                                                             }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"numberOfApartments\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Units Number Format</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('unitesNumberFormat', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"101\">101</IonSelectOption>\r\n                                                            <IonSelectOption value=\"102\">102</IonSelectOption>\r\n                                                            <IonSelectOption value=\"103\">103</IonSelectOption>\r\n                                                            <IonSelectOption value=\"104\">104</IonSelectOption>\r\n                                                            <IonSelectOption value=\"105\">105</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"unitesNumberFormat\"\r\n                                                        rules={{ required: 'Please select Units Number Formate' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"unitesNumberFormat\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['numberOfFloors', 'numberOfApartments', 'unitesNumberFormat'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next([])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n\r\n                                        <div>\r\n                                            <IonNote>You are almost done adding the property to your account. To customize a floor, select a floor from the dropdown menu, then add, remove or change the apartment number format to match the ones that you own.</IonNote>\r\n\r\n                                            <div className=\"generated-floor-box\">\r\n                                                <IonGrid>\r\n                                                    <IonRow className=\"ion-justify-content-center\">\r\n                                                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"form-field margin-right-auto\">\r\n                                                            <IonLabel className=\"form-lable\">Choose a floor</IonLabel>\r\n                                                            <Controller\r\n                                                                render={({ field }) => (\r\n                                                                <IonSelect\r\n                                                                    mode=\"md\"\r\n                                                                    placeholder=\"\"\r\n                                                                    // value={field.value}\r\n                                                                    value=\"5\"\r\n                                                                    onIonChange={e => setValue('chooseFloor', e.detail.value)}\r\n                                                                >\r\n                                                                    <IonSelectOption value=\"5\">5</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"6\">6</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"7\">7</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"8\">8</IonSelectOption>\r\n                                                                    <IonSelectOption value=\"9\">9</IonSelectOption>\r\n                                                                </IonSelect>\r\n                                                                )}\r\n                                                                control={control}   \r\n                                                                name=\"chooseFloor\"\r\n                                                                rules={{ required: 'Please choose floor' }}\r\n                                                            />\r\n                                                            <ErrorMessage\r\n                                                                errors={errors}\r\n                                                                name=\"unitesNumberFormat\"\r\n                                                                as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                            />\r\n                                                        </IonCol>\r\n\r\n                                                        <IonCol size=\"12\" className=\"form-field\">\r\n                                                            <IonLabel className=\"form-lable\">Add, rename or delete apartment:</IonLabel>\r\n                                                            <IonGrid>\r\n                                                                <IonRow className=\"ion-justify-content-start\">\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"501\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"502\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"503\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"504\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"505\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info\">\r\n                                                                            <IonButton fill=\"clear\">\r\n                                                                                <IonIcon icon={close} />\r\n                                                                            </IonButton>\r\n                                                                            <IonInput mode=\"md\" type=\"text\" value={\"506\"}></IonInput>\r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\">\r\n                                                                        <div className=\"apartment-info add-unit-button\">\r\n                                                                            <IonButton className=\"\" fill=\"clear\">\r\n                                                                                <IonLabel>Add a Unit</IonLabel>\r\n                                                                            </IonButton>\r\n                                                                            \r\n                                                                        </div>\r\n                                                                    </IonCol>\r\n                                                                </IonRow>\r\n                                                            </IonGrid>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                </IonGrid>   \r\n                                            </div>\r\n\r\n                                            <IonGrid>\r\n                                                <IonRow className=\"ion-justify-content-center\">                     <IonCol size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\"     className=\"form-field sign-up-btn\">\r\n                                                        <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                                                Submit\r\n                                                        </IonButton>\r\n                                                    </IonCol>\r\n\r\n                                                </IonRow>\r\n                                            </IonGrid>\r\n                                        </div>\r\n\r\n                                    </IonSlide>\r\n\r\n                                </IonSlides>\r\n                            </form>\r\n                        </FormProvider>\r\n                    </IonCol>\r\n\r\n                    {/* dashboar posts start */}\r\n                    <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                    </IonCol>\r\n                    {/* dashboar post end */}\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n\r\n            <Footer />\r\n\r\n        </IonContent>\r\n\r\n        \r\n        <FooterMobile />\r\n\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default AddNewProperty;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx",["195","196","197","198","199"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx",["200"],"import React from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol\r\n} from '@ionic/react';\r\n\r\nimport { searchSharp, addSharp } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManageTenanatSearchTab: React.FC = () => {\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"find-digi-lease-block\">\r\n\r\n                <h6><b>Find</b> or <b>create</b> a Digi-Lease using the apartment number.</h6>\r\n\r\n                <div className=\"search-box\">\r\n                    <IonLabel>Apartment #</IonLabel>\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"204\"}></IonInput>\r\n                    <IonButton expand=\"full\" fill=\"solid\" shape=\"round\">\r\n                        <div className=\"\">    \r\n                            <IonIcon icon={searchSharp}  />\r\n                            <span className=\"\">Search</span>\r\n                        </div>\r\n                    </IonButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <h6>Here are all the lease results for <b><u>Apt 204a</u></b></h6>\r\n                \r\n                <div className=\"search-result-box\">\r\n                    <h5>Upcoming</h5>\r\n                    <div className=\"lease-renewal\">\r\n                        <IonButton className=\"lease-renewal-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/lease-renewal-proposal\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"ion-align-items-center\">\r\n                                <IonCol sizeXs=\"2\" sizeMd=\"1\" sizeLg=\"1\" sizeXl=\"1\" className=\"\">\r\n                                    <IonIcon icon=\"assets/images/exclamation-mark.svg\"  />\r\n                                </IonCol>\r\n                                <IonCol sizeXs=\"8\" sizeMd=\"10\" sizeLg=\"10\" sizeXl=\"10\" className=\"\">\r\n                                    <div className=\"renewal-lease-info\">\r\n                                        <h6><u>Lease Renewal.</u></h6>\r\n                                        <p>This lease expires on <b>Dec. 30th 2020.</b></p>\r\n                                        <p>Please Tap here to propose new lease</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol sizeXs=\"2\" sizeMd=\"1\" sizeLg=\"1\" sizeXl=\"1\" className=\"\">\r\n                                    <IonIcon icon=\"assets/images/plus-icon.svg\" />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Current</h5>\r\n                    <div className=\"tenants-lease-info\">\r\n                        <IonButton className=\"edit-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/edit-lease-info\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"7\" className=\"start-end-date-block\">\r\n                                    <div className=\"start-date-block\">\r\n                                        <h6>Start Date</h6>\r\n                                        <p>July</p>\r\n                                        <p>1<sup>st</sup></p>\r\n                                        <p>2020</p>\r\n                                    </div>\r\n                                    <div className=\"to-block\">\r\n                                        <p>To</p>\r\n                                        <IonIcon icon=\"assets/images/arrow-right.svg\" />\r\n                                    </div>\r\n                                    <div className=\"end-date-block\">\r\n                                        <h6>End Date</h6>\r\n                                        <p>June</p>\r\n                                        <p>31<sup>st</sup></p>\r\n                                        <p>2021</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" className=\"\">\r\n                                    <div className=\"tenant-lease-info\">\r\n                                        <h6>Tenants</h6>\r\n                                        <ol>\r\n                                            <li>John Smith</li>\r\n                                            <li>Dianna Smith</li>\r\n                                        </ol>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Past</h5>\r\n                    <div className=\"tenants-lease-info\">\r\n                        <IonButton className=\"view-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/lease-info\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"7\" className=\"start-end-date-block\">\r\n                                    <div className=\"start-date-block\">\r\n                                        <h6>Start Date</h6>\r\n                                        <p>July</p>\r\n                                        <p>1<sup>st</sup></p>\r\n                                        <p>2020</p>\r\n                                    </div>\r\n                                    <div className=\"to-block\">\r\n                                        <p>To</p>\r\n                                        <IonIcon icon=\"assets/images/arrow-right.svg\" />\r\n                                    </div>\r\n                                    <div className=\"end-date-block\">\r\n                                        <h6>End Date</h6>\r\n                                        <p>June</p>\r\n                                        <p>31<sup>st</sup></p>\r\n                                        <p>2021</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" className=\"\">\r\n                                    <div className=\"tenant-lease-info\">\r\n                                        <h6>Tenants</h6>\r\n                                        <ol>\r\n                                            <li>John Smith</li>\r\n                                            <li>Dianna Smith</li>\r\n                                        </ol>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManageTenanatSearchTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx",["201","202","203","204"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst LeaseInfo: React.FC = () => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"204\"} name=\"apprtmentNumber\" readonly></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"} name=\"leaseCode\" readonly></IonInput>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\" disabled>\r\n                                        Generate New Lease Code\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 1</h4>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"John\"} name=\"t1FirstName\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t1LastName\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 2</h4>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Dianna\"} name=\"t2FirstName\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t2LastName\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\" disabled>\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"2\"} name=\"numberOfTenants\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"currentLeasePrice\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Jan. 8th, 2020\"} name=\"leaseStartDate\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Feb. 8th, 2021\"} name=\"leaseEndDate\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">1. My Filename1.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">2. My Filename2.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton className=\"exit-file-btn\" routerLink=\"/manage-tenants\" fill=\"solid\" shape=\"round\">Exit File</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default LeaseInfo;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx",["205","206","207"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonDatetime,\r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    useIonAlert,\r\n    IonAlert \r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst EditLeaseInfo: React.FC = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [selectedDate, setSelectedDate] = useState<string>('');\r\n\r\n    const [present] = useIonAlert();\r\n\r\n    const [generateNewLeaseCodeAlert, setGenerateNewLeaseCodeAlert] = useState(false);\r\n    const [leaseRenewalProposalAlert, setLeaseRenewalProposalAlert] = useState(false);\r\n    const [renewalProposalSentAlert, setRenewalProposalSentAlert] = useState(false);\r\n    const [cancelLeaseAlert, setCancelLeaseAlert] = useState(false);\r\n    const [updateFileAlert, setUpdateFileAlert] = useState(false);\r\n    const [updateFileNotificationSentAlert, setUpdateFileNotificationSentAlert] = useState(false);\r\n    const [exitFileAlert, setExitFileAlert] = useState(false);\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"204\"} name=\"apprtmentNumber\"></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"} name=\"leaseCode\"></IonInput>\r\n                                    </div>\r\n                                    <IonButton \r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setGenerateNewLeaseCodeAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Generate New Lease Code\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={generateNewLeaseCodeAlert}\r\n                                        onDidDismiss={() => setGenerateNewLeaseCodeAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'New Lease Code'}\r\n                                        message={'<p>You are about to <strong>change</strong> this lease code.</p><p>This step cannot be undone.</p><p>Please confirm with fingerprint.</p>'}\r\n                                        inputs={[\r\n                                            {\r\n                                              name: 'newLeaseCodeFingerprint',\r\n                                              type: 'text',\r\n                                              cssClass: 'fingerprint-input'\r\n                                            },\r\n                                        ]}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                    console.log('Confirm Okay');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: blah => {\r\n                                                    console.log('Confirm Cancel: blah');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <form>\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <div className=\"tenant-title-wrap\">\r\n                                            <h4>Tenant 1</h4>\r\n                                            <IonButton fill=\"clear\"><IonIcon icon={close} /></IonButton>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"John\"} name=\"t1FirstName\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t1LastName\"></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 2</h4>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Dianna\"} name=\"t2FirstName\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t2LastName\"></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\">\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value={\"2\"} name=\"numberOfTenants\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput className=\"width-50\" mode=\"md\" type=\"text\" value={\"$900\"} name=\"currentLeasePrice\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseStartDate\" placeholder=\"Select Date\" value={selectedDate} onIonChange={e => setSelectedDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseEndDate\" placeholder=\"Select Date\" value={selectedDate} onIonChange={e => setSelectedDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">1. My Filename1.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">2. My Filename2.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card special-actions-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Special Actions</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <IonButton \r\n                                        className=\"propose-lease-renewal-btn\" \r\n                                        routerLink=\"#\" \r\n                                        fill=\"outline\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setLeaseRenewalProposalAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Propose lease renewal\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={leaseRenewalProposalAlert}\r\n                                        onDidDismiss={() => setLeaseRenewalProposalAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Lease Renewal Propposal'}\r\n                                        message={'<p>Are you sure you want to propse the Lease Renewal?</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: () => {\r\n                                                    setRenewalProposalSentAlert(true)\r\n                                                    console.log('Lease Renewal Propposal Confirm');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: blah => {\r\n                                                    console.log('Lease Renewal Propposal Confirm Cancel');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                    <IonAlert\r\n                                        isOpen={renewalProposalSentAlert}\r\n                                        onDidDismiss={() => setRenewalProposalSentAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Renewal Proposal Sent'}\r\n                                        message={'<p>The lease Renewal proposal has been sent to the tenant(s). The file wil be updated if the tenant chooses to renew.</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Close',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: blah => {\r\n                                                    console.log('Renewal Proposal Sent close');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                    <IonButton \r\n                                        className=\"cancel-lease-btn\" \r\n                                        // routerLink=\"/manage-tenants\" \r\n                                        fill=\"outline\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setCancelLeaseAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Cancel Lease\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={cancelLeaseAlert}\r\n                                        onDidDismiss={() => setCancelLeaseAlert(false)}\r\n                                        cssClass='red-alert'\r\n                                        mode='md'\r\n                                        header={'Cancel Lease'}\r\n                                        message={'<p>You are about to <strong>cancel</strong> this lease code.</p><p>This step cannot be <strong>undone</strong>.</p><p>Please confirm with fingerprint.</p>'}\r\n                                        inputs={[\r\n                                            {\r\n                                              name: 'newLeaseCodeFingerprint',\r\n                                              type: 'text',\r\n                                              cssClass: 'fingerprint-input'\r\n                                            },\r\n                                        ]}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                    console.log('Confirm Okay');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: blah => {\r\n                                                    console.log('Confirm Cancel: blah');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton \r\n                                        className=\"update-file-btn\"\r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setUpdateFileAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Update File\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={updateFileAlert}\r\n                                        onDidDismiss={() => setUpdateFileAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Update File'}\r\n                                        message={'<p>Are you sure you would like to update this file with new information?</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: () => {\r\n                                                    setUpdateFileNotificationSentAlert(true)\r\n                                                    console.log('Update File Confirm');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: blah => {\r\n                                                    console.log('Update File Cancel');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                    <IonAlert\r\n                                        isOpen={updateFileNotificationSentAlert}\r\n                                        onDidDismiss={() => setUpdateFileNotificationSentAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Update File'}\r\n                                        message={'<p>A notification of your update has been sent to all the tenants on this lease.</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Close',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: blah => {\r\n                                                    console.log('Update File close');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n\r\n                                    <IonButton \r\n                                        className=\"exit-file-btn\" \r\n                                        // routerLink=\"/manage-tenants\" \r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setExitFileAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Exit File\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={exitFileAlert}\r\n                                        onDidDismiss={() => setExitFileAlert(false)}\r\n                                        cssClass='red-alert'\r\n                                        mode='md'\r\n                                        header={'Exit File'}\r\n                                        message={'<p>Are you sure you want to Exit the file without saving the updates?</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-secondary',\r\n                                                handler: () => {\r\n                                                    history.goBack();\r\n                                                    console.log('Exit File Okay');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                    console.log('Exit File Cancel');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                            </form>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default EditLeaseInfo;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx",["208","209","210","211"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonDatetime,\r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst AddNewLease: React.FC = () => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [selectedDate, setSelectedDate] = useState<string>('');\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"502\"} name=\"apprtmentNumber\" readonly></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"}  name=\"leaseCode\" readonly></IonInput>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <form>\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <div className=\"tenant-title-wrap\">\r\n                                            <h4>Tenant 1</h4>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value=\"\" name=\"t1FirstName\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value=\"\" name=\"t1LastName\"></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\">\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value=\"\" name=\"numberOfTenants\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput className=\"width-50\" mode=\"md\" type=\"text\" value=\"\" name=\"currentLeasePrice\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseStartDate\" placeholder=\"Select Date\" value={selectedDate} onIonChange={e => setSelectedDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseEndDate\" placeholder=\"Select Date\" value={selectedDate} onIonChange={e => setSelectedDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name\"></p>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name\"></p>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton className=\"submit-new-lease-btn\" routerLink=\"#\" fill=\"outline\" shape=\"round\">Submit</IonButton>\r\n                                    <IonButton className=\"cancle-btn\" routerLink=\"#\" fill=\"solid\" shape=\"round\">Cancle</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                            </form>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default AddNewLease;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx",["212","213"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonAlert\r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst LeaseRenewalProposal: React.FC = () => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [generateNewLeaseCodeAlert, setGenerateNewLeaseCodeAlert] = useState(false);\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"204\"} name=\"apprtmentNumber\" readonly></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"} name=\"leaseCode\" readonly></IonInput>\r\n                                    </div>\r\n                                    <IonButton \r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setGenerateNewLeaseCodeAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Generate New Lease Code\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={generateNewLeaseCodeAlert}\r\n                                        onDidDismiss={() => setGenerateNewLeaseCodeAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'New Lease Code'}\r\n                                        message={'<p>You are about to <strong>change</strong> this lease code.</p><p>This step cannot be undone.</p><p>Please confirm with fingerprint.</p>'}\r\n                                        inputs={[\r\n                                            {\r\n                                              name: 'newLeaseCodeFingerprint',\r\n                                              type: 'text',\r\n                                              cssClass: 'fingerprint-input'\r\n                                            },\r\n                                        ]}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                    console.log('Confirm Okay');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: blah => {\r\n                                                    console.log('Confirm Cancel: blah');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 1</h4>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"John\"} name=\"t1FirstName\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t1LastName\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 2</h4>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Dianna\"} name=\"t2FirstName\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t2LastName\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\" disabled>\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"2\"} name=\"numberOfTenants\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"currentLeasePrice\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>New Lease price</IonLabel>\r\n                                            <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value=\"\" name=\"newLeasePrice\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Jan. 8th, 2020\"} name=\"leaseStartDate\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Feb. 8th, 2021\"} name=\"leaseEndDate\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">1. My Filename1.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">2. My Filename2.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton className=\"submit-new-lease-btn\" routerLink=\"#\" fill=\"outline\" shape=\"round\">Submit</IonButton>\r\n                                    <IonButton className=\"exit-file-btn\" routerLink=\"/manage-tenants\" fill=\"solid\" shape=\"round\">Exit File</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default LeaseRenewalProposal;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-rents.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsSearchTab.tsx",["214"],"import React from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol\r\n} from '@ionic/react';\r\n\r\nimport { searchSharp, arrowForwardOutline } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManageRentsSearchTab: React.FC = () => {\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"find-digi-lease-block\">\r\n\r\n                <h6>Find an apartment and manage its rent.</h6>\r\n\r\n                <div className=\"search-box\">\r\n                    <IonLabel>Apartment #</IonLabel>\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"502\"}></IonInput>\r\n                    <IonButton expand=\"full\" fill=\"solid\" shape=\"round\">\r\n                        <div className=\"\">    \r\n                            <IonIcon icon={searchSharp}  />\r\n                            <span className=\"\">Search</span>\r\n                        </div>\r\n                    </IonButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <h6><b>Payment history</b> for <b><u>Apt 502</u></b></h6>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Upcoming (Current Lease)</h5>\r\n                    <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                        <IonButton className=\"edit-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/rent-pay-details\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"3\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"rent-price-block due-block\">\r\n                                    <h6>Due:</h6>\r\n                                    <p>$910</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"payment-date-block\">\r\n                                    <h6>Due Date:</h6>\r\n                                    <p>Feb. 1st 2021</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" sizeMd=\"6\" sizeLg=\"8\" sizeXl=\"8\" className=\"rent-period-block\">\r\n                                    <h6>Rent Period:</h6>\r\n                                    <p>Jan. 1st <IonIcon icon=\"assets/images/arrow-right.svg\" />Jan. 30th</p>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                    </div>\r\n                    <IonRow className=\"ion-justify-content-center\">\r\n                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                            <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Past</h5>\r\n                    <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                        {/* <IonButton className=\"view-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/lease-info\"></IonButton> */}\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"3\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"rent-price-block paid-block\">\r\n                                    <h6>Paid:</h6>\r\n                                    <p>$900</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"payment-date-block\">\r\n                                    <h6>Pay Date:</h6>\r\n                                    <p>Jan. 1st 2021</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" sizeMd=\"6\" sizeLg=\"8\" sizeXl=\"8\" className=\"rent-period-block\">\r\n                                    <h6>Rent Period:</h6>\r\n                                    <p>Dec. 1st <IonIcon icon=\"assets/images/arrow-right.svg\" />Dec. 30th</p>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                     <IonRow className=\"ion-justify-content-center\">\r\n                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                            <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManageRentsSearchTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Rent-pay-details.tsx",["215","216","217"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonInput, \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonAlert \r\n} from '@ionic/react';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst RentPayDetails: React.FC = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [updateFileAlert, setUpdateFileAlert] = useState(false);\r\n    const [updateFileNotificationSentAlert, setUpdateFileNotificationSentAlert] = useState(false);\r\n    const [exitFileAlert, setExitFileAlert] = useState(false);\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n\r\n                            <form>\r\n                            <IonCard className=\"tenant-lease-details-card rent-pay-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Rent Pay Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info rent-pay-info\">\r\n                                        <div>\r\n                                            <IonLabel>Apaprtment</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"502\"} name=\"renyPayApartment\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Rent Period</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Dec. 1st, 2020 -> Dec.30th, 2020\"} name=\"t1LastName\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Anticipated Pay</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"anticipatedPay\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>New Anticipated Pay</IonLabel>\r\n                                            <div className=\"paid-btn-wrap\">\r\n                                                <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value=\"\" name=\"newanticipatedPay\"></IonInput>\r\n                                                <IonButton fill=\"outline\">Mark as Paid</IonButton>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton \r\n                                        className=\"confirm-btn\"\r\n                                        fill=\"outline\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setUpdateFileAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Confirm\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={updateFileAlert}\r\n                                        onDidDismiss={() => setUpdateFileAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Update File'}\r\n                                        message={'<p>Are you sure you would like to update this file with new information?</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: () => {\r\n                                                    setUpdateFileNotificationSentAlert(true)\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                    <IonAlert\r\n                                        isOpen={updateFileNotificationSentAlert}\r\n                                        onDidDismiss={() => setUpdateFileNotificationSentAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Update File'}\r\n                                        message={'<p>A notification of your update has been sent to all the tenants on this lease.</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Close',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: () => {\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n\r\n                                    <IonButton \r\n                                        className=\"exit-file-btn\" \r\n                                        routerLink=\"/manage-rents\" \r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                    >\r\n                                        Exit File\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                            </form>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default RentPayDetails;",{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":1,"column":10,"nodeType":"224","messageId":"225","endLine":1,"endColumn":18},{"ruleId":"222","severity":1,"message":"226","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":23},{"ruleId":"222","severity":1,"message":"227","line":4,"column":41,"nodeType":"224","messageId":"225","endLine":4,"endColumn":49},{"ruleId":"222","severity":1,"message":"228","line":19,"column":7,"nodeType":"224","messageId":"225","endLine":19,"endColumn":23},{"ruleId":"222","severity":1,"message":"229","line":23,"column":22,"nodeType":"224","messageId":"225","endLine":23,"endColumn":29},{"ruleId":"222","severity":1,"message":"230","line":1,"column":36,"nodeType":"224","messageId":"225","endLine":1,"endColumn":44},{"ruleId":"222","severity":1,"message":"230","line":1,"column":36,"nodeType":"224","messageId":"225","endLine":1,"endColumn":44},{"ruleId":"222","severity":1,"message":"231","line":35,"column":56,"nodeType":"224","messageId":"225","endLine":35,"endColumn":64},{"ruleId":"222","severity":1,"message":"230","line":1,"column":36,"nodeType":"224","messageId":"225","endLine":1,"endColumn":44},{"ruleId":"222","severity":1,"message":"232","line":8,"column":5,"nodeType":"224","messageId":"225","endLine":8,"endColumn":11},{"ruleId":"222","severity":1,"message":"230","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"230","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"233","line":10,"column":5,"nodeType":"224","messageId":"225","endLine":10,"endColumn":18},{"ruleId":"222","severity":1,"message":"234","line":39,"column":11,"nodeType":"224","messageId":"225","endLine":39,"endColumn":24},{"ruleId":"222","severity":1,"message":"230","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":24},{"ruleId":"222","severity":1,"message":"235","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":20},{"ruleId":"222","severity":1,"message":"236","line":17,"column":7,"nodeType":"224","messageId":"225","endLine":17,"endColumn":14},{"ruleId":"222","severity":1,"message":"237","line":18,"column":7,"nodeType":"224","messageId":"225","endLine":18,"endColumn":12},{"ruleId":"222","severity":1,"message":"238","line":19,"column":7,"nodeType":"224","messageId":"225","endLine":19,"endColumn":14},{"ruleId":"222","severity":1,"message":"239","line":20,"column":7,"nodeType":"224","messageId":"225","endLine":20,"endColumn":12},{"ruleId":"222","severity":1,"message":"240","line":21,"column":7,"nodeType":"224","messageId":"225","endLine":21,"endColumn":12},{"ruleId":"241","severity":1,"message":"242","line":36,"column":33,"nodeType":"243","endLine":36,"endColumn":82},{"ruleId":"241","severity":1,"message":"242","line":47,"column":33,"nodeType":"243","endLine":47,"endColumn":78},{"ruleId":"241","severity":1,"message":"242","line":58,"column":33,"nodeType":"243","endLine":58,"endColumn":76},{"ruleId":"241","severity":1,"message":"242","line":69,"column":33,"nodeType":"243","endLine":69,"endColumn":80},{"ruleId":"241","severity":1,"message":"242","line":80,"column":33,"nodeType":"243","endLine":80,"endColumn":75},{"ruleId":"222","severity":1,"message":"244","line":4,"column":5,"nodeType":"224","messageId":"225","endLine":4,"endColumn":15},{"ruleId":"222","severity":1,"message":"245","line":5,"column":5,"nodeType":"224","messageId":"225","endLine":5,"endColumn":12},{"ruleId":"222","severity":1,"message":"246","line":7,"column":5,"nodeType":"224","messageId":"225","endLine":7,"endColumn":12},{"ruleId":"222","severity":1,"message":"247","line":8,"column":5,"nodeType":"224","messageId":"225","endLine":8,"endColumn":11},{"ruleId":"222","severity":1,"message":"232","line":9,"column":5,"nodeType":"224","messageId":"225","endLine":9,"endColumn":11},{"ruleId":"222","severity":1,"message":"248","line":13,"column":5,"nodeType":"224","messageId":"225","endLine":13,"endColumn":14},{"ruleId":"222","severity":1,"message":"249","line":14,"column":5,"nodeType":"224","messageId":"225","endLine":14,"endColumn":13},{"ruleId":"222","severity":1,"message":"250","line":17,"column":5,"nodeType":"224","messageId":"225","endLine":17,"endColumn":12},{"ruleId":"222","severity":1,"message":"251","line":44,"column":12,"nodeType":"224","messageId":"225","endLine":44,"endColumn":16},{"ruleId":"222","severity":1,"message":"252","line":44,"column":18,"nodeType":"224","messageId":"225","endLine":44,"endColumn":25},{"ruleId":"222","severity":1,"message":"253","line":52,"column":65,"nodeType":"224","messageId":"225","endLine":52,"endColumn":74},{"ruleId":"222","severity":1,"message":"254","line":67,"column":11,"nodeType":"224","messageId":"225","endLine":67,"endColumn":15},{"ruleId":"222","severity":1,"message":"244","line":4,"column":5,"nodeType":"224","messageId":"225","endLine":4,"endColumn":15},{"ruleId":"222","severity":1,"message":"245","line":5,"column":5,"nodeType":"224","messageId":"225","endLine":5,"endColumn":12},{"ruleId":"222","severity":1,"message":"246","line":7,"column":5,"nodeType":"224","messageId":"225","endLine":7,"endColumn":12},{"ruleId":"222","severity":1,"message":"247","line":8,"column":5,"nodeType":"224","messageId":"225","endLine":8,"endColumn":11},{"ruleId":"222","severity":1,"message":"232","line":9,"column":5,"nodeType":"224","messageId":"225","endLine":9,"endColumn":11},{"ruleId":"222","severity":1,"message":"255","line":13,"column":23,"nodeType":"224","messageId":"225","endLine":13,"endColumn":31},{"ruleId":"222","severity":1,"message":"230","line":1,"column":24,"nodeType":"224","messageId":"225","endLine":1,"endColumn":32},{"ruleId":"222","severity":1,"message":"256","line":9,"column":5,"nodeType":"224","messageId":"225","endLine":9,"endColumn":12},{"ruleId":"222","severity":1,"message":"250","line":18,"column":5,"nodeType":"224","messageId":"225","endLine":18,"endColumn":12},{"ruleId":"222","severity":1,"message":"257","line":21,"column":32,"nodeType":"224","messageId":"225","endLine":21,"endColumn":43},{"ruleId":"222","severity":1,"message":"256","line":11,"column":5,"nodeType":"224","messageId":"225","endLine":11,"endColumn":12},{"ruleId":"222","severity":1,"message":"257","line":25,"column":32,"nodeType":"224","messageId":"225","endLine":25,"endColumn":43},{"ruleId":"222","severity":1,"message":"258","line":48,"column":12,"nodeType":"224","messageId":"225","endLine":48,"endColumn":19},{"ruleId":"222","severity":1,"message":"256","line":9,"column":5,"nodeType":"224","messageId":"225","endLine":9,"endColumn":12},{"ruleId":"222","severity":1,"message":"250","line":19,"column":5,"nodeType":"224","messageId":"225","endLine":19,"endColumn":12},{"ruleId":"222","severity":1,"message":"259","line":22,"column":10,"nodeType":"224","messageId":"225","endLine":22,"endColumn":15},{"ruleId":"222","severity":1,"message":"257","line":22,"column":32,"nodeType":"224","messageId":"225","endLine":22,"endColumn":43},{"ruleId":"222","severity":1,"message":"256","line":9,"column":5,"nodeType":"224","messageId":"225","endLine":9,"endColumn":12},{"ruleId":"222","severity":1,"message":"257","line":21,"column":32,"nodeType":"224","messageId":"225","endLine":21,"endColumn":43},{"ruleId":"222","severity":1,"message":"260","line":13,"column":23,"nodeType":"224","messageId":"225","endLine":13,"endColumn":42},{"ruleId":"222","severity":1,"message":"261","line":33,"column":9,"nodeType":"224","messageId":"225","endLine":33,"endColumn":16},{"ruleId":"222","severity":1,"message":"262","line":43,"column":12,"nodeType":"224","messageId":"225","endLine":43,"endColumn":25},{"ruleId":"222","severity":1,"message":"263","line":43,"column":27,"nodeType":"224","messageId":"225","endLine":43,"endColumn":43},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'IonInput' is defined but never used.","'radioButtonValue' is assigned a value but never used.","'trigger' is assigned a value but never used.","'useState' is defined but never used.","'setValue' is assigned a value but never used.","'IonCol' is defined but never used.","'IonRadioGroup' is defined but never used.","'toggleReorder' is assigned a value but never used.","'useHistory' is defined but never used.","'TENANTS' is assigned a value but never used.","'RENTS' is assigned a value but never used.","'REPAIRS' is assigned a value but never used.","'POSTS' is assigned a value but never used.","'STAFF' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IonContent' is defined but never used.","'IonPage' is defined but never used.","'IonGrid' is defined but never used.","'IonRow' is defined but never used.","'IonAvatar' is defined but never used.","'IonLabel' is defined but never used.","'IonItem' is defined but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'getValues' is assigned a value but never used.","'prev' is assigned a value but never used.","'addSharp' is defined but never used.","'IonList' is defined but never used.","'chevronDown' is defined but never used.","'present' is assigned a value but never used.","'close' is defined but never used.","'arrowForwardOutline' is defined but never used.","'history' is assigned a value but never used.","'exitFileAlert' is assigned a value but never used.","'setExitFileAlert' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]