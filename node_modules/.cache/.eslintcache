[{"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx":"1","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx":"2","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx":"3","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx":"4","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx":"5","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx":"6","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx":"7","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx":"8","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx":"9","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx":"10","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx":"11","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx":"12","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx":"13","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx":"14","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx":"15","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx":"16","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx":"17","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx":"18","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-rents.tsx":"19","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Rent-pay-details.tsx":"20","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-dashboard.tsx":"21","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx":"22","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx":"23","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx":"24","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx":"25","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx":"26","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsSearchTab.tsx":"27","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsGeneralTab.tsx":"28","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\TanatDahsboadTanatsTab.tsx":"29","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\TanantsDashboardPostsTab.tsx":"30","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx":"31","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx":"32","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx":"33","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx":"34","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx":"35","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentPayReceiptPopup.tsx":"36","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Pay-rent.tsx":"37","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentsPayUpcomingTab.tsx":"38","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentsPayHistoryTab.tsx":"39","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Payment-method.tsx":"40","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-posts.tsx":"41","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\MyAccordion.tsx":"42","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Accordion.tsx":"43","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Create-post.tsx":"44"},{"size":197,"mtime":1632199423730,"results":"45","hashOfConfig":"46"},{"size":6015,"mtime":1640854071598,"results":"47","hashOfConfig":"46"},{"size":3232,"mtime":1640161462066,"results":"48","hashOfConfig":"46"},{"size":4444,"mtime":1640161462069,"results":"49","hashOfConfig":"46"},{"size":5808,"mtime":1635313540141,"results":"50","hashOfConfig":"46"},{"size":5846,"mtime":1640161763959,"results":"51","hashOfConfig":"46"},{"size":11997,"mtime":1640161462070,"results":"52","hashOfConfig":"46"},{"size":12915,"mtime":1640161462071,"results":"53","hashOfConfig":"46"},{"size":3942,"mtime":1634798513431,"results":"54","hashOfConfig":"46"},{"size":3803,"mtime":1634798505618,"results":"55","hashOfConfig":"46"},{"size":11911,"mtime":1640161462068,"results":"56","hashOfConfig":"46"},{"size":8270,"mtime":1640161462067,"results":"57","hashOfConfig":"46"},{"size":4402,"mtime":1634798282030,"results":"58","hashOfConfig":"46"},{"size":10495,"mtime":1640161462066,"results":"59","hashOfConfig":"46"},{"size":9536,"mtime":1634798348683,"results":"60","hashOfConfig":"46"},{"size":33212,"mtime":1640161462616,"results":"61","hashOfConfig":"46"},{"size":29801,"mtime":1641038582004,"results":"62","hashOfConfig":"46"},{"size":14212,"mtime":1640161462072,"results":"63","hashOfConfig":"46"},{"size":4283,"mtime":1634798366451,"results":"64","hashOfConfig":"46"},{"size":8903,"mtime":1640161462069,"results":"65","hashOfConfig":"46"},{"size":16225,"mtime":1640679549504,"results":"66","hashOfConfig":"46"},{"size":1171,"mtime":1633522834456,"results":"67","hashOfConfig":"46"},{"size":8712,"mtime":1640161462062,"results":"68","hashOfConfig":"46"},{"size":1507,"mtime":1633524545428,"results":"69","hashOfConfig":"46"},{"size":5838,"mtime":1640161462061,"results":"70","hashOfConfig":"46"},{"size":4225,"mtime":1640694936196,"results":"71","hashOfConfig":"46"},{"size":7517,"mtime":1634807279521,"results":"72","hashOfConfig":"46"},{"size":9591,"mtime":1640161462063,"results":"73","hashOfConfig":"46"},{"size":4921,"mtime":1640161462064,"results":"74","hashOfConfig":"46"},{"size":4919,"mtime":1640161462063,"results":"75","hashOfConfig":"46"},{"size":7320,"mtime":1634807175214,"results":"76","hashOfConfig":"46"},{"size":5271,"mtime":1640711218121,"results":"77","hashOfConfig":"46"},{"size":1637,"mtime":1634118561272,"results":"78","hashOfConfig":"46"},{"size":1788,"mtime":1634016874629,"results":"79","hashOfConfig":"46"},{"size":3789,"mtime":1640161462044,"results":"80","hashOfConfig":"46"},{"size":3377,"mtime":1634113261762,"results":"81","hashOfConfig":"46"},{"size":4270,"mtime":1640862754753,"results":"82","hashOfConfig":"46"},{"size":9726,"mtime":1640605595220,"results":"83","hashOfConfig":"46"},{"size":5075,"mtime":1640587077004,"results":"84","hashOfConfig":"46"},{"size":20474,"mtime":1640693879140,"results":"85","hashOfConfig":"46"},{"size":10411,"mtime":1641014210328,"results":"86","hashOfConfig":"46"},{"size":1453,"mtime":1640752602546,"results":"87","hashOfConfig":"46"},{"size":2656,"mtime":1640853432101,"results":"88","hashOfConfig":"46"},{"size":17550,"mtime":1641040952575,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1ftw0h2",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"92"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"92"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"92"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"92"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"92"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"92"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx",[],["211","212"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx",["213"],"import { Redirect, Route } from 'react-router-dom';\r\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\n\r\nimport Home from './pages/Index';\r\nimport ForgetPassword from './pages/Forget-Password';\r\nimport ResetPassword from './pages/Reset-Password';\r\nimport Signup from './pages/Signup';\r\nimport StaffSignup from './pages/Staff-signup';\r\nimport TenantSignup from './pages/Tenant-signup';\r\nimport ManagementDashboard from './pages/Management-dashboard';\r\nimport ManagementDashboardWithNoProperty from './pages/Management-dashboard-with-no-property';\r\nimport ManagementSignup from './pages/Management-signup';\r\nimport ManageProperties from './pages/Manage-properties';\r\nimport AddNewProperty from './pages/Add-new-property';\r\nimport ManageTenants from './pages/Manage-tenants';\r\nimport LeaseInfo from './pages/Lease-info';\r\nimport EditLeaseInfo from './pages/Edit-lease-info';\r\nimport AddNewLease from './pages/Add-new-lease';\r\nimport LeaseRenewalProposal from './pages/lease-renewal-proposal';\r\nimport ManageRents from './pages/Manage-rents';\r\nimport RentPayDetails from './pages/Rent-pay-details';\r\nimport TenantDashboard from './pages/Tenant-dashboard';\r\nimport PayRents from './pages/Pay-rent';\r\nimport PaymentMethod from './pages/Payment-method';\r\nimport ManagePosts from './pages/Manage-posts';\r\nimport CreatePosts from './pages/Create-post';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\n\r\nexport const Routes = {\r\n  indexURL: '/index',\r\n  forgetPassword: '/forget-password',\r\n  resetPassword: '/reset-password',\r\n  signup: '/signup',\r\n  managementSignup: '/management-signup', \r\n  staffSignup: '/staff-signup', \r\n  tenantSignup: '/tenant-signup',\r\n  managementDashboard: '/management-dashboard',\r\n  managementDashboardWithNoProperty: '/management-dashboard-with-no-property',\r\n  manageProperties: '/manage-properties',\r\n  addNewProperty: '/add-new-property',\r\n  manageTenants: '/manage-tenants',\r\n  leaseInfo: '/lease-info',\r\n  editLeaseInfo: '/edit-lease-info',\r\n  addNewLease: '/add-new-lease',\r\n  leaseRenewalProposal: '/lease-renewal-proposal',\r\n  manageRents: '/manage-rents',\r\n  rentPayDetails: '/rent-pay-details',\r\n  tenantDahsboard: '/tenant-dashboard',\r\n  payRents: '/pay-rents',\r\n  paymentMethod: '/payment-method',\r\n  managePosts: '/manage-posts',\r\n  createPosts: '/create-posts'\r\n}\r\n\r\nconst App: React.FC = () => (\r\n  <IonApp>\r\n    <IonReactRouter>\r\n      <IonRouterOutlet>\r\n\r\n        <Route exact path={Routes.indexURL}>\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          {/* <Redirect to=\"/index\" /> */}\r\n          <Home />\r\n        </Route>\r\n        <Route exact path={Routes.forgetPassword}>\r\n          <ForgetPassword />\r\n        </Route>\r\n        <Route exact path={Routes.resetPassword}>\r\n          <ResetPassword />\r\n        </Route>\r\n        <Route exact path={Routes.signup}>\r\n          <Signup />\r\n        </Route>\r\n        <Route exact path={Routes.managementSignup}>\r\n          <ManagementSignup />\r\n        </Route>\r\n        <Route exact path={Routes.staffSignup}>\r\n          <StaffSignup />\r\n        </Route>\r\n        <Route exact path={Routes.tenantSignup}>\r\n          <TenantSignup />\r\n        </Route>\r\n        <Route exact path={Routes.managementDashboard}>\r\n          <ManagementDashboard path={Routes.managementDashboard} />\r\n        </Route>\r\n        <Route exact path={Routes.managementDashboardWithNoProperty}>\r\n          <ManagementDashboardWithNoProperty path={Routes.managementDashboardWithNoProperty} />\r\n        </Route>\r\n        <Route exact path={Routes.manageProperties}>\r\n          <ManageProperties path={Routes.manageProperties} />\r\n        </Route>\r\n        <Route exact path={Routes.addNewProperty}>\r\n          <AddNewProperty path={Routes.addNewProperty} />\r\n        </Route>\r\n        <Route exact path={Routes.manageTenants}>\r\n          <ManageTenants path={Routes.manageTenants} />\r\n        </Route>\r\n        <Route exact path={Routes.leaseInfo}>\r\n          <LeaseInfo path={Routes.leaseInfo} />\r\n        </Route>\r\n        <Route exact path={Routes.editLeaseInfo}>\r\n          <EditLeaseInfo path={Routes.editLeaseInfo} />\r\n        </Route>\r\n        <Route exact path={Routes.addNewLease}>\r\n          <AddNewLease path={Routes.addNewLease} />\r\n        </Route>\r\n        <Route exact path={Routes.leaseRenewalProposal}>\r\n          <LeaseRenewalProposal path={Routes.leaseRenewalProposal} />\r\n        </Route>\r\n        <Route exact path={Routes.manageRents}>\r\n          <ManageRents path={Routes.manageRents} />\r\n        </Route>\r\n        <Route exact path={Routes.rentPayDetails}>\r\n          <RentPayDetails path={Routes.rentPayDetails} />\r\n        </Route>\r\n        <Route exact path={Routes.tenantDahsboard}>\r\n          <TenantDashboard path={Routes.tenantDahsboard} />\r\n        </Route>\r\n        <Route exact path={Routes.payRents}>\r\n          <PayRents path={Routes.payRents} />\r\n        </Route>\r\n        <Route exact path={Routes.paymentMethod}>\r\n          <PaymentMethod path={Routes.paymentMethod} />\r\n        </Route>\r\n        <Route exact path={Routes.managePosts}>\r\n          <ManagePosts path={Routes.managePosts} />\r\n        </Route>\r\n        <Route exact path={Routes.createPosts}>\r\n          <CreatePosts path={Routes.createPosts} />\r\n        </Route>\r\n\r\n      </IonRouterOutlet>\r\n    </IonReactRouter>\r\n  </IonApp>\r\n);\r\n\r\nexport default App;\r\n","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx",["214"],"import { \r\n  IonContent, \r\n  IonPage, \r\n  IonLabel, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol,  \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   const doNothing = () => {\r\n\r\n   }\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow\"  onBack={doNothing}/>\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                     <FormProvider {...methods}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                           <h2>Create new password</h2>\r\n                           <p>Your new password must be different from previous used password.</p>\r\n\r\n                           <IonGrid>\r\n                              <IonRow>\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Enter new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput\r\n                                       mode=\"md\" \r\n                                       type=\"password\" \r\n                                       {...register('password1', {\r\n                                          required: 'Password is Required'\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password1\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Confirm new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput \r\n                                       mode=\"md\"\r\n                                       type=\"password\" \r\n                                       {...register('password2', {\r\n                                          // required: true,\r\n                                          validate: {\r\n                                             noMatch: (value: string) => {\r\n                                                return value !== getValues(\"password1\")\r\n                                                   ? \"Passwords do not match\"\r\n                                                   : undefined;\r\n                                             },\r\n                                          },\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password2\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                                    Reset Password\r\n                                    </IonButton>\r\n                                 </IonCol>\r\n                              </IonRow>\r\n                           </IonGrid>\r\n\r\n                        </form>\r\n                     </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx",["215","216","217","218"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonContent, IonPage, IonLabel, IonInput, IonButton, IonGrid, IonRow, IonCol, IonItem, IonList, IonRadioGroup, IonListHeader, IonRadio } from '@ionic/react';\r\n\r\nimport { FormProvider, useForm, FieldErrors } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst TENANT = \"tenant\"\r\nconst MANAGEMENT = \"management\"\r\nconst STAFF = \"staff\"\r\n\r\nconst Signup: React.FC = () => {\r\n\r\n  const [userType, setUserType] = useState<string>();\r\n  const methods = useForm({ mode: \"all\"});\r\n  const { register, handleSubmit, formState: { errors } } = methods;\r\n\r\n\r\n  // const [selected, setSelected] = useState<string>();\r\n  let history = useHistory();\r\n  const inputChangeHandler = (event: CustomEvent) => {\r\n    console.log(event?.detail?.value);\r\n    setUserType(event?.detail?.value); \r\n\r\n    // if(event.detail.value && event.detail.value === \"tenant\") {\r\n    //   console.log('tanant selected');\r\n    //   radioButtonValue = \"tenant\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"management\") {\r\n    //   console.log('management selected');\r\n    //   radioButtonValue = \"management\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"staff\") {\r\n    //   console.log('staff selected');\r\n    //   radioButtonValue = \"staff\";\r\n    // }\r\n\r\n  };\r\n\r\n  const onSubmit = (data: any) => {\r\n    console.log('submit button clicked' , data);\r\n    // if(userType) {\r\n      history.push(`/${userType}-signup`);\r\n    // }\r\n  };\r\n  \r\n\r\n  const pageRediect = () => {\r\n    if(userType) {\r\n      history.push(`/${userType}-signup`);\r\n    }\r\n    \r\n    // switch(userType) {\r\n    //   case TENANT: {\r\n    //     history.push(\"/Tenant-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case MANAGEMENT: {\r\n    //     history.push(\"/Management-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case STAFF: {\r\n    //     history.push(\"/Staff-signup\");\r\n    //     break;\r\n    //   }\r\n    //   default: {\r\n    //     break;\r\n    //   }\r\n       \r\n    // }\r\n\r\n    // if ( radioButtonValue == \"tenant\" ) {\r\n    //   console.log('tenant checked');\r\n    //   history.push(\"/Tenant-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"management\" ) {\r\n    //   console.log('management checked');\r\n    //   history.push(\"/Management-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"staff\" ) {\r\n    //   console.log('staff checked');\r\n    //   history.push(\"/Staff-signup\");\r\n    // }\r\n  };\r\n\r\n  const doNothing = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n        <Header class=\"with-back-arrow\" onBack={doNothing} />\r\n\r\n        <IonContent fullscreen>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n            \r\n            <IonGrid>\r\n                <IonRow className=\"signup-form login-form-row \">\r\n                    <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"6\">\r\n                        {/* <p>What are you registering as?</p> */}\r\n                        <IonList>\r\n                          <IonRadioGroup \r\n                            defaultValue={TENANT} \r\n                            onIonChange={inputChangeHandler}\r\n                            {...register('radioGrp', { required: 'Please make a selection' })}\r\n                          >\r\n                            <IonListHeader>\r\n                              <IonLabel>\r\n                                What are you registering as?\r\n                              </IonLabel>\r\n                            </IonListHeader>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Tenant\r\n                                <p>I am (or plan on) renting an apartment, condos or houses.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={TENANT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Management\r\n                                <p>I am plan to add and manage properties or apartments to rent.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={MANAGEMENT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Staff\r\n                                <p>I am staff member for a property.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={STAFF} />\r\n                              \r\n                            </IonItem>\r\n\r\n                          </IonRadioGroup>\r\n                        </IonList>\r\n\r\n                        \r\n                    </IonCol>\r\n\r\n                    <ErrorMessage\r\n                      errors={errors}\r\n                      name=\"radioGrp\"\r\n                      as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                    />\r\n\r\n                    <IonCol size=\"8\" sizeMd=\"4\" sizeLg=\"4\">\r\n                      <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                          Continue\r\n                      </IonButton>\r\n                    </IonCol>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n            </form>\r\n              </FormProvider>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Signup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx",["219","220","221"],"import { \r\n  IonContent, \r\n  IonPage, \r\n  IonIcon, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol \r\n} from '@ionic/react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { FormProvider, useForm, FieldErrors } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from '../App';\r\n\r\nconst Home: React.FC = () => {\r\n\r\n  let history = useHistory();\r\n  const methods = useForm({ mode: \"all\"});\r\n  const { register, handleSubmit, formState: { errors } } = methods;\r\n\r\n  const onSubmit = (data: any) => {\r\n    console.log(data.email);\r\n    console.log(data.password1);\r\n    if (data.email == \"tenant@gmail.com\" && data.password1 == \"12345\") {\r\n      history.push(Routes.tenantDahsboard);\r\n    }\r\n    else {\r\n      history.push(Routes.managementDashboard);\r\n    }\r\n  };\r\n\r\n  const doNothing = () => {\r\n\r\n  }\r\n\r\n  type ErrorSummaryProps<T> = {\r\n    errors: FieldErrors<T>;\r\n  };\r\n  function ErrorSummary<T>({ errors }: ErrorSummaryProps<T>) {\r\n    if (Object.keys(errors).length === 0) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"error-summary\">\r\n        {Object.keys(errors).map((fieldName) => (\r\n          <ErrorMessage errors={errors} name={fieldName as any} as=\"div\" key={fieldName} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  type ErrorMessageContainerProps = {\r\n    children?: React.ReactNode;\r\n  };\r\n  const ErrorMessageContainer = ({ children }: ErrorMessageContainerProps) => (\r\n    <span className=\"error\">{children}</span>\r\n  );\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n      <Header class=\"without-back-arrow\" onBack={doNothing} />\r\n\r\n      <IonContent fullscreen>\r\n        <IonGrid className=\"full-height-div\">\r\n          <IonRow className=\"login-form-row\">\r\n            <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n              <FormProvider {...methods}>\r\n                <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n\r\n                  \r\n\r\n                  <IonGrid>\r\n                    <IonRow>\r\n\r\n                        <IonCol size=\"12\">\r\n                          <ErrorSummary errors={errors} />\r\n                        </IonCol>\r\n\r\n                        <IonCol size=\"12\" className=\"email-field\">\r\n                          {/* <IonInput placeholder=\"Email\"/> */}\r\n                          <IonInput\r\n                            mode=\"md\"\r\n                            type=\"email\"\r\n                            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n                            placeholder=\"Email\"\r\n                            {...register('email', {\r\n                              required: 'Email is a required',\r\n                              pattern: {\r\n                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                              message: 'Invalid email address'\r\n                              }\r\n                            })}\r\n                          />\r\n                          {/* <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"email\"\r\n                            as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                          /> */}\r\n                        </IonCol>\r\n\r\n                        <IonCol size=\"12\" className=\"password-field\">\r\n                          {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                          <IonInput \r\n                            mode=\"md\"\r\n                            type=\"password\"\r\n                            className={`form-control ${errors.password1 ? 'is-invalid' : ''}`} \r\n                            placeholder=\"Password\"\r\n                            {...register('password1', {\r\n                              required: 'Password is required'\r\n                            })}\r\n                          />\r\n                          {/* <ErrorMessage\r\n                            errors={errors}\r\n                            name=\"password1\"\r\n                            as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                          /> */}\r\n                        </IonCol>\r\n\r\n                        <IonCol size=\"12\" className=\"forget-password ion-text-right\">\r\n                            <IonButton routerLink={Routes.forgetPassword} fill=\"clear\">\r\n                              Forget password?\r\n                            </IonButton>   \r\n                        </IonCol>\r\n\r\n                        <IonCol size=\"6\" className=\"sign-up-btn\">\r\n                          <IonButton  className=\"secondary-button\" routerLink={Routes.signup} expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                            Signup\r\n                          </IonButton>\r\n                        </IonCol>\r\n\r\n                        <IonCol size=\"6\" className=\"login-btn\">\r\n                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                            Login\r\n                          </IonButton>\r\n                        </IonCol>\r\n\r\n                        <IonCol size=\"12\" className=\"gmail-btn\">\r\n                          <IonButton href=\"#\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                            <IonIcon slot=\"start\" src=\"/assets/images/google.svg\" />\r\n                            Login with Gmail\r\n                          </IonButton>\r\n                        </IonCol>\r\n\r\n                    </IonRow>\r\n                  </IonGrid>\r\n                </form>\r\n              </FormProvider>\r\n            </IonCol>\r\n\r\n          </IonRow>\r\n        </IonGrid>\r\n\r\n      </IonContent>\r\n\r\n      \r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx",["222","223"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nfunction recaptchaLoaded() {\r\n   console.log('Recaptcha loaded successfully');\r\n}\r\n\r\nconst StaffSignup: React.FC = () => {\r\n\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, setValue, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   \r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\" onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                   value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                   message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required',\r\n                                                pattern: {\r\n                                                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\r\n                                                  message: 'Password should be minimum 8 characters and maximum 12 characters long, with 1 upparcase and 1 special character.'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <div className=\"label-with-tooltip\">\r\n                                             <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                             <div className=\"tooltip\" title=\"Add Telephone\">!</div>\r\n                                          </div>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n                                       \r\n                                       <IonCol size=\"12\" className=\"google-recaptcha-btn\">\r\n                                          <Recaptcha\r\n                                             sitekey=\"6LfL2pMcAAAAAJGqw3rePggWbAJtKARjHPlf-ax2\"\r\n                                             render=\"explicit\"\r\n                                             onloadCallback={recaptchaLoaded}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                    \r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default StaffSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx",["224"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nfunction recaptchaLoaded() {\r\n   console.log('Recaptcha loaded successfully');\r\n}\r\n\r\nconst TenantSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   ;\r\n   ;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required',\r\n                                                pattern: {\r\n                                                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\r\n                                                  message: 'Password should be minimum 8 characters and maximum 12 characters long, with 1 upparcase and 1 special character.'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <div className=\"label-with-tooltip\">\r\n                                             <IonLabel className=\"form-lable\">Lease Code (Optional):</IonLabel>\r\n                                             <div className=\"tooltip\" title=\"Add Lease code.\">!</div>\r\n                                          </div>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"number\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"google-recaptcha-btn\">\r\n                                          <Recaptcha\r\n                                             sitekey=\"6LfL2pMcAAAAAJGqw3rePggWbAJtKARjHPlf-ax2\"\r\n                                             render=\"explicit\"\r\n                                             onloadCallback={recaptchaLoaded}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default TenantSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx",["225"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nfunction recaptchaLoaded() {\r\n   console.log('Recaptcha loaded successfully');\r\n}\r\n\r\nconst ManagementSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required',\r\n                                                pattern: {\r\n                                                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\r\n                                                  message: 'Password should be minimum 8 characters and maximum 12 characters long, with 1 upparcase and 1 special character.'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <div className=\"label-with-tooltip\">\r\n                                             <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                             <div className=\"tooltip\" title=\"Add Telephone\">!</div>\r\n                                          </div>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"google-recaptcha-btn\">\r\n                                          <Recaptcha\r\n                                             sitekey=\"6LfL2pMcAAAAAJGqw3rePggWbAJtKARjHPlf-ax2\"\r\n                                             render=\"explicit\"\r\n                                             onloadCallback={recaptchaLoaded}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default ManagementSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx",["226","227","228","229","230"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonPage,\r\n    IonContent,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonIcon,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonFabList,\r\n    IonButton,\r\n    IonReorder, \r\n    IonReorderGroup,\r\n    IonPopover\r\n} from '@ionic/react';\r\nimport { ItemReorderEventDetail } from '@ionic/core';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport ManagePropertyMoreMenu from '../components/ManagePropertyMoreMenu';\r\nimport ManagePropertyArchievedMenu from '../components/ManagePropertyArchievedMenu';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport { add } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from '../App';\r\n\r\n\r\nconst ManageProperties: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const toggleReorder = (event: CustomEvent<ItemReorderEventDetail>) => {\r\n        event.detail.complete();\r\n    };\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n\r\n        <IonPage>\r\n  \r\n            <HeaderMain pageTitle=\"Manage Properties\" logoHide=\"hide-logo\" />\r\n  \r\n            <IonContent className=\"dashboard-wrapper\" fullscreen>\r\n\r\n                <IonGrid className=\"dashboard-main-grid manage-property-wrapper\">  \r\n                    <IonRow class=\"dashboard-main-row\">\r\n\r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n                        \r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonList>\r\n                                <p>Add, rearrange, edit or delete properties.</p>\r\n                                <IonReorderGroup>\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            BL1 - Belvedaire 1\r\n                                            <p>10 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            4MS - 400 Maisonneuve\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item archieved-propeprty\">\r\n                                        <IonLabel>\r\n                                            BL2 - Belvedaire 2\r\n                                            <p>20 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyArchievedMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n\r\n                                    <IonItem className=\"user-select-item\">\r\n                                        <IonLabel>\r\n                                            1BR - 100 Berri\r\n                                            <p>400 Maisonneuve, Montreal</p>\r\n                                        </IonLabel>\r\n                                        <ManagePropertyMoreMenu />\r\n                                        <IonReorder slot=\"end\" />\r\n                                    </IonItem>\r\n                                </IonReorderGroup>\r\n                            </IonList>\r\n                        </IonCol>\r\n                        \r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n                    \r\n                    </IonRow>\r\n\r\n                    <IonPopover\r\n                        cssClass='property-change-menu-popup' \r\n                        mode=\"ios\"\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <IonList>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\" routerLink={Routes.addNewProperty}>\r\n                                    <IonIcon icon={add} />  \r\n                                    <span>Add a Property</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon icon=\"/assets/images/reorder.svg\"  />\r\n                                    <span>Rearrange List</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon />\r\n                                    <span>Hide Archieved</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        </IonList>\r\n                    </IonPopover>\r\n\r\n                    <IonButton \r\n                        className=\"property-change-button\" \r\n                        fill=\"clear\"\r\n                        onClick={\r\n                                (e) => {\r\n                                // e.persist();\r\n                                setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                            }}\r\n                    >\r\n                        <IonIcon src=\"/assets/images/format_list_bulleted.svg\"  />\r\n                    </IonButton>\r\n\r\n                </IonGrid>\r\n                 \r\n\r\n                {/* <IonFab className=\"property-fab-button\" vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton>\r\n                        <IonIcon src=\"/assets/images/format_list_bulleted.svg\"  />\r\n                    </IonFabButton>\r\n                    <IonFabList side=\"top\">\r\n                        <IonList>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\" routerLink={Routes.addNewProperty}>\r\n                                    <IonIcon icon={add} />  \r\n                                    <span>Add a Property</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon icon=\"/assets/images/reorder.svg\"  />\r\n                                    <span>Rearrange List</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                            <IonItem>\r\n                                <IonButton fill=\"clear\">\r\n                                    <IonIcon />\r\n                                    <span>Hide Archieved</span>\r\n                                </IonButton>\r\n                            </IonItem>\r\n                        </IonList>\r\n                    </IonFabList>\r\n                </IonFab> */}\r\n\r\n            </IonContent>\r\n\r\n            <Footer />\r\n            <FooterMobile />\r\n\r\n        </IonPage>\r\n        \r\n    );\r\n};\r\n\r\nexport default ManageProperties;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx",["231"],"import React, {useRef, useState, useEffect} from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonSegment,\r\n    IonSegmentButton,\r\n    IonSlides,\r\n    IonSlide\r\n} from '@ionic/react';\r\n  \r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\nimport ManageTenantGeneralTab from '../components/ManageTenanatGeneralTab';\r\nimport ManageTenanatSearchTab from '../components/ManageTenanatSearchTab';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n  \r\nconst ManageTenants: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const location = useLocation();\r\n    // console.log(location.pathname);\r\n    \r\n    // a ref variable to handle the current slider\r\n    // const slider = useRef<HTMLIonSlidesElement>(null);\r\n    const slider = useRef<any>(null);\r\n    // a state value to bind segment value\r\n    const [value, setValue] = useState(\"0\");\r\n\r\n    useEffect(() => {\r\n        slider.current.lockSwipes(true);\r\n    });\r\n\r\n    const slideOpts = {\r\n      initialSlide: 0,\r\n      speed: 400,\r\n      loop: false,\r\n      pagination: {\r\n        el: null\r\n      },\r\n    \r\n    };\r\n\r\n    // a function to handle the segment changes\r\n    const handleSegmentChange = async (e: any) => {\r\n        await slider.current.lockSwipes(false);\r\n        setValue(e.detail.value);\r\n        slider.current!.slideTo(e.detail.value);\r\n        await slider.current.lockSwipes(true);\r\n    };\r\n\r\n    // a function to handle the slider changes\r\n    const handleSlideChange = async (event: any) => {\r\n      let index: number = 0;\r\n      await event.target.getActiveIndex().then((value: any) => (index=value));\r\n      setValue(''+index)\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Leases\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper manage-tenants-wrapper\" fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <IonSegment scrollable  mode=\"md\" value={value} onIonChange={(e) => handleSegmentChange(e)} >\r\n                                    <IonSegmentButton value=\"0\">\r\n                                        General\r\n                                    </IonSegmentButton>\r\n                                    <IonSegmentButton value=\"1\">\r\n                                        Search Tool\r\n                                    </IonSegmentButton>\r\n                                </IonSegment>\r\n\r\n                                <IonSlides pager={true} options={slideOpts} onIonSlideDidChange={(e) => handleSlideChange(e)} ref={slider}>\r\n                                    <IonSlide>\r\n                                        <ManageTenantGeneralTab />\r\n                                    </IonSlide>\r\n                                    {/*-- Package Segment --*/}\r\n                                    <IonSlide>\r\n                                        <ManageTenanatSearchTab />\r\n                                    </IonSlide>\r\n                                </IonSlides>\r\n                            </div>\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default ManageTenants;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx",["232","233","234","235"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst LeaseInfo: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Leases\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"204\"} name=\"apprtmentNumber\" readonly></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"} name=\"leaseCode\" readonly></IonInput>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\" disabled>\r\n                                        Generate New Lease Code\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 1</h4>\r\n                                        <IonRow>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>First Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"John\"} name=\"t1FirstName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>Last Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t1LastName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </div>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 2</h4>\r\n                                        <IonRow>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>First Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"Dianna\"} name=\"t2FirstName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>Last Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t2LastName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\" disabled>\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"2\"} name=\"numberOfTenants\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"currentLeasePrice\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Jan. 8th, 2020\"} name=\"leaseStartDate\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Feb. 8th, 2021\"} name=\"leaseEndDate\" readonly></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">1. My Filename1.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">2. My Filename2.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton className=\"exit-file-btn\" routerLink={Routes.manageTenants} fill=\"solid\" shape=\"round\">Exit File</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default LeaseInfo;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx",["236","237","238","239"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonDatetime,\r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst AddNewLease: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [selectedDate, setSelectedDate] = useState<string>('');\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Leases\"  logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"502\"} name=\"apprtmentNumber\" readonly></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"}  name=\"leaseCode\" readonly></IonInput>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <form>\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <div className=\"tenant-title-wrap\">\r\n                                            <h4>Tenant 1</h4>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>First Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value=\"\" name=\"t1FirstName\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Last Name*</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value=\"\" name=\"t1LastName\"></IonInput>\r\n                                        </div>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\">\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value=\"\" name=\"numberOfTenants\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput className=\"width-50\" mode=\"md\" type=\"text\" value=\"\" name=\"currentLeasePrice\"></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseStartDate\" placeholder=\"Select Date\" value={selectedDate} onIonChange={e => setSelectedDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseEndDate\" placeholder=\"Select Date\" value={selectedDate} onIonChange={e => setSelectedDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name\"></p>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name\"></p>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton className=\"submit-new-lease-btn\" routerLink=\"#\" fill=\"outline\" shape=\"round\">Submit</IonButton>\r\n                                    <IonButton className=\"cancle-btn\" routerLink=\"#\" fill=\"solid\" shape=\"round\">Cancle</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                            </form>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default AddNewLease;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx",["240","241","242","243","244"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow,\r\n    IonCol, \r\n    IonLabel, \r\n    IonInput, \r\n    IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n    IonSelect,\r\n    IonSelectOption,\r\n    IonNote,\r\n    IonItem,\r\n    IonIcon,\r\n    useIonViewWillEnter \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm, Controller } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport { close } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n    initialSlide: 0,\r\n    speed: 400\r\n};\r\n\r\nconst AddNewProperty: React.FC<{ path: string }> = ({path}) => {\r\n    const mySlides = useRef<any>(null);\r\n    const [counter, updateCounter] = useState(0);\r\n    const [floor, setFloor] = useState<number>(1); \r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n    const scrollToTop= () => {\r\n        contentRef.current && contentRef.current.scrollToTop();\r\n    };\r\n\r\n    const methods = useForm();\r\n    const { register, trigger, handleSubmit, control, setValue, getValues, formState: { errors } } = methods;\r\n\r\n    useEffect(() => {\r\n        mySlides.current.lockSwipes(true);\r\n    });\r\n\r\n    const next = async (fields: any) => {\r\n        const result = await trigger(fields);\r\n        if (!result) return;\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slideNext();\r\n        await mySlides.current.lockSwipes(true);\r\n        scrollToTop();\r\n    };\r\n\r\n    useIonViewWillEnter(() => {\r\n        console.log('useIonViewWillEnter event fired');\r\n        mySlides.current.lockSwipes(false);\r\n        mySlides.current.slideTo(0);\r\n    });\r\n\r\n    const prev = async () => {\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slidePrev();\r\n        await mySlides.current.lockSwipes(true);\r\n    };\r\n      \r\n    const onSubmit = (data: any) => {\r\n        console.log(data);\r\n    };\r\n\r\n    const defaultList = [\r\n        { id: 501, value: \"501\" },\r\n        { id: 502, value: \"502\" },\r\n    ];\r\n    \r\n    const [list, setList] = useState(defaultList);\r\n\r\n    function handleRemove(id: any) {\r\n        let newList = list;\r\n        // const elementToSearch = {id: id};\r\n        if (newList.length === 1) {\r\n            newList = defaultList;\r\n        } else {\r\n            newList = list.filter(el => el.id !== id);\r\n            // console.log(newList);\r\n        }\r\n\r\n        setList(newList);\r\n    };\r\n\r\n    function addItems(id: any) {\r\n        const lastElement = list[list.length - 1];\r\n        const lastElementID = lastElement.id;\r\n        let newList = list;\r\n        // console.log(lastElementID, counter);\r\n\r\n        if (newList.length === 0) {\r\n            newList = defaultList;\r\n        } else {\r\n            const newElement = newList[newList.length - 1].id + 1;\r\n            newList.push({id: newElement, value: \"\"});\r\n            // newElement.current.setFocus(); \r\n            // newList.splice(lastElementID, 0, {id: newElement, value: \"\"});\r\n            // setList(newList);\r\n        }\r\n        updateCounter(counter + 1);\r\n        \r\n        // console.log(newList);\r\n        setList(newList);\r\n    };\r\n\r\n    const renderList = () => {\r\n        return list.map(item => {\r\n            return (\r\n                // <>\r\n                    <IonCol key={item.id} size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" id={item.id.toString()}>\r\n                        <div className=\"apartment-info\">\r\n                            <IonButton onClick={() => handleRemove(item.id)} fill=\"clear\">\r\n                                <IonIcon icon={close} />\r\n                            </IonButton>\r\n                            <IonInput mode=\"md\" type=\"text\" value={item.value}></IonInput>\r\n                        </div>\r\n                    </IonCol>\r\n                // </>\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n    <IonPage>\r\n\r\n         <HeaderMain pageTitle=\"Add New Propery\"  logoHide=\"hide-logo\"/>\r\n\r\n         <IonContent className=\"dashboard-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n\r\n            <IonGrid className=\"dashboard-main-grid add-proepry-wrapper\">\r\n                <IonRow className=\"ion-justify-content-between dashboard-main-row\">\r\n\r\n                    {/* sidebar start  */}\r\n                    <DashboardSidebar path={path} />\r\n                    {/* sidebar end  */}\r\n                        \r\n                    <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"4\">\r\n                        <FormProvider {...methods}>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <IonSlides pager={true} options={slideOpts} ref={mySlides} >\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow className=\"ion-justify-content-center\">\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <div className=\"label-with-tooltip\">\r\n                                                        <IonLabel className=\"form-lable\">Property Name</IonLabel>\r\n                                                        <div className=\"tooltip\" title=\"Add Property Name\">!</div>\r\n                                                    </div>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyName', {\r\n                                                            required: 'Property name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyName\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <div className=\"label-with-tooltip\">\r\n                                                        <IonLabel className=\"form-lable\">Property Name Suffix (3 Characters)</IonLabel>\r\n                                                        <div className=\"tooltip\" title=\"Add Property Name Suffix (3 Characters)\">!</div>\r\n                                                    </div>\r\n                                                    \r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyNameSuffix', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z]{3}$/i,\r\n                                                                message: 'Property name suffix should only contain characters and it should not more than 3 characters.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyNameSuffix\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Address</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyAddress', {\r\n                                                            required: 'Address is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyAddress\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">City</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('city', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"city1\">City 1</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city2\">City 2</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city3\">City 3</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city4\">City 4</IonSelectOption>\r\n                                                            <IonSelectOption value=\"city5\">City 5</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"city\"\r\n                                                        rules={{ required: 'Please select city' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"city\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Province/State</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('state', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"state1\">State 1</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state2\">State 2</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state3\">State 3</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state4\">State 4</IonSelectOption>\r\n                                                            <IonSelectOption value=\"state5\">State 5</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"state\"\r\n                                                        rules={{ required: 'Please select State' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"state\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <div className=\"label-with-tooltip\">\r\n                                                        <IonLabel className=\"form-lable\">Country</IonLabel>\r\n                                                        <div className=\"tooltip\" title=\"Add Country\">!</div>\r\n                                                    </div>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('country', {\r\n                                                            required: 'Country name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"country\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <div className=\"label-with-tooltip\">\r\n                                                        <IonLabel className=\"form-lable\">Postal code</IonLabel>\r\n                                                        <div className=\"tooltip\" title=\"Add Postal code\">!</div>\r\n                                                    </div>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('postalCode', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z0-9]{6}$/i,\r\n                                                                message: 'Please enter a valid postal code.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"postalCode\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['propertyName','propertyNameSuffix', 'propertyAddress', 'city', 'state', 'country', 'postalCode'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol  size=\"6\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next([])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow className=\"ion-justify-content-center\">\r\n\r\n                                                <IonNote>Roughly estimate the number of apartments per floor in your building. After generating the building, you will be able to specifically change the layout per floor if some floor do not have the same number of apartments.</IonNote>\r\n\r\n                                                <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"margin-right-auto form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Number of Floors</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\"   \r\n                                                        {...register('numberOfFloors', {\r\n                                                            required: 'Please mention number of floors.',\r\n                                                            pattern: {\r\n                                                                value: /\\d{3}$/i,\r\n                                                                message: 'Invalid floor number'\r\n                                                             }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"numberOfFloors\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <div className=\"label-with-tooltip\">\r\n                                                        <IonLabel className=\"form-lable\">Number of Apartments per Floor</IonLabel>\r\n                                                        <div className=\"tooltip\" title=\"Add Number of Apartments per Floor\">!</div>\r\n                                                    </div>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\"   \r\n                                                        {...register('numberOfApartments', {\r\n                                                            required: 'Please mention number of Apartments per floor.',\r\n                                                            pattern: {\r\n                                                                value: /^[0-9]{3}$/i,\r\n                                                                message: 'Invalid number of apartments per floor'\r\n                                                             }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"numberOfApartments\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Units Number Format</IonLabel>\r\n                                                    <Controller\r\n                                                        render={({ field }) => (\r\n                                                        <IonSelect\r\n                                                            mode=\"md\"\r\n                                                            placeholder=\"\"\r\n                                                            value={field.value}\r\n                                                            onIonChange={e => setValue('unitesNumberFormat', e.detail.value)}\r\n                                                        >\r\n                                                            <IonSelectOption value=\"101\">101</IonSelectOption>\r\n                                                            <IonSelectOption value=\"102\">102</IonSelectOption>\r\n                                                            <IonSelectOption value=\"103\">103</IonSelectOption>\r\n                                                            <IonSelectOption value=\"104\">104</IonSelectOption>\r\n                                                            <IonSelectOption value=\"105\">105</IonSelectOption>\r\n                                                        </IonSelect>\r\n                                                        )}\r\n                                                        control={control}   \r\n                                                        name=\"unitesNumberFormat\"\r\n                                                        rules={{ required: 'Please select Units Number Formate' }}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"unitesNumberFormat\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol  size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['numberOfFloors', 'numberOfApartments', 'unitesNumberFormat'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol  size=\"6\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                    <IonButton className=\"secondary-button\" expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next([])}>\r\n                                                        Generate Property\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n\r\n                                        <div>\r\n                                            <IonNote className=\"generated-floor-note\">You are almost done adding the property to your account. To customize a floor, select a floor from the dropdown menu, then add, remove or change the apartment number format to match the ones that you own.</IonNote>\r\n\r\n                                            <div className=\"generated-floor-box\">\r\n                                                <div className=\"generated-floor-box-title-wrap label-with-tooltip\">\r\n                                                    <h4 className=\"generated-floor-box-title\">Generated Floors</h4>\r\n                                                    <div className=\"tooltip\" title=\"Choose Floors\">!</div>\r\n                                                </div>\r\n                                                <IonGrid>\r\n                                                    <IonRow className=\"ion-justify-content-center\">\r\n                                                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"form-field margin-right-auto\">\r\n                                                            <IonLabel className=\"form-lable\">Choose a floor</IonLabel>\r\n                                                            <Controller\r\n                                                                render={({ field }) => (\r\n                                                                <IonSelect\r\n                                                                    className=\"floor-select\"\r\n                                                                    mode=\"md\"\r\n                                                                    placeholder=\"\"\r\n                                                                    // value={field.value}\r\n                                                                    value={5}\r\n                                                                    onIonChange={e => setFloor(e?.detail?.value || 1)}\r\n                                                                >\r\n                                                                    <IonSelectOption value={5}>5</IonSelectOption>\r\n                                                                    <IonSelectOption value={6}>6</IonSelectOption>\r\n                                                                    <IonSelectOption value={7}>7</IonSelectOption>\r\n                                                                    <IonSelectOption value={8}>8</IonSelectOption>\r\n                                                                    <IonSelectOption value={9}>9</IonSelectOption>\r\n                                                                </IonSelect>\r\n                                                                )}\r\n                                                                control={control}   \r\n                                                                name=\"chooseFloor\"\r\n                                                                rules={{ required: 'Please choose floor' }}\r\n                                                            />\r\n                                                            <ErrorMessage\r\n                                                                errors={errors}\r\n                                                                name=\"unitesNumberFormat\"\r\n                                                                as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                            />\r\n                                                        </IonCol>\r\n\r\n                                                        <IonCol size=\"12\" className=\"form-field\">\r\n                                                            <IonLabel className=\"form-lable\">Add, rename or delete apartment:</IonLabel>\r\n                                                            <IonGrid>\r\n                                                                <IonRow className=\"ion-justify-content-start\">\r\n\r\n                                                                    {renderList()}\r\n\r\n                                                                    <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"4\" className=\"\" onClick={addItems}>\r\n                                                                        <div className=\"apartment-info add-unit-button\">\r\n                                                                            <IonButton className=\"\" fill=\"clear\">\r\n                                                                                <IonLabel>Add a Unit</IonLabel>\r\n                                                                            </IonButton>\r\n                                                                            \r\n                                                                        </div>\r\n                                                                    </IonCol> \r\n                                                                     \r\n                                                                </IonRow>\r\n                                                            </IonGrid>\r\n                                                        </IonCol>\r\n                                                    </IonRow>\r\n                                                </IonGrid>   \r\n                                            </div>\r\n\r\n                                            <IonGrid>\r\n                                                <IonRow className=\"ion-justify-content-center\">                     <IonCol size=\"6\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"6\" className=\"form-field sign-up-btn\">\r\n                                                        <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                                                Submit\r\n                                                        </IonButton>\r\n                                                    </IonCol>\r\n\r\n                                                </IonRow>\r\n                                            </IonGrid>\r\n                                        </div>\r\n\r\n                                    </IonSlide>\r\n\r\n                                </IonSlides>\r\n                            </form>\r\n                        </FormProvider>\r\n                    </IonCol>\r\n\r\n                    {/* dashboar posts start */}\r\n                    <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                    </IonCol>\r\n                    {/* dashboar post end */}\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n\r\n            <Footer />\r\n\r\n        </IonContent>\r\n\r\n        \r\n        <FooterMobile />\r\n\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default AddNewProperty;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx",["245","246","247","248","249"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx",["250","251"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonList,\r\n    IonInput, \r\n    IonDatetime,\r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonAlert\r\n} from '@ionic/react';\r\n\r\nimport { close, attachOutline, chevronDown } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst LeaseRenewalProposal: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [selectedStartDate, setSelectedStartDate] = useState<string>('Jan 8th, 2020');\r\n    const [selectedEndDate, setSelectedEndDate] = useState<string>('Feb 8th, 2021');\r\n\r\n    const [generateNewLeaseCodeAlert, setGenerateNewLeaseCodeAlert] = useState(false);\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Renewal Proposal\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <IonRow className=\"apartment-lease-code-info\">\r\n                                <IonCol className=\"apartment-number\" size=\"4\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\">\r\n                                    <IonLabel>Apartment #</IonLabel>\r\n                                    <IonInput mode=\"md\" type=\"text\" value={\"204\"} name=\"apprtmentNumber\" readonly></IonInput>\r\n                                </IonCol>\r\n                                <IonCol className=\"lease-code-info\" size=\"8\" sizeMd=\"8\" sizeLg=\"7\" sizeXl=\"6\">\r\n                                    <div className=\"lease-code\">\r\n                                        <IonLabel>Lease Code</IonLabel>\r\n                                        <IonInput mode=\"md\" type=\"text\" value={\"Z123 1234 1234\"} name=\"leaseCode\" readonly></IonInput>\r\n                                    </div>\r\n                                    <IonButton \r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setGenerateNewLeaseCodeAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Generate New Lease Code\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={generateNewLeaseCodeAlert}\r\n                                        onDidDismiss={() => setGenerateNewLeaseCodeAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'New Lease Code'}\r\n                                        message={'<p>You are about to <strong>change</strong> this lease code.</p><p>This step cannot be undone.</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                    console.log('Confirm Okay');\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: blah => {\r\n                                                    console.log('Confirm Cancel: blah');\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Tenant Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 1</h4>\r\n                                        <IonRow>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>First Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"John\"} name=\"t1FirstName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"12\" sizeMd=\"6s\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>Last Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t1LastName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </div>\r\n                                    <div className=\"tenant-lease-details-info tenants-info\">\r\n                                        <h4>Tenant 2</h4>\r\n                                        <IonRow>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>First Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"Dianna\"} name=\"t2FirstName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"6\" sizeXl=\"6\">\r\n                                                <IonLabel>Last Name*</IonLabel>\r\n                                                <IonInput mode=\"md\" type=\"text\" value={\"Smith\"} name=\"t2LastName\" readonly></IonInput>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </div>\r\n                                    <IonButton fill=\"solid\" shape=\"round\" disabled>\r\n                                            <IonIcon icon=\"assets/images/plus-icon-gray.svg\" />\r\n                                            <span className=\"\">Add Another Tenant</span>\r\n                                    </IonButton>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n\r\n                            <IonCard className=\"tenant-lease-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Lease Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info lease-info\">\r\n                                        <div>\r\n                                            <IonLabel>Number of Tenants in Apartment</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"2\"} name=\"numberOfTenants\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Current Lease price</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"currentLeasePrice\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>New Lease price</IonLabel>\r\n                                            <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value=\"\" name=\"newLeasePrice\"></IonInput>\r\n                                        </div>\r\n                                        <div className=\"width-50\">\r\n                                            <IonLabel>Lease Start Date*</IonLabel>\r\n                                            {/* <IonInput mode=\"md\" type=\"text\" value={\"Jan. 8th, 2020\"} name=\"leaseStartDate\"></IonInput> */}\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseStartDate\" placeholder=\"Select Date\" value={selectedStartDate} onIonChange={e => setSelectedStartDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"width-50\">\r\n                                            <IonLabel>Lease End Date*</IonLabel>\r\n                                            {/* <IonInput mode=\"md\" type=\"text\" value={\"Feb. 8th, 2021\"} name=\"leaseEndDate\"></IonInput> */}\r\n                                            <div className=\"date-picker\">\r\n                                                <IonDatetime displayFormat=\"MMM DD, YYYY\" name=\"leaseEndDate\" placeholder=\"Select Date\" value={selectedEndDate} onIonChange={e => setSelectedEndDate(e.detail.value!)}></IonDatetime>\r\n                                                <IonIcon icon=\"assets/images/calendar-icon.svg\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"lease-scan-block\">\r\n                                        <IonLabel>Lease Scans</IonLabel>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">1. My Filename1.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"uploaded-file\">\r\n                                            <p className=\"uploaded-file-name read-only\">2. My Filename2.jpg</p>\r\n                                            <IonButton fill=\"clear\">\r\n                                                <IonIcon icon={close} />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        <div className=\"upload-photo-block\">\r\n                                            <IonButton className=\"upload-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon={attachOutline} />\r\n                                            </IonButton>\r\n                                            <IonButton className=\"take-photo-btn\" fill=\"solid\" shape=\"round\">\r\n                                                <IonIcon icon=\"assets/images/add-photo.svg\" />\r\n                                            </IonButton>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton  className=\"secondary-button submit-new-lease-btn\" routerLink=\"#\" fill=\"outline\" shape=\"round\">Submit</IonButton>\r\n                                    <IonButton className=\"exit-file-btn\" routerLink={Routes.manageTenants} fill=\"solid\" shape=\"round\">Exit File</IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default LeaseRenewalProposal;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-rents.tsx",["252"],"import React, {useRef, useState, useEffect} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonSegment,\r\n    IonSegmentButton,\r\n    IonSlides,\r\n    IonSlide\r\n} from '@ionic/react';\r\n  \r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\nimport ManageRentsGeneralTab from \"../components/ManageRentsGeneralTab\";\r\nimport ManageRentsSearchTab from \"../components/ManageRentsSearchTab\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n  \r\nconst ManageRents: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    // a ref variable to handle the current slider\r\n    // const slider = useRef<HTMLIonSlidesElement>(null);\r\n    const slider = useRef<any>(null);\r\n    // a state value to bind segment value\r\n    const [value, setValue] = useState(\"0\");\r\n    // useEffect(() => {\r\n    //     slider.current.lockSwipes(true);\r\n    // });\r\n\r\n    const slideOpts = {\r\n      initialSlide: 0,\r\n      speed: 400,\r\n      loop: false,\r\n      pagination: {\r\n        el: null\r\n      },\r\n    \r\n    };\r\n\r\n    // a function to handle the segment changes\r\n    const handleSegmentChange = async (e: any) => {\r\n        await slider.current.lockSwipes(false);\r\n        setValue(e.detail.value);\r\n        slider.current!.slideTo(e.detail.value);\r\n        await slider.current.lockSwipes(true);\r\n    };\r\n\r\n    // a function to handle the slider changes\r\n    const handleSlideChange = async (event: any) => {\r\n      let index: number = 0;\r\n      await event.target.getActiveIndex().then((value: any) => (index=value));\r\n      setValue(''+index)\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Rents\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper manage-tenants-wrapper manage-rents-wrapper\" fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <IonSegment scrollable  mode=\"md\" value={value} onIonChange={(e) => handleSegmentChange(e)} >\r\n                                    <IonSegmentButton value=\"0\">\r\n                                        General\r\n                                    </IonSegmentButton>\r\n                                    <IonSegmentButton value=\"1\">\r\n                                        Search Tool\r\n                                    </IonSegmentButton>\r\n                                </IonSegment>\r\n\r\n                                <IonSlides pager={true} options={slideOpts} onIonSlideDidChange={(e) => handleSlideChange(e)} ref={slider}>\r\n                                    <IonSlide>\r\n                                        <ManageRentsGeneralTab />\r\n                                    </IonSlide>\r\n                                    {/*-- Package Segment --*/}\r\n                                    <IonSlide>\r\n                                        <ManageRentsSearchTab />\r\n                                    </IonSlide>\r\n                                </IonSlides>\r\n                            </div>\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default ManageRents;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Rent-pay-details.tsx",["253","254","255"],"import React, {useRef, useState} from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonInput, \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonAlert \r\n} from '@ionic/react';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst RentPayDetails: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const [updateFileAlert, setUpdateFileAlert] = useState(false);\r\n    const [updateFileNotificationSentAlert, setUpdateFileNotificationSentAlert] = useState(false);\r\n    const [exitFileAlert, setExitFileAlert] = useState(false);\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Rents\"  logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n\r\n                            <form>\r\n                            <IonCard className=\"tenant-lease-details-card rent-pay-details-card\">\r\n                                <IonCardHeader>\r\n                                    <IonCardTitle>Rent Pay Details</IonCardTitle>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent>\r\n                                    <div className=\"tenant-lease-details-info rent-pay-info\">\r\n                                        <div>\r\n                                            <IonLabel>Apaprtment</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"502\"} name=\"renyPayApartment\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Rent Period</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"Dec. 1st, 2020 -> Dec.30th, 2020\"} name=\"t1LastName\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>Anticipated Pay</IonLabel>\r\n                                            <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"anticipatedPay\" readonly></IonInput>\r\n                                        </div>\r\n                                        <div>\r\n                                            <IonLabel>New Anticipated Pay</IonLabel>\r\n                                            <div className=\"paid-btn-wrap\">\r\n                                                <IonInput className=\"width-25\" mode=\"md\" type=\"text\" value=\"\" name=\"newanticipatedPay\"></IonInput>\r\n                                                <IonButton fill=\"outline\">Mark as Paid</IonButton>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                            \r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                <IonCol className=\"ion-text-center\">\r\n                                    <IonButton \r\n                                        className=\"confirm-btn secondary-button\"\r\n                                        fill=\"outline\" \r\n                                        shape=\"round\"\r\n                                        onClick={() =>\r\n                                            setUpdateFileAlert(true)\r\n                                        }\r\n                                    >\r\n                                        Confirm\r\n                                    </IonButton>\r\n                                    <IonAlert\r\n                                        isOpen={updateFileAlert}\r\n                                        onDidDismiss={() => setUpdateFileAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Update File'}\r\n                                        message={'<p>Are you sure you would like to update this file with new information?</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Yes',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: () => {\r\n                                                    setUpdateFileNotificationSentAlert(true)\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                text: 'No',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-outline',\r\n                                                handler: () => {\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n                                    <IonAlert\r\n                                        isOpen={updateFileNotificationSentAlert}\r\n                                        onDidDismiss={() => setUpdateFileNotificationSentAlert(false)}\r\n                                        cssClass='orange-alert'\r\n                                        mode='md'\r\n                                        header={'Update File'}\r\n                                        message={'<p>A notification of your update has been sent to all the tenants on this lease.</p>'}\r\n                                        buttons={[\r\n                                            {\r\n                                                text: 'Close',\r\n                                                role: 'cancel',\r\n                                                cssClass: 'btn-primary',\r\n                                                handler: () => {\r\n                                                }\r\n                                            }\r\n                                            \r\n                                        ]}\r\n                                    />\r\n\r\n                                    <IonButton \r\n                                        className=\"exit-file-btn\" \r\n                                        routerLink={Routes.manageRents} \r\n                                        fill=\"solid\" \r\n                                        shape=\"round\"\r\n                                    >\r\n                                        Exit File\r\n                                    </IonButton>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                            </form>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default RentPayDetails;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-dashboard.tsx",["256","257","258","259","260","261","262","263"],"import React, {useRef, useState, useEffect} from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonSegment,\r\n    IonSegmentButton,\r\n    IonSlides,\r\n    IonSlide,\r\n    IonButton,\r\n    IonIcon,\r\n    IonModal,\r\n    IonCard,\r\n    IonCardHeader,\r\n    IonCardTitle,\r\n    IonCardContent,\r\n    IonInput,\r\n    IonLabel,\r\n    IonAvatar,\r\n    IonAlert\r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm, FieldErrors } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n  \r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport TanatDahsboadTanatsTab from \"../components/TanatDahsboadTanatsTab\";\r\nimport TanatDahsboadPostsTab from \"../components/TanantsDashboardPostsTab\";\r\nimport { Routes } from '../App';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n  \r\nconst TenantDashboard: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const location = useLocation();\r\n    // console.log(location.pathname);\r\n    \r\n    // a ref variable to handle the current slider\r\n    // const slider = useRef<HTMLIonSlidesElement>(null);\r\n    const slider = useRef<any>(null);\r\n    // a state value to bind segment value\r\n    const [value, setValue] = useState(\"1\");\r\n    const btnref = useRef<HTMLIonButtonElement>(null);\r\n    const [addedLeaseCodeAlert, setAddedLeaseCodeAlert] = useState(false);\r\n\r\n    useEffect(() => {\r\n        slider.current.lockSwipes(true);\r\n    });\r\n\r\n    const slideOpts = {\r\n      initialSlide: 0,\r\n      speed: 400,\r\n      loop: false,\r\n      pagination: {\r\n        el: null\r\n      },\r\n    \r\n    };\r\n\r\n    // a function to handle the segment changes\r\n    const handleSegmentChange = async (e: any) => {\r\n        await slider.current.lockSwipes(false);\r\n        setValue(e.detail.value);\r\n        slider.current!.slideTo(e.detail.value);\r\n        await slider.current.lockSwipes(true);\r\n    };\r\n\r\n    // a function to handle the slider changes\r\n    const handleSlideChange = async (event: any) => {\r\n      let index: number = 0;\r\n      await event.target.getActiveIndex().then((value: any) => (index=value));\r\n      setValue(''+index)\r\n    }\r\n\r\n    const methods = useForm({ mode: \"all\"});\r\n    const { register, handleSubmit, formState: { errors } } = methods;\r\n\r\n    const onSubmit = (data: any) => {\r\n        // if (data.email == \"tenant@gmail.com\" && data.password1 == \"12345\") {\r\n        //   history.push(Routes.tenantDahsboard);\r\n        // }\r\n        // else {\r\n        //   history.push(Routes.managementDashboard);\r\n        // }\r\n        setAddedLeaseCodeAlert(true)\r\n    };\r\n\r\n    const myCondition = () => {\r\n\r\n    }\r\n\r\n    type ErrorSummaryProps<T> = {\r\n        errors: FieldErrors<T>;\r\n    };\r\n    function ErrorSummary<T>({ errors }: ErrorSummaryProps<T>) {\r\n        if (Object.keys(errors).length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className=\"error-summary\">\r\n                {Object.keys(errors).map((fieldName) => (\r\n                <ErrorMessage errors={errors} name={fieldName as any} as=\"div\" key={fieldName} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Leases\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper tenants-dashboard\" fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <IonCol className=\"dashboard-sidebar\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\"></IonCol>\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <IonSegment scrollable  mode=\"md\" value={value} onIonChange={(e) => handleSegmentChange(e)} >\r\n                                    <IonSegmentButton className=\"posts-tab-button\" value=\"0\">\r\n                                        Posts\r\n                                    </IonSegmentButton>\r\n                                    <IonSegmentButton value=\"1\">\r\n                                        Tenants\r\n                                    </IonSegmentButton>\r\n                                    <IonSegmentButton value=\"2\">\r\n                                        Management\r\n                                        <span className=\"notification-count\">4</span>\r\n                                    </IonSegmentButton>\r\n                                </IonSegment>\r\n\r\n                                <IonSlides pager={true} options={slideOpts} onIonSlideDidChange={(e) => handleSlideChange(e)} ref={slider}>\r\n                                    <IonSlide>\r\n                                        <TanatDahsboadPostsTab />\r\n                                    </IonSlide>\r\n                                    {/*-- Package Segment --*/}\r\n                                    <IonSlide>\r\n                                        <TanatDahsboadTanatsTab />\r\n                                    </IonSlide>\r\n                                    <IonSlide>\r\n                                        <TanatDahsboadPostsTab />\r\n                                    </IonSlide>\r\n                                </IonSlides>\r\n\r\n                                <IonButton className=\"post-add-button\" fill=\"clear\">\r\n                                    <IonIcon src=\"assets/images/post-icon.svg\"  />\r\n                                    {/* <IonImg className=\"logo\" src=\"assets/images/post1.png\" /> */}\r\n                                </IonButton>\r\n\r\n                                <IonCard className=\"enter-lease-code-card\">\r\n                                    <IonCardHeader>\r\n                                        <IonCardTitle>Hi John,</IonCardTitle>\r\n                                    </IonCardHeader>\r\n\r\n                                    <IonCardContent>\r\n                                        <div className=\"before-lease-code-content\">\r\n                                            <p>Enter your <b>Lease code</b> below to unlock all the features and services of the app.</p> \r\n                                            <p>The <b>Lease Code</b> is a unique code linking you to your Lease and it should not be shared unless you are with a partner under the same Lease.</p>\r\n\r\n                                            <form className=\"cofirm-lease-code-form\" onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                                            <IonGrid>\r\n                                                <IonRow className=\"ion-align-items-center\">\r\n                                                    <IonCol size=\"12\">\r\n                                                        <ErrorSummary errors={errors} />\r\n                                                    </IonCol>\r\n\r\n                                                    <IonCol size=\"12\">\r\n                                                        <IonLabel className=\"form-lable\">Lease Code</IonLabel>\r\n                                                    </IonCol>\r\n\r\n                                                    <IonCol size=\"12\" sizeMd=\"12\" sizeLg=\"12\" sizeXl=\"4\">\r\n                                                        <IonInput\r\n                                                            mode=\"md\"\r\n                                                            type=\"text\"\r\n                                                            className={`form-control ${errors.confirmLeaseCode ? 'is-invalid' : ''}`}\r\n                                                            placeholder=\"\"\r\n                                                            {...register('confirmLeaseCode', {\r\n                                                                required: 'Please enter correct lease code'\r\n                                                            })}\r\n                                                        />\r\n                                                    </IonCol>\r\n\r\n                                                    <IonCol className=\"lease-code-confirm-button\" size=\"12\" sizeMd=\"12\" sizeLg=\"12\" sizeXl=\"2\">\r\n                                                        <IonButton type=\"submit\" shape=\"round\" fill=\"outline\">\r\n                                                            Confirm\r\n                                                        </IonButton>\r\n                                                    </IonCol>\r\n                                                </IonRow>\r\n                                            </IonGrid>\r\n                                            </form>\r\n\r\n                                            <IonAlert\r\n                                                isOpen={addedLeaseCodeAlert}\r\n                                                onDidDismiss={() => setAddedLeaseCodeAlert(false)}\r\n                                                cssClass='orange-alert'\r\n                                                mode='md'\r\n                                                header={'Success'}\r\n                                                message={'<p>Your <b>Lease Code</b> has been added successfully. Enjoy all the features the service has to offer.</p>'}\r\n                                                buttons={[\r\n                                                    {\r\n                                                        text: 'Close',\r\n                                                        role: 'cancel',\r\n                                                        cssClass: 'btn-primary',\r\n                                                        handler: () => {\r\n                                                        }\r\n                                                    }\r\n                                                    \r\n                                                ]}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"after-lease-code-content\">\r\n                                            <p>What would you like to do today?</p>\r\n                                        </div>\r\n\r\n                                        <IonGrid className=\"tenant-dhaboard-button-list\">\r\n                                        <IonRow>\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"12\" sizeXl=\"6\">\r\n                                                <IonButton  className=\"\" expand=\"block\" shape=\"round\" fill=\"outline\" routerLink={Routes.payRents}>\r\n                                                    <div className=\"tenant-dhaboard-button\">\r\n                                                        <IonAvatar>\r\n                                                            <img src=\"assets/images/Pay-Rent-home.svg\" />\r\n                                                        </IonAvatar>\r\n                                                        <div className=\"tenant-dhaboard-button-content\">\r\n                                                            <h4>Pay the <b>Rent</b></h4>\r\n                                                            <p>Tap here to pay your monthly rent using various methods of payments.</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </IonButton>\r\n                                            </IonCol>\r\n\r\n                                            {/* <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"12\" sizeXl=\"6\">\r\n                                                <IonButton  className=\"\" expand=\"block\" shape=\"round\" fill=\"outline\" routerLink={Routes.manageTenants}>\r\n                                                    <div className=\"tenant-dhaboard-button\">\r\n                                                        <IonAvatar>\r\n                                                            <img src=\"assets/images/Pay-Rent-home.svg\" />\r\n                                                        </IonAvatar>\r\n                                                        <div className=\"tenant-dhaboard-button-content\">\r\n                                                            <h4>Messaging</h4>\r\n                                                            <p>Tap here to chat with Management.</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </IonButton>\r\n                                            </IonCol> */}\r\n\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"12\" sizeXl=\"6\">\r\n                                                <IonButton  className=\"\" expand=\"block\" shape=\"round\" fill=\"outline\" routerLink={Routes.manageTenants}>\r\n                                                    <div className=\"tenant-dhaboard-button\">\r\n                                                        <IonAvatar>\r\n                                                            <img src=\"assets/images/Repair-home.svg\" />\r\n                                                        </IonAvatar>\r\n                                                        <div className=\"tenant-dhaboard-button-content\">\r\n                                                            <h4><b>Repairs</b> and <b>Request</b></h4>\r\n                                                            <p>Tap here to pay your monthly rent using various methods of payments.</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </IonButton>\r\n                                            </IonCol>\r\n\r\n                                            <IonCol size=\"12\" sizeMd=\"6\" sizeLg=\"12\" sizeXl=\"6\">\r\n                                                <IonButton  className=\"\" expand=\"block\" shape=\"round\" fill=\"outline\" routerLink={Routes.manageTenants}>\r\n                                                    <div className=\"tenant-dhaboard-button\">\r\n                                                        <IonAvatar>\r\n                                                            <img src=\"assets/images/Manage-Lease-home.svg\" />\r\n                                                        </IonAvatar>\r\n                                                        <div className=\"tenant-dhaboard-button-content\">\r\n                                                            <h4>Manage <b>Lease</b></h4>\r\n                                                            <p>Tap here to see Current and past lease information.</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                        </IonGrid>\r\n\r\n                                    </IonCardContent>\r\n                                </IonCard>\r\n\r\n                            </div>\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default TenantDashboard;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx",["264"],"import React, { useState } from 'react';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { \r\n    IonHeader, \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonImg,\r\n    IonButton,\r\n    IonPopover,\r\n    IonIcon,\r\n    useIonPopover,\r\n    IonList,\r\n    IonRadioGroup,\r\n    IonItem,\r\n    IonLabel,\r\n    IonRadio\r\n} from '@ionic/react';\r\n\r\nimport ChangePropertyPopover from './Change-Property-Popup';\r\n\r\nimport { createOutline, addOutline, close } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from '../App';\r\n\r\nconst HeaderMain: React.FC<{ pageTitle: string; logoHide: string; }> = props => {\r\n    \r\n    let history = useHistory();\r\n    \r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    const [changeProperty, setChangeProperty] = useState({ showPopover: false, event: undefined });\r\n\r\n    const [present, dismiss] = useIonPopover(ChangePropertyPopover, { onHide: () => dismiss() });\r\n\r\n    const pageBack = () => {\r\n      history.goBack();\r\n    };\r\n\r\n    const inputChangeHandler = (event: CustomEvent) => {\r\n\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setChangeProperty({ showPopover: false, event: undefined })\r\n    };\r\n\r\n    return (\r\n        \r\n        <IonHeader className=\"inner-main-header\">\r\n            <IonGrid>\r\n                <IonRow className=\"\">\r\n\r\n                    <IonButton className=\"back-buton\" fill=\"clear\"  onClick={pageBack}>\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/back-arrow.svg\" />\r\n                    </IonButton>\r\n\r\n                    <div className=\"apart-logo\">\r\n                        <IonButton className={props.logoHide} routerLink=\"/\" fill=\"clear\">\r\n                            <IonImg className=\"logo\" src=\"assets/images/aparto-logo.svg\" />\r\n                        </IonButton>\r\n                    </div>\r\n\r\n                    <h2 className=\"header-page-title\">{props.pageTitle}</h2>\r\n\r\n                    <IonPopover\r\n                        cssClass='my-custom-class'\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <p>This is popover content</p>\r\n                    </IonPopover>\r\n                    <IonButton className=\"notification-button ion-hide-lg-down\" fill=\"clear\" onClick={\r\n                        (e) => {\r\n                        // e.persist();\r\n                        setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                        }}\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        <span className=\"notification-count\">4</span>\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"message-button ion-hide-lg-down\" fill=\"clear\" routerLink=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        {/* <span className=\"notification-count\">4</span> */}\r\n                    </IonButton>\r\n\r\n                    <IonButton className=\"account-button ion-hide-lg-down\" fill=\"clear\" routerLink=\"#\">\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/ios-person.svg\"/>\r\n                    </IonButton>\r\n                        \r\n                    <IonPopover\r\n                        cssClass='change-property-popup'\r\n                        event={changeProperty.event}\r\n                        isOpen={changeProperty.showPopover}\r\n                        onDidDismiss={() => setChangeProperty({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <IonGrid className=\"change-property-popup-wrapper\">\r\n                            <IonButton className=\"close-popup-button\" fill=\"clear\" onClick={closePopup}>\r\n                                <IonIcon icon={close} />\r\n                            </IonButton>   \r\n                            <IonList>\r\n                                <p>Select a propeprty...</p>\r\n                                <IonRadioGroup onIonChange={inputChangeHandler}>\r\n\r\n                                <IonItem className=\"user-select-item\">\r\n                                    <IonLabel>\r\n                                        BL1 - Belvedaire 1\r\n                                        <p>10 Maisonneuve, Montreal</p>\r\n                                    </IonLabel>\r\n                                    <IonRadio mode=\"md\" value=\"BL1\" />\r\n                                </IonItem>\r\n\r\n                                <IonItem className=\"user-select-item\">\r\n                                    <IonLabel>\r\n                                        4MS - 400 Maisonneuve\r\n                                        <p>400 Maisonneuve, Montreal</p>\r\n                                    </IonLabel>\r\n                                    <IonRadio mode=\"md\" value=\"4MS\" />\r\n                                </IonItem>\r\n\r\n                                <IonItem className=\"user-select-item\">\r\n                                    <IonLabel>\r\n                                        BL2 - Belvedaire 2\r\n                                        <p>20 Maisonneuve, Montreal</p>\r\n                                    </IonLabel>\r\n                                    <IonRadio mode=\"md\" value=\"BL2\" />\r\n                                </IonItem>\r\n\r\n                                <IonItem className=\"user-select-item\">\r\n                                    <IonLabel>\r\n                                        1BR - 100 Berri\r\n                                        <p>400 Maisonneuve, Montreal</p>\r\n                                    </IonLabel>\r\n                                    <IonRadio mode=\"md\" value=\"1BR\" />\r\n                                </IonItem>\r\n\r\n                                </IonRadioGroup>\r\n                            </IonList>\r\n\r\n                            <IonGrid>\r\n                                <IonRow>\r\n                                    <IonCol size=\"6\" className=\"login-btn\">\r\n                                        <IonButton className=\"manage-property-btn secondary-button\" routerLink={Routes.manageProperties} expand=\"block\" shape=\"round\" fill=\"outline\" onClick={closePopup}>\r\n                                            <div className=\"button-inner\">\r\n                                                <IonIcon icon={createOutline} />\r\n                                                <span>Manage List of Properties</span>\r\n                                            </div>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                    <IonCol size=\"6\" className=\"login-btn\">\r\n                                        <IonButton className=\"add-property-btn\" routerLink={Routes.addNewProperty} expand=\"block\" shape=\"round\" fill=\"outline\" onClick={closePopup}>\r\n                                            <div className=\"button-inner\">\r\n                                                <IonIcon icon={addOutline} />\r\n                                                <span>Add a Property</span>\r\n                                            </div>\r\n                                        </IonButton>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonGrid>\r\n                        </IonGrid>\r\n                    </IonPopover>\r\n\r\n                    <IonButton \r\n                        className=\"change-property\" \r\n                        fill=\"clear\" \r\n                        // onClick={(e) =>\r\n                        //   present({\r\n                        //     event: e.nativeEvent,\r\n                        //     cssClass: 'change-property-popup'\r\n                        //   })\r\n                        // }\r\n                        onClick={\r\n                            (e: any) => {\r\n                              e.persist();\r\n                              setChangeProperty({ showPopover: true, event: e })\r\n                        }}\r\n                    >\r\n                        <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        <div className=\"proerty-name\">BL1 <span className=\"ion-hide-lg-down\">- Belvedaire 1</span></div>\r\n                    </IonButton>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonHeader>\r\n        \r\n    );\r\n};\r\n\r\nexport default HeaderMain;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx",["265","266"],"import React, { useState } from \"react\";\r\n\r\nimport { \r\n    IonFooter, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonButton,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonList,\r\n    IonItem,\r\n    IonAvatar,\r\n    IonLabel\r\n} from '@ionic/react';\r\n\r\nimport { menuOutline, settingsSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from '../App';\r\n\r\nconst FooterMobile: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <IonFooter className=\"ion-hide-lg-up\">\r\n            <IonGrid>\r\n\r\n                <IonRow>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-notification-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-home-button\" fill=\"clear\" routerLink={Routes.managementDashboard}>\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-message-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonPopover\r\n                        cssClass='footer-menu' \r\n                        mode=\"ios\"\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <IonList className=\"footer-mobile-menu\">\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">\r\n                                        <IonIcon icon=\"/assets/images/swap-horizontal.svg\"  />\r\n                                        <span className=\"\">Tenant Account</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/ios-person.svg\"  />\r\n                                        <span className=\"\">Account Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/bill-icon.svg\"  />\r\n                                        <span className=\"\">Billing History</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon={settingsSharp}  />\r\n                                        <span className=\"\">Service Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">FAQ</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">Logout</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                        </IonList>\r\n                    </IonPopover>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton \r\n                            className=\"footer-menu-button\" \r\n                            fill=\"clear\"\r\n                            onClick={\r\n                                    (e) => {\r\n                                    // e.persist();\r\n                                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                                }}\r\n                        >\r\n                            <IonIcon slot=\"icon-only\" icon={menuOutline} />\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n\r\n            </IonGrid>\r\n        </IonFooter>\r\n        \r\n    );\r\n};\r\n\r\nexport default FooterMobile;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx",["267","268","269","270","271","272","273","274","275","276"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton,  \r\n    IonCol, \r\n    IonList,\r\n    IonItem,\r\n    IonAvatar\r\n  } from '@ionic/react';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\nimport { getClassName } from \"@ionic/react/dist/types/components/utils\";\r\n\r\nconst TENANTS = \"tenants\"\r\nconst RENTS = \"rents\"\r\nconst REPAIRS = \"repairs\"\r\nconst POSTS = \"posts\"\r\nconst STAFF = \"staff\"\r\n\r\n\r\nconst DashboardSidebar: React.FC<{path: string}> = ({path}) => {\r\n    \r\n    const getClassName = (routePath: string[], className: string): string => {\r\n        // let activeClassName = \"\";\r\n        return routePath.indexOf(path) > -1 ? (className + \" active\") : className\r\n    }\r\n\r\n    return (\r\n\r\n        <IonCol className=\"dashboard-sidebar\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n            <p className=\"ion-hide-lg-up\">What would you like to do today?</p>\r\n\r\n            <IonList className=\"sidebar-menu-list\">\r\n\r\n                <IonItem>\r\n                    <IonButton id={TENANTS} className={getClassName([Routes.manageTenants, Routes.leaseInfo, Routes.editLeaseInfo, Routes.addNewLease, Routes.leaseRenewalProposal], \"dashboard-button\")} fill=\"clear\" routerLink={Routes.manageTenants}>\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Manage-Lease-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Tenants</b> & <b>Leases</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton id={RENTS} className={getClassName([Routes.manageRents, Routes.rentPayDetails], \"dashboard-button\")} fill=\"clear\" routerLink={Routes.manageRents}>\r\n                        <div className=\"dashboard-button-inner\">    \r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Pay-Rent-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Rents</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" fill=\"clear\" routerLink=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Repair-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Repairs</b> & <b>Requests</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton id={POSTS} className={getClassName([Routes.managePosts], \"dashboard-button\")} fill=\"clear\" routerLink={Routes.managePosts}>\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Posts-Home-Icon.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Posts</b> & <b>Marketplace</b></IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n                <IonItem>\r\n                    <IonButton className=\"dashboard-button\" slot=\"start\" fill=\"clear\" routerLink=\"#\">\r\n                        <div className=\"dashboard-button-inner\">\r\n                            <IonAvatar>\r\n                                <img src=\"assets/images/Staff-home.svg\" />\r\n                            </IonAvatar>\r\n                            <IonLabel  className=\"dashboard-button-label\"><b>Staff</b> accesses</IonLabel>\r\n                        </div>\r\n                    </IonButton>\r\n                </IonItem>\r\n\r\n            </IonList>\r\n        </IonCol>\r\n        \r\n    );\r\n};\r\n\r\nexport default DashboardSidebar;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsSearchTab.tsx",["277"],"import React, {useState} from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    useIonPopover,\r\n    createAnimation,\r\n    IonModal\r\n} from '@ionic/react';\r\n\r\nimport { searchSharp, close } from \"ionicons/icons\";\r\n\r\nimport RentPayReceiptPopup from \"./RentPayReceiptPopup\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst ManageRentsSearchTab: React.FC = () => {\r\n\r\n    // const [present, dismiss] = useIonPopover(RentPayReceiptPopup, { onHide: () => dismiss() });\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const enterAnimation = (baseEl: any) => {\r\n        const backdropAnimation = createAnimation()\r\n          .addElement(baseEl.querySelector('ion-backdrop')!)\r\n          .fromTo('opacity', '0.01', 'var(--backdrop-opacity)');\r\n    \r\n        const wrapperAnimation = createAnimation()\r\n          .addElement(baseEl.querySelector('.modal-wrapper')!)\r\n          .keyframes([\r\n            { offset: 0, opacity: '0', transform: 'scale(0)' },\r\n            { offset: 1, opacity: '0.99', transform: 'scale(1)' }\r\n          ]);\r\n    \r\n        return createAnimation()\r\n          .addElement(baseEl)\r\n          .easing('ease-out')\r\n          .duration(500)\r\n          .addAnimation([backdropAnimation, wrapperAnimation]);\r\n    }\r\n    \r\n    const leaveAnimation = (baseEl: any) => {\r\n        return enterAnimation(baseEl).direction('reverse');\r\n    }\r\n\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"find-digi-lease-block\">\r\n\r\n                <h6>Find an apartment and manage its rent.</h6>\r\n\r\n                <div className=\"search-box\">\r\n                    <IonLabel>Apartment #</IonLabel>\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"502\"}></IonInput>\r\n                    <IonButton expand=\"full\" fill=\"solid\" shape=\"round\">\r\n                        <div className=\"\">    \r\n                            <IonIcon icon={searchSharp}  />\r\n                            <span className=\"\">Search</span>\r\n                        </div>\r\n                    </IonButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <h6><b>Payment history</b> for <b><u>Apt 502</u></b></h6>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Upcoming (Current Lease)</h5>\r\n                    <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                        <IonButton className=\"edit-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"3\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"rent-price-block due-block\">\r\n                                    <h6>Due:</h6>\r\n                                    <p>$910</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"payment-date-block\">\r\n                                    <h6>Due Date:</h6>\r\n                                    <p>Feb. 1st 2021</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" sizeMd=\"6\" sizeLg=\"8\" sizeXl=\"8\" className=\"rent-period-block\">\r\n                                    <h6>Rent Period:</h6>\r\n                                    <p>Jan. 1st <IonIcon icon=\"assets/images/arrow-right.svg\" />Jan. 30th</p>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                    </div>\r\n                    <IonRow className=\"ion-justify-content-center\">\r\n                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                            <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Past</h5>\r\n                    <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                        {/* <IonButton \r\n                            className=\"view-lease-info-button\"\r\n                            fill=\"clear\" \r\n                            expand=\"full\" \r\n                            shape=\"round\"\r\n                            onClick={() =>\r\n                                present({\r\n                                  cssClass: 'rent-pay-receipt-popup'\r\n                                })\r\n                            }\r\n                        >\r\n                        </IonButton> */}\r\n                        <IonButton \r\n                            className=\"view-lease-info-button\" \r\n                            fill=\"clear\" \r\n                            expand=\"full\" \r\n                            shape=\"round\" \r\n                            onClick={() => setShowModal(true)}\r\n                        >\r\n                        </IonButton>\r\n                        <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"3\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"rent-price-block paid-block\">\r\n                                    <h6>Paid:</h6>\r\n                                    <p>$900</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"payment-date-block\">\r\n                                    <h6>Pay Date:</h6>\r\n                                    <p>Jan. 1st 2021</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" sizeMd=\"6\" sizeLg=\"8\" sizeXl=\"8\" className=\"rent-period-block\">\r\n                                    <h6>Rent Period:</h6>\r\n                                    <p>Dec. 1st <IonIcon icon=\"assets/images/arrow-right.svg\" />Dec. 30th</p>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                     <IonRow className=\"ion-justify-content-center\">\r\n                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                            <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonModal isOpen={showModal} enterAnimation={enterAnimation} leaveAnimation=        {leaveAnimation} cssClass=\"rent-pay-receipt-popup\">\r\n                            <IonButton className=\"close-popup-button\" fill=\"clear\" onClick={() => setShowModal(false)}> \r\n                                <IonIcon icon={close} />\r\n                            </IonButton>\r\n                            <RentPayReceiptPopup />\r\n                            {/* <IonButton onClick={() => setShowModal(false)}>Close Modal</IonButton> */}\r\n                    </IonModal>\r\n                    \r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManageRentsSearchTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\TanatDahsboadTanatsTab.tsx",["278"],"import React, {useState} from \"react\";\r\n\r\nimport { \r\n    IonButton, \r\n    IonGrid,\r\n    IonRow, \r\n    IonCol,\r\n    IonImg\r\n  } from '@ionic/react';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst TanatDahsboadTanatsTab: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"tab-content tenant-tab-content\">\r\n\r\n            <div className=\"posts-lists\">\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post1.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">$20</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post2.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">FREE</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post1.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">$20</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post2.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">$20</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n            </div>\r\n   \r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default TanatDahsboadTanatsTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\TanantsDashboardPostsTab.tsx",["279"],"import React, {useState} from \"react\";\r\n\r\nimport { \r\n    IonButton, \r\n    IonGrid,\r\n    IonRow, \r\n    IonCol,\r\n    IonImg\r\n  } from '@ionic/react';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst TanatDahsboadPostsTab: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"tab-content tenant-tab-content\">\r\n\r\n            <div className=\"posts-lists\">\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post1.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">$20</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post2.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">FREE</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post1.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">$20</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n                <div className=\"posts-list-block\">\r\n                    <IonButton className=\"post-details-link-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.rentPayDetails}></IonButton>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"post-row\">\r\n                            <IonCol className=\"post-image\">\r\n                                <div className=\"image-wrapper\">\r\n                                    <IonImg className=\"logo\" src=\"assets/images/post2.png\" />\r\n                                </div>\r\n                            </IonCol>\r\n                            <IonCol className=\"post-content\">\r\n                                <h4 className=\"post-title\">Toaster in great condition</h4>\r\n                                <h2 className=\"post-price\">$20</h2>\r\n                                <p className=\"post-date\">Posted: Jun. 22, 2020</p>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>                                    \r\n                </div>\r\n\r\n            </div>\r\n   \r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default TanatDahsboadPostsTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx",["280"],"import React from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol\r\n} from '@ionic/react';\r\n\r\nimport { searchSharp, addSharp } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst ManageTenanatSearchTab: React.FC = () => {\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"find-digi-lease-block\">\r\n\r\n                <h6><b>Find</b> or <b>create</b> a Digi-Lease using the apartment number.</h6>\r\n\r\n                <div className=\"search-box\">\r\n                    <IonLabel>Apartment #</IonLabel>\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"204\"}></IonInput>\r\n                    <IonButton expand=\"full\" fill=\"solid\" shape=\"round\">\r\n                        <div className=\"\">    \r\n                            <IonIcon icon={searchSharp}  />\r\n                            <span className=\"\">Search</span>\r\n                        </div>\r\n                    </IonButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <h6>Here are all the lease results for <b><u>Apt 204a</u></b></h6>\r\n                \r\n                <div className=\"search-result-box\">\r\n                    <h5>Upcoming</h5>\r\n                    <div className=\"lease-renewal\">\r\n                        <IonButton className=\"lease-renewal-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.leaseRenewalProposal}></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"ion-align-items-center\">\r\n                                <IonCol sizeXs=\"2\" sizeMd=\"1\" sizeLg=\"1\" sizeXl=\"1\" className=\"\">\r\n                                    <IonIcon icon=\"assets/images/exclamation-mark.svg\"  />\r\n                                </IonCol>\r\n                                <IonCol sizeXs=\"8\" sizeMd=\"10\" sizeLg=\"10\" sizeXl=\"10\" className=\"\">\r\n                                    <div className=\"renewal-lease-info\">\r\n                                        <h6><u>Lease Renewal.</u></h6>\r\n                                        <p>This lease expires on <b>Dec. 30th 2020.</b></p>\r\n                                        <p>Please Tap here to propose new lease</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol sizeXs=\"2\" sizeMd=\"1\" sizeLg=\"1\" sizeXl=\"1\" className=\"\">\r\n                                    <IonIcon icon=\"assets/images/plus-icon.svg\" />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Current</h5>\r\n                    <div className=\"tenants-lease-info\">\r\n                        <IonButton className=\"edit-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.editLeaseInfo}></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"7\" className=\"start-end-date-block\">\r\n                                    <div className=\"start-date-block\">\r\n                                        <h6>Start Date</h6>\r\n                                        <p>July</p>\r\n                                        <p>1<sup>st</sup></p>\r\n                                        <p>2020</p>\r\n                                    </div>\r\n                                    <div className=\"to-block\">\r\n                                        <p>To</p>\r\n                                        <IonIcon icon=\"assets/images/arrow-right.svg\" />\r\n                                    </div>\r\n                                    <div className=\"end-date-block\">\r\n                                        <h6>End Date</h6>\r\n                                        <p>June</p>\r\n                                        <p>31<sup>st</sup></p>\r\n                                        <p>2021</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" className=\"\">\r\n                                    <div className=\"tenant-lease-info\">\r\n                                        <h6>Tenants</h6>\r\n                                        <ol>\r\n                                            <li>John Smith</li>\r\n                                            <li>Dianna Smith</li>\r\n                                        </ol>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Past</h5>\r\n                    <div className=\"tenants-lease-info\">\r\n                        <IonButton className=\"view-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink={Routes.leaseInfo}></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"7\" className=\"start-end-date-block\">\r\n                                    <div className=\"start-date-block\">\r\n                                        <h6>Start Date</h6>\r\n                                        <p>July</p>\r\n                                        <p>1<sup>st</sup></p>\r\n                                        <p>2020</p>\r\n                                    </div>\r\n                                    <div className=\"to-block\">\r\n                                        <p>To</p>\r\n                                        <IonIcon icon=\"assets/images/arrow-right.svg\" />\r\n                                    </div>\r\n                                    <div className=\"end-date-block\">\r\n                                        <h6>End Date</h6>\r\n                                        <p>June</p>\r\n                                        <p>31<sup>st</sup></p>\r\n                                        <p>2021</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" className=\"\">\r\n                                    <div className=\"tenant-lease-info\">\r\n                                        <h6>Tenants</h6>\r\n                                        <ol>\r\n                                            <li>John Smith</li>\r\n                                            <li>Dianna Smith</li>\r\n                                        </ol>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManageTenanatSearchTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx",["281","282","283","284","285"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyArchievedMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" routerLink=\"#\">Restore</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyArchievedMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx",["286","287","288","289","290"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyMoreMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" routerLink=\"#\">Modify</IonButton>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\"  color=\"danger\" routerLink=\"#\">Remove</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyMoreMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentPayReceiptPopup.tsx",["291","292","293","294"],"import React from 'react';\r\n\r\nimport { \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonButton,\r\n    IonIcon,\r\n    IonInput,\r\n    IonLabel,\r\n    createAnimation\r\n} from '@ionic/react';\r\n\r\nimport { close } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst RentPayReceiptPopup: React.FC = () => {\r\n\r\n    \r\n    \r\n\r\n    return (\r\n\r\n        <IonGrid className=\"rent-pay-receipt-popup-wrapper\">\r\n\r\n            <div className=\"popup-title\">\r\n                <h4>Receipt</h4>\r\n                {/* <IonButton className=\"close-popup-button\" fill=\"clear\">\r\n                    <IonIcon icon={close} />\r\n                </IonButton> */}\r\n            </div> \r\n\r\n            <IonRow className=\"receipt-details\">\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Apartment</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"201\"} name=\"receiptApartment\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Rent Period</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"Jan. 1st - Jan. 30th, 2020\"} name=\"receiptRentPeriod\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Payment Method</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"Interac\"} name=\"receiptPaymentMethod\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Card Number</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"**** **** *123\"} name=\"receiptCardNumber\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Rent Cost</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"receiptRentCost\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>TPS</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"N/A\"} name=\"receiptTPS\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>TVQ</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"N/A\"} name=\"receiptTVQ\" readonly></IonInput>\r\n                </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow  className=\"receipt-amount\">\r\n                <IonCol size=\"12\">\r\n                    <IonLabel>Total Paid</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"12\">\r\n                    <p className=\"total-rent-paid\"><b>$900 CAD</b></p>\r\n                </IonCol>\r\n                <p className=\"rent-paid-date\">Paid: <span className=\"paid-date\">22/Jan/2020</span></p>\r\n            </IonRow>\r\n\r\n        </IonGrid> \r\n        // </IonPopover>\r\n        \r\n    );\r\n};\r\n\r\nexport default RentPayReceiptPopup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Pay-rent.tsx",["295","296"],"import React, {useRef, useState, useEffect} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonSegment,\r\n    IonSegmentButton,\r\n    IonSlides,\r\n    IonSlide,\r\n    IonAlert\r\n} from '@ionic/react';\r\n  \r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport RentsPayUpcomingTab from \"../components/RentsPayUpcomingTab\";\r\nimport RentsPayHistoryTab from \"../components/RentsPayHistoryTab\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n  \r\nconst PayRents: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    // a ref variable to handle the current slider\r\n    // const slider = useRef<HTMLIonSlidesElement>(null);\r\n    const slider = useRef<any>(null);\r\n    // a state value to bind segment value\r\n    const [value, setValue] = useState(\"0\");\r\n    // useEffect(() => {\r\n    //     slider.current.lockSwipes(true);\r\n    // });\r\n\r\n    const slideOpts = {\r\n      initialSlide: 0,\r\n      speed: 400,\r\n      loop: false,\r\n      pagination: {\r\n        el: null\r\n      },\r\n    \r\n    };\r\n\r\n    // a function to handle the segment changes\r\n    const handleSegmentChange = async (e: any) => {\r\n        await slider.current.lockSwipes(false);\r\n        setValue(e.detail.value);\r\n        slider.current!.slideTo(e.detail.value);\r\n        await slider.current.lockSwipes(true);\r\n    };\r\n\r\n    // a function to handle the slider changes\r\n    const handleSlideChange = async (event: any) => {\r\n      let index: number = 0;\r\n      await event.target.getActiveIndex().then((value: any) => (index=value));\r\n      setValue(''+index)\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Rent\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper manage-tenants-wrapper manage-rents-wrapper\" fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <IonCol className=\"dashboard-sidebar\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\"></IonCol>\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <IonSegment scrollable  mode=\"md\" value={value} onIonChange={(e) => handleSegmentChange(e)} >\r\n                                    <IonSegmentButton value=\"0\">\r\n                                        Upcoming\r\n                                    </IonSegmentButton>\r\n                                    <IonSegmentButton value=\"1\">\r\n                                        History\r\n                                    </IonSegmentButton>\r\n                                </IonSegment>\r\n\r\n                                <IonSlides pager={true} options={slideOpts} onIonSlideDidChange={(e) => handleSlideChange(e)} ref={slider}>\r\n                                    <IonSlide>\r\n                                        <RentsPayUpcomingTab />\r\n                                    </IonSlide>\r\n                                    {/*-- Package Segment --*/}\r\n                                    <IonSlide>\r\n                                        <RentsPayHistoryTab />\r\n                                    </IonSlide>\r\n                                </IonSlides>\r\n                            </div>\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default PayRents;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentsPayUpcomingTab.tsx",["297","298","299"],"import React, {useState} from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonAlert\r\n} from '@ionic/react';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst RentsPayUpcomingTab: React.FC = () => {\r\n    \r\n    const [quickPayAlert, setQuickPayAlert] = useState(false);\r\n    const [paymentCompleteAlert, setPaymentCompleteAlert] = useState(false);\r\n\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <p>Here is the list of your <b>Upcoming rent payments</b></p>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h3>2021</h3>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"due-rents-list\">\r\n                            <IonCol size=\"12\" sizeMd=\"12\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Due</span>: $900 CAD</p>\r\n                                                <h4>December</h4>\r\n                                                <p>01/12/2021</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-pay-buttons ion-text-right\">\r\n                                                <IonButton className=\"secondary-button choose-payment-method-button\"  shape=\"round\" fill=\"outline\" routerLink={Routes.paymentMethod}>Choose Payment Method</IonButton>\r\n                                                <IonButton className=\"quick-pay-button\"  shape=\"round\" fill=\"outline\" onClick={() => setQuickPayAlert(true)}>Quick Pay</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid> \r\n                                </div>                                   \r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h3>2022</h3>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"due-rents-list\">\r\n                            <IonCol size=\"12\" sizeMd=\"12\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Due</span>: $900 CAD</p>\r\n                                                <h4>January</h4>\r\n                                                <p>01/01/2022</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-pay-buttons ion-text-right\">\r\n                                                <IonButton className=\"secondary-button choose-payment-method-button\"  shape=\"round\" fill=\"outline\" routerLink={Routes.paymentMethod}>Choose Payment Method</IonButton>\r\n                                                <IonButton className=\"quick-pay-button\"  shape=\"round\" fill=\"outline\" onClick={() => setQuickPayAlert(true)}>Quick Pay</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid> \r\n                                </div>                                   \r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"12\" sizeMd=\"12\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Due</span>: $900 CAD</p>\r\n                                                <h4>February</h4>\r\n                                                <p>01/02/2022</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-pay-buttons ion-text-right\">\r\n                                                <IonButton className=\"secondary-button choose-payment-method-button\"  shape=\"round\" fill=\"outline\" routerLink={Routes.paymentMethod}>Choose Payment Method</IonButton>\r\n                                                <IonButton className=\"quick-pay-button\"  shape=\"round\" fill=\"outline\" onClick={() => setQuickPayAlert(true)}>Quick Pay</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid>  \r\n                                </div>                                  \r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"12\" sizeMd=\"12\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Due</span>: $900 CAD</p>\r\n                                                <h4>March</h4>\r\n                                                <p>01/03/2021</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-pay-buttons ion-text-right\">\r\n                                                <IonButton className=\"secondary-button choose-payment-method-button\"  shape=\"round\" fill=\"outline\" routerLink={Routes.paymentMethod}>Choose Payment Method</IonButton>\r\n                                                <IonButton className=\"quick-pay-button\"  shape=\"round\" fill=\"outline\" onClick={() => setQuickPayAlert(true)}>Quick Pay</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid>\r\n                                </div>                                    \r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow className=\"ion-justify-content-center\">\r\n                            <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                                <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n\r\n                    <IonAlert\r\n                        isOpen={quickPayAlert}\r\n                        onDidDismiss={() => setQuickPayAlert(false)}\r\n                        cssClass='orange-alert'\r\n                        mode='md'\r\n                        header={'Quick Pay'}\r\n                        message={'<p>Your defualt payment method is <b>PayPal</b>. Do you confirm to pay <b>$900</b> for the month of <b>December</b> 2021?</p>'}\r\n                        buttons={[\r\n                            {\r\n                                text: 'Yes',\r\n                                cssClass: 'btn-primary',\r\n                                handler: () => {\r\n                                    setPaymentCompleteAlert(true)\r\n                                }\r\n                            },\r\n                            {\r\n                                text: 'No',\r\n                                role: 'cancel',\r\n                                cssClass: 'btn-outline',\r\n                                handler: () => {\r\n                                    \r\n                                }\r\n                            }    \r\n                        ]}\r\n                    />\r\n\r\n                    <IonAlert\r\n                        isOpen={paymentCompleteAlert}\r\n                        onDidDismiss={() => setPaymentCompleteAlert(false)}\r\n                        cssClass='orange-alert rent-pay-alert'\r\n                        mode='md'\r\n                        header={'Payment Complete'}\r\n                        message={'<p>Your payment has been <b>processed</b>.</p> <p>Thank you!</p> <p>A receipt will be <b>e-mailed</b> to you shortly.</p>'}\r\n                        buttons={[\r\n                            {\r\n                                text: 'Return to Rent Page',\r\n                                role: 'cancel',\r\n                                cssClass: 'btn-primary',\r\n                                handler: () => {\r\n                                    \r\n                                }\r\n                            }    \r\n                        ]}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default RentsPayUpcomingTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentsPayHistoryTab.tsx",["300","301","302","303","304"],"import React, {useState} from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol\r\n} from '@ionic/react';\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst RentsPayHistoryTab: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <p>Here is the list of your <b>piad months</b></p>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h3>2020</h3>\r\n                    <IonGrid className=\"\">\r\n                        <IonRow className=\"paid-rents-list\">\r\n                            <IonCol size=\"12\" sizeXl=\"6\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"ion-align-items-center\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Paid</span>: $900 CAD</p>\r\n                                                <h4>October</h4>\r\n                                                <p>01/10/2021</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-period-block ion-text-right\">\r\n                                                <IonButton className=\"secondary-button view-receipt-button\"  shape=\"round\" fill=\"outline\">View Receipt</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid> \r\n                                </div>                                   \r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"12\" sizeXl=\"6\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"ion-align-items-center\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Paid</span>: $900 CAD</p>\r\n                                                <h4>November</h4>\r\n                                                <p>01/11/2021</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-period-block ion-text-right\">\r\n                                                <IonButton className=\"secondary-button view-receipt-button\"  shape=\"round\" fill=\"outline\">View Receipt</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid>  \r\n                                </div>                                  \r\n                            </IonCol>\r\n\r\n                            <IonCol size=\"12\" sizeXl=\"6\">\r\n                                <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                                    <IonGrid className=\"\">\r\n                                        <IonRow className=\"ion-align-items-center\">\r\n                                            <IonCol size=\"5\" sizeMd=\"4\" className=\"rent-price-block paid-block\">\r\n                                                <p><span>Paid</span>: $900 CAD</p>\r\n                                                <h4>December</h4>\r\n                                                <p>01/12/2021</p>\r\n                                            </IonCol>\r\n                                            <IonCol size=\"7\" sizeMd=\"8\" className=\"rent-period-block ion-text-right\">\r\n                                                <IonButton className=\"secondary-button view-receipt-button\"  shape=\"round\" fill=\"outline\">View Receipt</IonButton>\r\n                                            </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid>\r\n                                </div>                                    \r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow className=\"ion-justify-content-center\">\r\n                            <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                                <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonGrid>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default RentsPayHistoryTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Payment-method.tsx",["305","306","307"],"import React, {useRef, useState, useEffect} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonSegment,\r\n    IonSegmentButton,\r\n    IonSlides,\r\n    IonSlide,\r\n    IonLabel,\r\n    IonInput,\r\n    IonButton,\r\n    IonImg,\r\n    IonDatetime,\r\n    IonCheckbox,\r\n    IonItem\r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n  \r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n  \r\nconst PaymentMethod: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    // a ref variable to handle the current slider\r\n    // const slider = useRef<HTMLIonSlidesElement>(null);\r\n    const slider = useRef<any>(null);\r\n    // a state value to bind segment value\r\n    const [value, setValue] = useState(\"0\");\r\n    // useEffect(() => {\r\n    //     slider.current.lockSwipes(true);\r\n    // });\r\n\r\n    const [selectedDate, setSelectedDate] = useState<string>('');\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const slideOpts = {\r\n      initialSlide: 0,\r\n      speed: 400,\r\n      loop: false,\r\n      pagination: {\r\n        el: null\r\n      },\r\n    \r\n    };\r\n\r\n    // a function to handle the segment changes\r\n    const handleSegmentChange = async (e: any) => {\r\n        await slider.current.lockSwipes(false);\r\n        setValue(e.detail.value);\r\n        slider.current!.slideTo(e.detail.value);\r\n        await slider.current.lockSwipes(true);\r\n    };\r\n\r\n    // a function to handle the slider changes\r\n    const handleSlideChange = async (event: any) => {\r\n      let index: number = 0;\r\n      await event.target.getActiveIndex().then((value: any) => (index=value));\r\n      setValue(''+index)\r\n    }\r\n\r\n    const methods = useForm();\r\n    const { register, handleSubmit, formState: { errors } } = methods;\r\n \r\n    const onSubmit = (data: any) => {\r\n       console.log(data);\r\n    };\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Rent Pay\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper manage-tenants-wrapper manage-rents-wrapper\" fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <IonCol className=\"dashboard-sidebar\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\"></IonCol>\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content choose-payment-method-dashboard\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <div className=\"payment-method-wrapper\">\r\n                                    <div className=\"rent-pay-summary\">\r\n                                        <h3><u>Summary</u></h3>\r\n                                        <IonGrid className=\"ion-no-padding\">\r\n                                            <IonRow className=\"rents-pay-details\">\r\n                                                <IonCol size=\"6\">\r\n                                                    <p>Period</p>\r\n                                                    <h4 className=\"rent-pay-period\">Dec. 1st, 2021 - Dec. 31st, 2021</h4>\r\n                                                </IonCol>\r\n                                                <IonCol size=\"6\">\r\n                                                    <p>Total</p>\r\n                                                    <h4 className=\"rent-price\">$900</h4>\r\n                                                </IonCol>\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </div>\r\n\r\n                                    <div className=\"choose-payment-method-block\">\r\n                                        <h4>Choose a payment method</h4>\r\n                                        <IonSegment scrollable  mode=\"md\" value={value} onIonChange={(e) => handleSegmentChange(e)} >\r\n                                                <IonSegmentButton className=\"posts-tab-button\" value=\"0\">\r\n                                                    Paypal\r\n                                                </IonSegmentButton>\r\n                                                <IonSegmentButton value=\"1\">\r\n                                                    Credit Card\r\n                                                </IonSegmentButton>\r\n                                        </IonSegment>\r\n\r\n                                        <IonSlides pager={true} options={slideOpts} onIonSlideDidChange={(e) => handleSlideChange(e)} ref={slider}>\r\n\r\n                                            <IonSlide>\r\n                                                <FormProvider {...methods}>\r\n                                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                                    <IonGrid className=\"ion-no-padding\">\r\n                                                        <IonRow className=\"ion-align-items-center credit-card-details\">\r\n                                                            <IonCol size=\"3\" sizeMd=\"2\">\r\n                                                                <IonImg className=\"visa-logo\" src=\"assets/images/visa-logo.png\" />\r\n                                                            </IonCol>\r\n                                                            <IonCol size=\"9\" sizeMd=\"6\">\r\n                                                                <div className=\"form-field\">\r\n                                                                    <IonLabel className=\"form-lable\" >CARDHOLDER NAME*</IonLabel>\r\n                                                                    <IonInput\r\n                                                                        mode=\"md\"\r\n                                                                        type=\"text\"\r\n                                                                        {...register('cardHolderName', {\r\n                                                                            required: 'This field is required'\r\n                                                                        })}\r\n                                                                    />\r\n                                                                    <ErrorMessage\r\n                                                                        errors={errors}\r\n                                                                        name=\"cardHolderName\"\r\n                                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                                    />\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-field\">\r\n                                                                    <IonLabel className=\"form-lable\" >CARD NUMBER*</IonLabel>\r\n                                                                    <IonInput\r\n                                                                        mode=\"md\"\r\n                                                                        type=\"text\"\r\n                                                                        {...register('cardNumber', {\r\n                                                                            required: 'Please enter a card number',\r\n                                                                            pattern: {\r\n                                                                                value: /^(?:4[0-9]{12}(?:[0-9]{3})?)$/i,\r\n                                                                                message: 'Please enter a valid card number.'\r\n                                                                              }\r\n                                                                        })}\r\n                                                                    />\r\n                                                                    <ErrorMessage\r\n                                                                        errors={errors}\r\n                                                                        name=\"cardNumber\"\r\n                                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"form-field\">\r\n                                                                    <IonLabel className=\"form-lable\">EXPIRATION DATE*</IonLabel>\r\n                                                                    <IonDatetime \r\n                                                                        displayFormat=\"MM/YY\" min=\"2021-01-01\" max=\"2023-12-31\"\r\n                                                                        // name=\"cardExpiryDate\" placeholder=\"\" \r\n                                                                        {...register('cardExpiryDate', {\r\n                                                                            required: 'Please select card expiry date'\r\n                                                                        })}\r\n                                                                        value={selectedDate} \r\n                                                                        onIonChange={e => setSelectedDate(e.detail.value!)\r\n                                                                        }>\r\n\r\n                                                                    </IonDatetime>\r\n                                                                    <ErrorMessage\r\n                                                                        errors={errors}\r\n                                                                        name=\"cardExpiryDate\"\r\n                                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                                    />\r\n                                                                </div>\r\n                                                               \r\n                                                            </IonCol>\r\n                                                        </IonRow>\r\n                                                    </IonGrid>\r\n\r\n                                                    <div className=\"default-payment-method-checkbox\">               <IonItem className=\"checkbox-wrap\">\r\n                                                            <IonLabel className=\"form-lable\">Default payment method</IonLabel>\r\n                                                            <IonCheckbox mode=\"md\" slot=\"start\"></IonCheckbox>\r\n                                                        </IonItem>\r\n                                                        </div> \r\n                                                    \r\n                                                    <div className=\"payment-method-cofirm-method\">\r\n                                                        <IonButton type=\"submit\"  className=\"secondary-button ion-margin-top\" shape=\"round\" fill=\"outline\" >\r\n                                                            Confirm\r\n                                                        </IonButton>\r\n                                                    </div>\r\n\r\n                                                </form>\r\n                                                </FormProvider>\r\n                                            </IonSlide>\r\n\r\n                                            <IonSlide>\r\n                                            <FormProvider {...methods}>\r\n                                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                                    <IonGrid className=\"ion-no-padding\">\r\n                                                        <IonRow className=\"ion-align-items-center credit-card-details\">\r\n                                                            <IonCol size=\"3\" sizeMd=\"2\">\r\n                                                                <IonImg className=\"visa-logo\" src=\"assets/images/visa-logo.png\" />\r\n                                                            </IonCol>\r\n                                                            <IonCol size=\"9\" sizeMd=\"6\">\r\n                                                                <div className=\"form-field\">\r\n                                                                    <IonLabel className=\"form-lable\" >CARDHOLDER NAME*</IonLabel>\r\n                                                                    <IonInput\r\n                                                                        mode=\"md\"\r\n                                                                        type=\"text\"\r\n                                                                        {...register('cardHolderName', {\r\n                                                                            required: 'This field is required'\r\n                                                                        })}\r\n                                                                    />\r\n                                                                    <ErrorMessage\r\n                                                                        errors={errors}\r\n                                                                        name=\"cardHolderName\"\r\n                                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                                    />\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-field\">\r\n                                                                    <IonLabel className=\"form-lable\" >CARD NUMBER*</IonLabel>\r\n                                                                    <IonInput\r\n                                                                        mode=\"md\"\r\n                                                                        type=\"text\"\r\n                                                                        {...register('cardNumber', {\r\n                                                                            required: 'Please enter a card number',\r\n                                                                            pattern: {\r\n                                                                                value: /^(?:4[0-9]{12}(?:[0-9]{3})?)$/i,\r\n                                                                                message: 'Please enter a valid card number.'\r\n                                                                              }\r\n                                                                        })}\r\n                                                                    />\r\n                                                                    <ErrorMessage\r\n                                                                        errors={errors}\r\n                                                                        name=\"cardNumber\"\r\n                                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                \r\n                                                                <div className=\"form-field\">\r\n                                                                    <IonLabel className=\"form-lable\">EXPIRATION DATE*</IonLabel>\r\n                                                                    <IonDatetime \r\n                                                                        displayFormat=\"MM/YY\" min=\"2021-01-01\" max=\"2023-12-31\"\r\n                                                                        // name=\"cardExpiryDate\" placeholder=\"\" \r\n                                                                        {...register('cardExpiryDate', {\r\n                                                                            required: 'Please select card expiry date'\r\n                                                                        })}\r\n                                                                        value={selectedDate} \r\n                                                                        onIonChange={e => setSelectedDate(e.detail.value!)\r\n                                                                        }>\r\n\r\n                                                                    </IonDatetime>\r\n                                                                    <ErrorMessage\r\n                                                                        errors={errors}\r\n                                                                        name=\"cardExpiryDate\"\r\n                                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                                    />\r\n                                                                </div>\r\n                                                               \r\n                                                            </IonCol>\r\n                                                        </IonRow>\r\n                                                    </IonGrid>\r\n\r\n                                                    <div className=\"default-payment-method-checkbox\">               <IonItem className=\"checkbox-wrap\">\r\n                                                            <IonLabel className=\"form-lable\">Default payment method</IonLabel>\r\n                                                            <IonCheckbox mode=\"md\" slot=\"start\"></IonCheckbox>\r\n                                                        </IonItem>\r\n                                                        </div> \r\n                                                    \r\n                                                    <div className=\"payment-method-cofirm-method\">\r\n                                                        <IonButton type=\"submit\"  className=\"secondary-button ion-margin-top\" shape=\"round\" fill=\"outline\" >\r\n                                                            Confirm\r\n                                                        </IonButton>\r\n                                                    </div>\r\n\r\n                                                </form>\r\n                                                </FormProvider>\r\n                                            </IonSlide>\r\n                                        </IonSlides>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default PaymentMethod;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-posts.tsx",["308","309","310","311","312"],"import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol, \r\n    IonButton, \r\n    IonIcon,\r\n    IonItem,\r\n    IonPopover,\r\n    IonList\r\n} from '@ionic/react';\r\n\r\nimport { add } from \"ionicons/icons\";\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\nimport { Accordion } from \"../components/Accordion\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from \"../App\";\r\n\r\nconst ManagePosts: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const contentRef = useRef<HTMLIonContentElement | null>(null);\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    const scrollToBottom= () => {\r\n        contentRef.current && contentRef.current.scrollToBottom(500);\r\n    };\r\n\r\n    const pinnedPosts = [\r\n        { \r\n            id: \"1\",\r\n            title: \"How to change Lease Code for your apartment?\", \r\n            content: \"You may want to change Lease Code for your apartment in case it was accidently leaked. To do so, contact the management who will be able to generate a new Lease Code.\",\r\n            date: \"Last Modified: Jun. 22, 2020\",\r\n            attachFile: \"1. My Filename1.jpg\" \r\n        }\r\n    ];\r\n\r\n    const generalPosts = [\r\n        { \r\n            id: \"1\",\r\n            title: \"How to change Lease Code for your apartment?\", \r\n            content: \"You may want to change Lease Code for your apartment in case it was accidently leaked. To do so, contact the management who will be able to generate a new Lease Code.\",\r\n            date: \"Last Modified: Jun. 22, 2020\",\r\n            attachFile: \"1. My Filename1.jpg\"  \r\n        },\r\n        { \r\n            id: \"2\",\r\n            title: \"How to change Lease Code for your apartment?\", \r\n            content: \"You may want to change Lease Code for your apartment in case it was accidently leaked. To do so, contact the management who will be able to generate a new Lease Code.\",\r\n            date: \"Last Modified: Jun. 22, 2020\",\r\n            attachFile: \"1. My Filename1.jpg\" \r\n        },\r\n        { \r\n            id: \"3\",\r\n            title: \"How to change Lease Code for your apartment?\", \r\n            content: \"You may want to change Lease Code for your apartment in case it was accidently leaked. To do so, contact the management who will be able to generate a new Lease Code.\",\r\n            date: \"Last Modified: Jun. 22, 2020\",\r\n            attachFile: \"1. My Filename1.jpg\"  \r\n        },\r\n        { \r\n            id: \"4\",\r\n            title: \"How to change Lease Code for your apartment?\", \r\n            content: \"You may want to change Lease Code for your apartment in case it was accidently leaked. To do so, contact the management who will be able to generate a new Lease Code.\",\r\n            date: \"Last Modified: Jun. 22, 2020\",\r\n            attachFile: \"1. My Filename1.jpg\" \r\n        },\r\n        { \r\n            id: \"5\",\r\n            title: \"How to change Lease Code for your apartment?\", \r\n            content: \"You may want to change Lease Code for your apartment in case it was accidently leaked. To do so, contact the management who will be able to generate a new Lease Code.\",\r\n            date: \"Last Modified: Jun. 22, 2020\",\r\n            attachFile: \"1. My Filename1.jpg\" \r\n        }\r\n    ];\r\n\r\n    const [pinnedPostsData, setPinnedPostsData] = useState<Array<any>>(pinnedPosts);\r\n    const [generalPostsData, setGeneralPostsData] = useState<Array<any>>(generalPosts);\r\n    useEffect(() => {\r\n        // setPinnedPostsData(pinnedPosts);\r\n        // setGeneralPostsData(generalPosts);\r\n    });\r\n\r\n    const renderPinnedPostsData = () => {\r\n        return pinnedPostsData.map(item => {\r\n            return (\r\n                <div key={item.id}>\r\n                    <Accordion\r\n                        title={item.title}\r\n                        content={item.content}\r\n                        date={item.date}\r\n                        attachFile={item.attachFile}\r\n                    />\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    const renderGeneralPostsData = () => {\r\n        return generalPostsData.map(item => {\r\n            return (\r\n                <div key={item.id}>\r\n                    <Accordion\r\n                        title={item.title}\r\n                        content={item.content}\r\n                        date={item.date}\r\n                        attachFile={item.attachFile}\r\n                    />\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Manage Posts\"  logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper lease-info-wrapper\" ref={contentRef} scrollEvents={true} fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <div className=\"manage-posts-wrapper\">\r\n                                    <p>Here you can make announcements to all tenants or display relevant info related to the building.</p>\r\n                                    <div className=\"posts-list pinned-posts\">\r\n                                        <h3 className=\"title-with-line\">Pinned Posts:</h3>\r\n                                        {/* <MyAccordion\r\n                                            list={pinnedPostsData}\r\n                                            renderHeader={(item: any) => {\r\n                                                return (\r\n                                                    <h4>{item.title}</h4>\r\n                                                );\r\n                                            }}\r\n                                            renderPanel={(item: any) => {\r\n                                                return (\r\n                                                    <p>{item.content}</p>\r\n                                                );\r\n                                            }}\r\n                                        /> */}\r\n                                        {/* {renderPinnedPostsData()} */}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"posts-list general-posts\">\r\n                                        <h3 className=\"title-with-line\">General Posts:</h3>\r\n                                        {/* {renderGeneralPostsData()} */}\r\n                                    </div>\r\n\r\n                                    <IonButton \r\n                                        className=\"property-change-button\" \r\n                                        fill=\"clear\"\r\n                                        onClick={\r\n                                                (e) => {\r\n                                                // e.persist();\r\n                                                setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                                            }}\r\n                                    >\r\n                                        <IonIcon src=\"/assets/images/format_list_bulleted.svg\"  />\r\n                                    </IonButton>\r\n\r\n                                    <IonPopover\r\n                                        cssClass='property-change-menu-popup' \r\n                                        mode=\"ios\"\r\n                                        event={popoverState.event}\r\n                                        isOpen={popoverState.showPopover}\r\n                                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                                    >\r\n                                        <IonList>\r\n                                            <IonItem>\r\n                                                <IonButton fill=\"clear\" routerLink={Routes.createPosts}>\r\n                                                    <IonIcon icon={add} />  \r\n                                                    <span>Create a Post</span>\r\n                                                </IonButton>\r\n                                            </IonItem>\r\n                                            <IonItem>\r\n                                                <IonButton fill=\"clear\">\r\n                                                    <IonIcon icon=\"/assets/images/reorder.svg\"  />\r\n                                                    <span>Rearrange List</span>\r\n                                                </IonButton>\r\n                                            </IonItem>\r\n                                        </IonList>\r\n                                    </IonPopover>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonButton className=\"scroll-to-bottom-btn\" onClick={scrollToBottom} fill=\"clear\">\r\n                    <IonIcon icon=\"assets/images/double-arrow-down.svg\" />\r\n                </IonButton>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n            \r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManagePosts;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\MyAccordion.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Accordion.tsx",["313","314"],"import React, { useRef, useState } from 'react';\r\n\r\nimport { \r\n    IonRow,\r\n    IonCol,\r\n    IonIcon,\r\n    IonButton\r\n} from '@ionic/react';\r\n\r\nimport { caretDownOutline, createOutline } from \"ionicons/icons\";\r\n\r\ninterface AccordionProps {\r\n    title: React.ReactNode\r\n    content: React.ReactNode,\r\n    date: React.ReactNode,\r\n    attachFile: React.ReactNode,\r\n}\r\n\r\nexport const Accordion: React.FC<AccordionProps> = ({ title, content, date, attachFile }) => {\r\n    const [active, setActive] = useState(false)\r\n    const [height, setHeight] = useState('0px')\r\n    const [rotate, setRotate] = useState('transform duration-700 ease')\r\n\r\n    const contentSpace = useRef(null)\r\n\r\n    function toggleAccordion() {\r\n        setActive(active === false ? true : false)\r\n        // setActive((prevState) => !prevState)\r\n        // @ts-ignore\r\n        setHeight(active ? '0px' : `${contentSpace.current.scrollHeight}px`)\r\n        setRotate(active ? 'transform duration-700 ease' : 'transform duration-700 ease rotate-180')\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={ active ? 'accordion-item active' : 'accordion-item'}>\r\n\r\n            <IonRow className=\"accordion-button ion-align-items-center\">\r\n                <IonCol className=\"accordion-edit-button\">\r\n                    <IonButton fill=\"clear\">\r\n                        <IonIcon icon={createOutline} />\r\n                    </IonButton>\r\n                </IonCol>\r\n                <IonCol className=\"accordion-click-button\">\r\n                    <IonButton\r\n                        className=\"\"\r\n                        expand=\"block\" \r\n                        fill=\"clear\"\r\n                        onClick={toggleAccordion}\r\n                    >\r\n                        <div className=\"accordion-click-button-inner\">\r\n                            <p className=\"inline-block text-footnote light\">{title}</p>\r\n                            <IonIcon className=\"accordion-arrow\" />\r\n\r\n                        </div>\r\n                    </IonButton>\r\n                    <span className=\"post-date\">{date}</span>\r\n                </IonCol>\r\n            </IonRow>\r\n\r\n            <div\r\n                ref={contentSpace}\r\n                style={{ maxHeight: `${height}` }}\r\n                className=\"panel overflow-auto transition-max-height duration-700 ease-in-out\"\r\n            >\r\n                <div className=\"accordion-content\">\r\n                    <p>{content}</p>\r\n                    <div className=\"attached-files-list\">\r\n                        <div className=\"attached-file\">{attachFile}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Create-post.tsx",["315","316","317"],{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","severity":1,"message":"323","line":1,"column":10,"nodeType":"324","messageId":"325","endLine":1,"endColumn":18},{"ruleId":"322","severity":1,"message":"326","line":23,"column":22,"nodeType":"324","messageId":"325","endLine":23,"endColumn":29},{"ruleId":"322","severity":1,"message":"327","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":23},{"ruleId":"322","severity":1,"message":"328","line":4,"column":41,"nodeType":"324","messageId":"325","endLine":4,"endColumn":49},{"ruleId":"322","severity":1,"message":"329","line":6,"column":33,"nodeType":"324","messageId":"325","endLine":6,"endColumn":44},{"ruleId":"322","severity":1,"message":"330","line":54,"column":9,"nodeType":"324","messageId":"325","endLine":54,"endColumn":20},{"ruleId":"331","severity":1,"message":"332","line":31,"column":20,"nodeType":"333","messageId":"334","endLine":31,"endColumn":22},{"ruleId":"331","severity":1,"message":"332","line":31,"column":60,"nodeType":"333","messageId":"334","endLine":31,"endColumn":62},{"ruleId":"322","severity":1,"message":"335","line":62,"column":9,"nodeType":"324","messageId":"325","endLine":62,"endColumn":30},{"ruleId":"322","severity":1,"message":"336","line":1,"column":36,"nodeType":"324","messageId":"325","endLine":1,"endColumn":44},{"ruleId":"322","severity":1,"message":"337","line":41,"column":56,"nodeType":"324","messageId":"325","endLine":41,"endColumn":64},{"ruleId":"322","severity":1,"message":"336","line":1,"column":36,"nodeType":"324","messageId":"325","endLine":1,"endColumn":44},{"ruleId":"322","severity":1,"message":"336","line":1,"column":36,"nodeType":"324","messageId":"325","endLine":1,"endColumn":44},{"ruleId":"322","severity":1,"message":"338","line":10,"column":5,"nodeType":"324","messageId":"325","endLine":10,"endColumn":18},{"ruleId":"322","severity":1,"message":"339","line":14,"column":5,"nodeType":"324","messageId":"325","endLine":14,"endColumn":11},{"ruleId":"322","severity":1,"message":"340","line":15,"column":5,"nodeType":"324","messageId":"325","endLine":15,"endColumn":17},{"ruleId":"322","severity":1,"message":"341","line":16,"column":5,"nodeType":"324","messageId":"325","endLine":16,"endColumn":15},{"ruleId":"322","severity":1,"message":"342","line":41,"column":11,"nodeType":"324","messageId":"325","endLine":41,"endColumn":24},{"ruleId":"322","severity":1,"message":"343","line":28,"column":11,"nodeType":"324","messageId":"325","endLine":28,"endColumn":19},{"ruleId":"322","severity":1,"message":"336","line":1,"column":24,"nodeType":"324","messageId":"325","endLine":1,"endColumn":32},{"ruleId":"322","severity":1,"message":"344","line":9,"column":5,"nodeType":"324","messageId":"325","endLine":9,"endColumn":12},{"ruleId":"322","severity":1,"message":"345","line":18,"column":5,"nodeType":"324","messageId":"325","endLine":18,"endColumn":12},{"ruleId":"322","severity":1,"message":"346","line":21,"column":32,"nodeType":"324","messageId":"325","endLine":21,"endColumn":43},{"ruleId":"322","severity":1,"message":"344","line":9,"column":5,"nodeType":"324","messageId":"325","endLine":9,"endColumn":12},{"ruleId":"322","severity":1,"message":"345","line":19,"column":5,"nodeType":"324","messageId":"325","endLine":19,"endColumn":12},{"ruleId":"322","severity":1,"message":"347","line":22,"column":10,"nodeType":"324","messageId":"325","endLine":22,"endColumn":15},{"ruleId":"322","severity":1,"message":"346","line":22,"column":32,"nodeType":"324","messageId":"325","endLine":22,"endColumn":43},{"ruleId":"322","severity":1,"message":"345","line":17,"column":5,"nodeType":"324","messageId":"325","endLine":17,"endColumn":12},{"ruleId":"322","severity":1,"message":"348","line":45,"column":12,"nodeType":"324","messageId":"325","endLine":45,"endColumn":17},{"ruleId":"322","severity":1,"message":"349","line":53,"column":65,"nodeType":"324","messageId":"325","endLine":53,"endColumn":74},{"ruleId":"322","severity":1,"message":"350","line":74,"column":11,"nodeType":"324","messageId":"325","endLine":74,"endColumn":15},{"ruleId":"322","severity":1,"message":"351","line":106,"column":15,"nodeType":"324","messageId":"325","endLine":106,"endColumn":28},{"ruleId":"322","severity":1,"message":"344","line":11,"column":5,"nodeType":"324","messageId":"325","endLine":11,"endColumn":12},{"ruleId":"322","severity":1,"message":"346","line":25,"column":32,"nodeType":"324","messageId":"325","endLine":25,"endColumn":43},{"ruleId":"322","severity":1,"message":"352","line":48,"column":12,"nodeType":"324","messageId":"325","endLine":48,"endColumn":19},{"ruleId":"322","severity":1,"message":"353","line":55,"column":12,"nodeType":"324","messageId":"325","endLine":55,"endColumn":43},{"ruleId":"322","severity":1,"message":"354","line":55,"column":45,"nodeType":"324","messageId":"325","endLine":55,"endColumn":79},{"ruleId":"322","severity":1,"message":"344","line":9,"column":5,"nodeType":"324","messageId":"325","endLine":9,"endColumn":12},{"ruleId":"322","severity":1,"message":"346","line":22,"column":32,"nodeType":"324","messageId":"325","endLine":22,"endColumn":43},{"ruleId":"322","severity":1,"message":"355","line":1,"column":34,"nodeType":"324","messageId":"325","endLine":1,"endColumn":43},{"ruleId":"322","severity":1,"message":"356","line":34,"column":9,"nodeType":"324","messageId":"325","endLine":34,"endColumn":16},{"ruleId":"322","severity":1,"message":"357","line":44,"column":12,"nodeType":"324","messageId":"325","endLine":44,"endColumn":25},{"ruleId":"322","severity":1,"message":"358","line":44,"column":27,"nodeType":"324","messageId":"325","endLine":44,"endColumn":43},{"ruleId":"322","severity":1,"message":"359","line":16,"column":5,"nodeType":"324","messageId":"325","endLine":16,"endColumn":13},{"ruleId":"322","severity":1,"message":"360","line":27,"column":10,"nodeType":"324","messageId":"325","endLine":27,"endColumn":22},{"ruleId":"322","severity":1,"message":"343","line":42,"column":11,"nodeType":"324","messageId":"325","endLine":42,"endColumn":19},{"ruleId":"322","severity":1,"message":"361","line":50,"column":11,"nodeType":"324","messageId":"325","endLine":50,"endColumn":17},{"ruleId":"322","severity":1,"message":"362","line":95,"column":11,"nodeType":"324","messageId":"325","endLine":95,"endColumn":22},{"ruleId":"363","severity":1,"message":"364","line":235,"column":61,"nodeType":"365","endLine":235,"endColumn":106},{"ruleId":"363","severity":1,"message":"364","line":263,"column":61,"nodeType":"365","endLine":263,"endColumn":104},{"ruleId":"363","severity":1,"message":"364","line":277,"column":61,"nodeType":"365","endLine":277,"endColumn":110},{"ruleId":"322","severity":1,"message":"352","line":37,"column":12,"nodeType":"324","messageId":"325","endLine":37,"endColumn":19},{"ruleId":"322","severity":1,"message":"366","line":13,"column":5,"nodeType":"324","messageId":"325","endLine":13,"endColumn":14},{"ruleId":"322","severity":1,"message":"367","line":14,"column":5,"nodeType":"324","messageId":"325","endLine":14,"endColumn":13},{"ruleId":"322","severity":1,"message":"336","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"355","line":1,"column":26,"nodeType":"324","messageId":"325","endLine":1,"endColumn":35},{"ruleId":"322","severity":1,"message":"368","line":15,"column":10,"nodeType":"324","messageId":"325","endLine":15,"endColumn":22},{"ruleId":"322","severity":1,"message":"369","line":19,"column":7,"nodeType":"324","messageId":"325","endLine":19,"endColumn":14},{"ruleId":"322","severity":1,"message":"370","line":21,"column":7,"nodeType":"324","messageId":"325","endLine":21,"endColumn":12},{"ruleId":"363","severity":1,"message":"364","line":42,"column":33,"nodeType":"365","endLine":42,"endColumn":82},{"ruleId":"363","severity":1,"message":"364","line":53,"column":33,"nodeType":"365","endLine":53,"endColumn":78},{"ruleId":"363","severity":1,"message":"364","line":64,"column":33,"nodeType":"365","endLine":64,"endColumn":76},{"ruleId":"363","severity":1,"message":"364","line":75,"column":33,"nodeType":"365","endLine":75,"endColumn":80},{"ruleId":"363","severity":1,"message":"364","line":86,"column":33,"nodeType":"365","endLine":86,"endColumn":75},{"ruleId":"322","severity":1,"message":"371","line":11,"column":5,"nodeType":"324","messageId":"325","endLine":11,"endColumn":18},{"ruleId":"322","severity":1,"message":"336","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"336","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"372","line":13,"column":23,"nodeType":"324","messageId":"325","endLine":13,"endColumn":31},{"ruleId":"322","severity":1,"message":"373","line":4,"column":5,"nodeType":"324","messageId":"325","endLine":4,"endColumn":15},{"ruleId":"322","severity":1,"message":"374","line":5,"column":5,"nodeType":"324","messageId":"325","endLine":5,"endColumn":12},{"ruleId":"322","severity":1,"message":"375","line":7,"column":5,"nodeType":"324","messageId":"325","endLine":7,"endColumn":12},{"ruleId":"322","severity":1,"message":"376","line":8,"column":5,"nodeType":"324","messageId":"325","endLine":8,"endColumn":11},{"ruleId":"322","severity":1,"message":"377","line":9,"column":5,"nodeType":"324","messageId":"325","endLine":9,"endColumn":11},{"ruleId":"322","severity":1,"message":"373","line":4,"column":5,"nodeType":"324","messageId":"325","endLine":4,"endColumn":15},{"ruleId":"322","severity":1,"message":"374","line":5,"column":5,"nodeType":"324","messageId":"325","endLine":5,"endColumn":12},{"ruleId":"322","severity":1,"message":"375","line":7,"column":5,"nodeType":"324","messageId":"325","endLine":7,"endColumn":12},{"ruleId":"322","severity":1,"message":"376","line":8,"column":5,"nodeType":"324","messageId":"325","endLine":8,"endColumn":11},{"ruleId":"322","severity":1,"message":"377","line":9,"column":5,"nodeType":"324","messageId":"325","endLine":9,"endColumn":11},{"ruleId":"322","severity":1,"message":"378","line":7,"column":5,"nodeType":"324","messageId":"325","endLine":7,"endColumn":14},{"ruleId":"322","severity":1,"message":"379","line":8,"column":5,"nodeType":"324","messageId":"325","endLine":8,"endColumn":12},{"ruleId":"322","severity":1,"message":"380","line":11,"column":5,"nodeType":"324","messageId":"325","endLine":11,"endColumn":20},{"ruleId":"322","severity":1,"message":"347","line":14,"column":10,"nodeType":"324","messageId":"325","endLine":14,"endColumn":15},{"ruleId":"322","severity":1,"message":"355","line":1,"column":34,"nodeType":"324","messageId":"325","endLine":1,"endColumn":43},{"ruleId":"322","severity":1,"message":"381","line":13,"column":5,"nodeType":"324","messageId":"325","endLine":13,"endColumn":13},{"ruleId":"322","severity":1,"message":"367","line":4,"column":5,"nodeType":"324","messageId":"325","endLine":4,"endColumn":13},{"ruleId":"322","severity":1,"message":"379","line":6,"column":5,"nodeType":"324","messageId":"325","endLine":6,"endColumn":12},{"ruleId":"322","severity":1,"message":"328","line":7,"column":5,"nodeType":"324","messageId":"325","endLine":7,"endColumn":13},{"ruleId":"322","severity":1,"message":"336","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"367","line":4,"column":5,"nodeType":"324","messageId":"325","endLine":4,"endColumn":13},{"ruleId":"322","severity":1,"message":"379","line":6,"column":5,"nodeType":"324","messageId":"325","endLine":6,"endColumn":12},{"ruleId":"322","severity":1,"message":"328","line":7,"column":5,"nodeType":"324","messageId":"325","endLine":7,"endColumn":13},{"ruleId":"322","severity":1,"message":"382","line":16,"column":10,"nodeType":"324","messageId":"325","endLine":16,"endColumn":16},{"ruleId":"322","severity":1,"message":"355","line":1,"column":34,"nodeType":"324","messageId":"325","endLine":1,"endColumn":43},{"ruleId":"322","severity":1,"message":"383","line":44,"column":12,"nodeType":"324","messageId":"325","endLine":44,"endColumn":19},{"ruleId":"322","severity":1,"message":"384","line":44,"column":21,"nodeType":"324","messageId":"325","endLine":44,"endColumn":31},{"ruleId":"322","severity":1,"message":"385","line":3,"column":10,"nodeType":"324","messageId":"325","endLine":3,"endColumn":20},{"ruleId":"322","severity":1,"message":"386","line":89,"column":29,"nodeType":"324","messageId":"325","endLine":89,"endColumn":47},{"ruleId":"322","severity":1,"message":"387","line":90,"column":30,"nodeType":"324","messageId":"325","endLine":90,"endColumn":49},{"ruleId":"322","severity":1,"message":"388","line":96,"column":11,"nodeType":"324","messageId":"325","endLine":96,"endColumn":32},{"ruleId":"322","severity":1,"message":"389","line":111,"column":11,"nodeType":"324","messageId":"325","endLine":111,"endColumn":33},{"ruleId":"322","severity":1,"message":"390","line":10,"column":10,"nodeType":"324","messageId":"325","endLine":10,"endColumn":26},{"ruleId":"322","severity":1,"message":"391","line":22,"column":12,"nodeType":"324","messageId":"325","endLine":22,"endColumn":18},{"ruleId":"322","severity":1,"message":"355","line":1,"column":16,"nodeType":"324","messageId":"325","endLine":1,"endColumn":25},{"ruleId":"322","severity":1,"message":"356","line":41,"column":9,"nodeType":"324","messageId":"325","endLine":41,"endColumn":16},{"ruleId":"322","severity":1,"message":"392","line":82,"column":17,"nodeType":"324","messageId":"325","endLine":82,"endColumn":32},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'trigger' is assigned a value but never used.","'useRef' is defined but never used.","'IonInput' is defined but never used.","'FieldErrors' is defined but never used.","'pageRediect' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ErrorMessageContainer' is assigned a value but never used.","'useState' is defined but never used.","'setValue' is assigned a value but never used.","'IonRadioGroup' is defined but never used.","'IonFab' is defined but never used.","'IonFabButton' is defined but never used.","'IonFabList' is defined but never used.","'toggleReorder' is assigned a value but never used.","'location' is assigned a value but never used.","'IonList' is defined but never used.","'IonItem' is defined but never used.","'chevronDown' is defined but never used.","'close' is defined but never used.","'floor' is assigned a value but never used.","'getValues' is assigned a value but never used.","'prev' is assigned a value but never used.","'lastElementID' is assigned a value but never used.","'present' is assigned a value but never used.","'updateFileNotificationSentAlert' is assigned a value but never used.","'setUpdateFileNotificationSentAlert' is assigned a value but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'exitFileAlert' is assigned a value but never used.","'setExitFileAlert' is assigned a value but never used.","'IonModal' is defined but never used.","'FormProvider' is defined but never used.","'btnref' is assigned a value but never used.","'myCondition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IonAvatar' is defined but never used.","'IonLabel' is defined but never used.","'getClassName' is defined but never used.","'REPAIRS' is assigned a value but never used.","'STAFF' is assigned a value but never used.","'useIonPopover' is defined but never used.","'addSharp' is defined but never used.","'IonContent' is defined but never used.","'IonPage' is defined but never used.","'IonGrid' is defined but never used.","'IonRow' is defined but never used.","'IonCol' is defined but never used.","'IonButton' is defined but never used.","'IonIcon' is defined but never used.","'createAnimation' is defined but never used.","'IonAlert' is defined but never used.","'Routes' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'useHistory' is defined but never used.","'setPinnedPostsData' is assigned a value but never used.","'setGeneralPostsData' is assigned a value but never used.","'renderPinnedPostsData' is assigned a value but never used.","'renderGeneralPostsData' is assigned a value but never used.","'caretDownOutline' is defined but never used.","'rotate' is assigned a value but never used.","'blobURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]