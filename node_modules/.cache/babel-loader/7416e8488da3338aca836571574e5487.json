{"ast":null,"code":"var _jsxFileName = \"G:\\\\Umang\\\\Housing app\\\\react app\\\\housingapp-ui\\\\src\\\\pages\\\\Add-new-property.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { IonContent, IonPage, IonGrid, IonRow, IonCol, IonLabel, IonInput, IonButton, IonSlides, IonSlide } from '@ionic/react';\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport HeaderMain from '../components/Header-main';\nimport Footer from '../components/Footer';\nimport FooterMobile from '../components/Footer-mobile';\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\nimport '@ionic/react/css/ionic-swiper.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '../assets/css/Custom.css';\nimport '../assets/css/Responsive.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst slideOpts = {\n  initialSlide: 0,\n  speed: 400\n};\n\nconst AddNewProperty = () => {\n  _s();\n\n  const mySlides = useRef(null);\n  const methods = useForm();\n  const {\n    register,\n    trigger,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = methods;\n  useEffect(() => {\n    mySlides.current.lockSwipes(true);\n  });\n\n  const next = async fields => {\n    const result = await trigger(fields);\n    if (!result) return;\n    await mySlides.current.lockSwipes(false);\n    await mySlides.current.slideNext();\n    await mySlides.current.lockSwipes(true);\n  };\n\n  const prev = async () => {\n    await mySlides.current.lockSwipes(false);\n    await mySlides.current.slidePrev();\n    await mySlides.current.lockSwipes(true);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderMain, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"dashboard-wrapper\",\n      fullscreen: true,\n      children: /*#__PURE__*/_jsxDEV(IonGrid, {\n        className: \"dashboard-main-grid\",\n        children: /*#__PURE__*/_jsxDEV(IonRow, {\n          className: \"dashboard-main-row\",\n          children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n            className: \"dashboard-content\",\n            size: \"12\",\n            sizeMd: \"12\",\n            sizeLg: \"6\",\n            sizeXl: \"8\",\n            children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: /*#__PURE__*/_jsxDEV(IonSlides, {\n                  pager: true,\n                  options: slideOpts,\n                  ref: mySlides,\n                  children: [/*#__PURE__*/_jsxDEV(IonSlide, {\n                    children: /*#__PURE__*/_jsxDEV(IonGrid, {\n                      children: /*#__PURE__*/_jsxDEV(IonRow, {\n                        children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"form-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Property Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 85,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"text\",\n                            ...register('propertyName', {\n                              required: 'Property name is a required field'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 86,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"propertyName\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 96,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 93,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"form-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Property Name Suffix (3 Characters)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 101,\n                            columnNumber: 49\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"text\",\n                            ...register('propertyNameSuffix', {\n                              required: 'Property name suffix is a required field',\n                              pattern: {\n                                value: /^[A-Z]{3}$/i,\n                                message: 'Property name suffix should not more than 3 characters.'\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"propertyNameSuffix\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 116,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 113,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 100,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"form-filed\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Confirm Password*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 121,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"password\",\n                            ...register('password2', {\n                              // required: true,\n                              validate: {\n                                noMatch: value => {\n                                  return value !== getValues(\"password1\") ? \"Passwords do not match\" : undefined;\n                                }\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 122,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"password2\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 139,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 136,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"sign-up-btn\",\n                          children: /*#__PURE__*/_jsxDEV(IonButton, {\n                            expand: \"block\",\n                            shape: \"round\",\n                            fill: \"outline\",\n                            onClick: () => next(['propertyName', 'propertyNameSuffix', 'password2']),\n                            children: \"Continue\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 144,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(IonSlide, {\n                    children: /*#__PURE__*/_jsxDEV(IonGrid, {\n                      children: /*#__PURE__*/_jsxDEV(IonRow, {\n                        children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"form-filed\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"First Name*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 158,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"text\",\n                            ...register('firstName', {\n                              required: 'First name is a required field'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"firstName\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 169,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 166,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 157,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"form-filed\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Last Name*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 174,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"text\",\n                            ...register('lastName', {\n                              required: 'Last name is a required field'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"lastName\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 185,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 182,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"form-filed\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Telephone:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"number\",\n                            ...register('telephone', {\n                              minLength: 6,\n                              maxLength: 12\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"telephone\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 201,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"sign-up-btn\",\n                          children: /*#__PURE__*/_jsxDEV(IonButton, {\n                            type: \"submit\",\n                            expand: \"block\",\n                            shape: \"round\",\n                            fill: \"outline\",\n                            children: \"Finalize\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n            className: \"dashboard-posts\",\n            size: \"12\",\n            sizeMd: \"12\",\n            sizeLg: \"3\",\n            sizeXl: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FooterMobile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddNewProperty, \"6oprEIu5ZYXnjsVb4qIW7zYuKRg=\", false, function () {\n  return [useForm];\n});\n\n_c = AddNewProperty;\nexport default AddNewProperty;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewProperty\");","map":{"version":3,"sources":["G:/Umang/Housing app/react app/housingapp-ui/src/pages/Add-new-property.tsx"],"names":["React","useEffect","useRef","IonContent","IonPage","IonGrid","IonRow","IonCol","IonLabel","IonInput","IonButton","IonSlides","IonSlide","FormProvider","useForm","ErrorMessage","HeaderMain","Footer","FooterMobile","DashboardSidebar","slideOpts","initialSlide","speed","AddNewProperty","mySlides","methods","register","trigger","handleSubmit","getValues","formState","errors","current","lockSwipes","next","fields","result","slideNext","prev","slidePrev","onSubmit","data","console","log","required","color","pattern","value","message","validate","noMatch","undefined","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n    initialSlide: 0,\r\n    speed: 400\r\n};\r\n\r\nconst AddNewProperty: React.FC = () => {\r\n    const mySlides = useRef<any>(null);\r\n\r\n    const methods = useForm();\r\n    const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n    useEffect(() => {\r\n        mySlides.current.lockSwipes(true);\r\n    });\r\n\r\n    const next = async (fields: any) => {\r\n        const result = await trigger(fields);\r\n        if (!result) return;\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slideNext();\r\n        await mySlides.current.lockSwipes(true);\r\n    };\r\n    const prev = async () => {\r\n        await mySlides.current.lockSwipes(false);\r\n        await mySlides.current.slidePrev();\r\n        await mySlides.current.lockSwipes(true);\r\n        };\r\n    \r\n        \r\n    const onSubmit = (data: any) => {\r\n        console.log(data);\r\n    };\r\n\r\n\r\n    return (\r\n    <IonPage>\r\n\r\n         <HeaderMain />\r\n\r\n         <IonContent className=\"dashboard-wrapper\" fullscreen>\r\n\r\n            <IonGrid className=\"dashboard-main-grid\">\r\n                <IonRow className=\"dashboard-main-row\">\r\n\r\n                    {/* sidebar start  */}\r\n                    <DashboardSidebar />\r\n                    {/* sidebar end  */}\r\n                        \r\n                    <IonCol className=\"dashboard-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                        <FormProvider {...methods}>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow>\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                    <IonLabel className=\"form-lable\">Property Name</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyName', {\r\n                                                            required: 'Property name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyName\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-field\">\r\n                                                <IonLabel className=\"form-lable\">Property Name Suffix (3 Characters)</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"\r\n                                                        {...register('propertyNameSuffix', {\r\n                                                            required: 'Property name suffix is a required field',\r\n                                                            pattern: {\r\n                                                                value: /^[A-Z]{3}$/i,\r\n                                                                message: 'Property name suffix should not more than 3 characters.'\r\n                                                            }\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"propertyNameSuffix\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                                    <IonInput \r\n                                                        mode=\"md\"\r\n                                                        type=\"password\" \r\n                                                        {...register('password2', {\r\n                                                            // required: true,\r\n                                                            validate: {\r\n                                                            noMatch: (value: string) => {\r\n                                                                return value !== getValues(\"password1\")\r\n                                                                    ? \"Passwords do not match\"\r\n                                                                    : undefined;\r\n                                                            },\r\n                                                            },\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"password2\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['propertyName','propertyNameSuffix', 'password2'])}>\r\n                                                        Continue\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                    <IonSlide>\r\n                                        <IonGrid>\r\n                                            <IonRow>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\"   \r\n                                                        {...register('firstName', {\r\n                                                            required: 'First name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"firstName\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"text\" \r\n                                                        {...register('lastName', {\r\n                                                            required: 'Last name is a required field'\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"lastName\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                <IonCol size=\"12\" className=\"form-filed\">\r\n                                                    <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                                    <IonInput\r\n                                                        mode=\"md\"\r\n                                                        type=\"number\" \r\n                                                        {...register('telephone', {\r\n                                                            minLength: 6, maxLength: 12,\r\n                                                        })}\r\n                                                    />\r\n                                                    <ErrorMessage\r\n                                                        errors={errors}\r\n                                                        name=\"telephone\"\r\n                                                        as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                                    />\r\n                                                </IonCol>\r\n\r\n                                                {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                                    <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                                        previous\r\n                                                    </IonButton>\r\n                                                </IonCol> */}\r\n\r\n                                                <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                                    <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                                        Finalize\r\n                                                    </IonButton>\r\n                                                </IonCol>\r\n\r\n                                            </IonRow>\r\n                                        </IonGrid>\r\n                                    </IonSlide>\r\n\r\n                                </IonSlides>\r\n                            </form>\r\n                        </FormProvider>\r\n                    </IonCol>\r\n\r\n                    {/* dashboar posts start */}\r\n                    <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                    </IonCol>\r\n                    {/* dashboar post end */}\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n        <Footer />\r\n        <FooterMobile />\r\n\r\n    </IonPage>\r\n    );\r\n};\r\n\r\nexport default AddNewProperty;"]},"metadata":{},"sourceType":"module"}