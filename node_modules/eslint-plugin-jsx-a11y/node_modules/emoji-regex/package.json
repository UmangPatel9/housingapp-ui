{
  "_args": [
    [
      {
        "raw": "emoji-regex@^9.0.0",
        "scope": null,
        "escapedName": "emoji-regex",
        "name": "emoji-regex",
        "rawSpec": "^9.0.0",
        "spec": ">=9.0.0 <10.0.0",
        "type": "range"
      },
      "G:\\Umang\\Housing app\\react app\\housingapp-ui\\node_modules\\eslint-plugin-jsx-a11y"
    ]
  ],
  "_from": "emoji-regex@^9.0.0",
  "_hasShrinkwrap": false,
  "_id": "emoji-regex@9.2.2",
  "_location": "/eslint-plugin-jsx-a11y/emoji-regex",
  "_nodeVersion": "14.15.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/emoji-regex_9.2.2_1614682689140_0.39715833161311176"
  },
  "_npmUser": {
    "name": "google-wombot",
    "email": "node-team-npm+wombot@google.com"
  },
  "_npmVersion": "6.14.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "emoji-regex@^9.0.0",
    "scope": null,
    "escapedName": "emoji-regex",
    "name": "emoji-regex",
    "rawSpec": "^9.0.0",
    "spec": ">=9.0.0 <10.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-plugin-jsx-a11y"
  ],
  "_resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
  "_shasum": "840c8803b0d8047f4ff0cf963176b32d4ef3ed72",
  "_shrinkwrap": null,
  "_spec": "emoji-regex@^9.0.0",
  "_where": "G:\\Umang\\Housing app\\react app\\housingapp-ui\\node_modules\\eslint-plugin-jsx-a11y",
  "author": {
    "name": "Mathias Bynens",
    "url": "https://mathiasbynens.be/"
  },
  "bugs": {
    "url": "https://github.com/mathiasbynens/emoji-regex/issues"
  },
  "dependencies": {},
  "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.",
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.4",
    "@babel/plugin-proposal-unicode-property-regex": "^7.4.4",
    "@babel/preset-env": "^7.4.4",
    "@unicode/unicode-13.0.0": "^1.0.3",
    "mocha": "^6.1.4",
    "regexgen": "^1.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
    "shasum": "840c8803b0d8047f4ff0cf963176b32d4ef3ed72",
    "tarball": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
    "fileCount": 15,
    "unpackedSize": 97916,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPhpBCRA9TVsSAnZWagAA1/YQAJ00Flm0hn1THHoKTG0t\nylutoznvVmXBkTi8RRd7sUoXWfWYTTYYd0kZy1sFqlBdqYSvafkt5gMvednF\nnbhYuFyYM+xhVaLJNiWspc2uMuUHwlivQYrCqH4Sak3YPzhk0hBuj5sgAk4U\nYcGYf4gKOVp/jwcmXVZWWFrn+Rm07/OHZzhIsBnWzBh99UWzFwFom/nGaoCe\nVZxx2OOrWmWFNVDKtubMnJADaHug7oo0o0S4YyMHQU6Rn69flvafdA5f076m\nnn9NVUO/h8He4xrLXoAnUybphaSNJPnFENqK1gN26e5nOzzsAxwRY5DKG9zA\n7czAXBGNAGYkjV8wOC+suYGgwvmfnKqf8h5Teerdo9Gcycn7sHIdsU+qAV2D\n+KqNJ8ql6nI0xrIf8lYtmxZjYjOPhUaKEer/sfxZUUqNzO0LdAkBOpK7Rga3\nFQyB0Pvg3VEFjmL78eDj3/D5GY1VYXogFXJY2lWrd02kPM6IlMjBQH9X9jx6\nwq84cFdGvDmW37dAtJdfuplkPNDd4I3Ivv8ASBphxqPjbSPCgn2vMueKIwHv\nEf8h8QUy9y/qo1QrVjo7kHrdFcjx73zgLZMElrlN9ax1KsgPxXTUmTZoN0K6\ntkC5T6h2LAnyxyi+x2/8XMnFTuzG20ExspSMVWBI4kHQtDWjua9YlCbIccgi\n81rc\r\n=B/lZ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "LICENSE-MIT.txt",
    "index.js",
    "index.d.ts",
    "RGI_Emoji.js",
    "RGI_Emoji.d.ts",
    "text.js",
    "text.d.ts",
    "es2015"
  ],
  "gitHead": "0ffa466d7ab65af304d03dddd3a92a2d8268e7ce",
  "homepage": "https://mths.be/emoji-regex",
  "keywords": [
    "unicode",
    "regex",
    "regexp",
    "regular expressions",
    "code points",
    "symbols",
    "characters",
    "emoji"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mathias",
      "email": "mathias@qiwi.be"
    },
    {
      "name": "google-wombot",
      "email": "node-team-npm+wombot@google.com"
    }
  ],
  "name": "emoji-regex",
  "optionalDependencies": {},
  "readme": "# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=main)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols and sequences (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [Unicode data](https://github.com/node-unicode/node-unicode-data). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex/RGI_Emoji.js');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: ⌚ default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: ↔️ default text presentation character rendered as emoji\n\\u{1F469}: 👩 emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: 👩🏿 emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n  const emoji = match[0];\n  console.log(`Matched sequence ${ emoji } — code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence ⌚ — code points: 1\nMatched sequence ⌚ — code points: 1\nMatched sequence ↔️ — code points: 2\nMatched sequence ↔️ — code points: 2\nMatched sequence 👩 — code points: 1\nMatched sequence 👩 — code points: 1\nMatched sequence 👩🏿 — code points: 2\nMatched sequence 👩🏿 — code points: 2\n```\n\n## Regular expression flavors\n\nThe package comes with three distinct regular expressions:\n\n```js\n// This is the recommended regular expression to use. It matches all\n// emoji recommended for general interchange, as defined via the\n// `RGI_Emoji` property in the Unicode Standard.\n// https://unicode.org/reports/tr51/#def_rgi_set\n// When in doubt, use this!\nconst emojiRegexRGI = require('emoji-regex/RGI_Emoji.js');\n\n// This is the old regular expression, prior to `RGI_Emoji` being\n// standardized. In addition to all `RGI_Emoji` sequences, it matches\n// some emoji you probably don’t want to match (such as emoji component\n// symbols that are not meant to be used separately).\nconst emojiRegex = require('emoji-regex/index.js');\n\n// This regular expression matches even more emoji than the previous\n// one, including emoji that render as text instead of icons (i.e.\n// emoji that are not `Emoji_Presentation` symbols and that aren’t\n// forced to render as emoji by a variation selector).\nconst emojiRegexText = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegexRGI = require('emoji-regex/es2015/RGI_Emoji.js');\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## For maintainers\n\n### How to update emoji-regex after new Unicode Standard releases\n\n1. Update the Unicode data dependency in `package.json` by running the following commands:\n\n    ```sh\n    # Example: updating from Unicode v12 to Unicode v13.\n    npm uninstall @unicode/unicode-12.0.0\n    npm install @unicode/unicode-13.0.0 --save-dev\n    ````\n\n1. Generate the new output:\n\n    ```sh\n    npm run build\n    ```\n\n1. Verify that tests still pass:\n\n    ```sh\n    npm test\n    ```\n\n1. Send a pull request with the changes, and get it reviewed & merged.\n\n1. On the `main` branch, bump the emoji-regex version number in `package.json`:\n\n    ```sh\n    npm version patch -m 'Release v%s'\n    ```\n\n    Instead of `patch`, use `minor` or `major` [as needed](https://semver.org/).\n\n    Note that this produces a Git commit + tag.\n\n1. Push the release commit and tag:\n\n    ```sh\n    git push\n    ```\n\n    Our CI then automatically publishes the new release to npm.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathiasbynens/emoji-regex.git"
  },
  "scripts": {
    "build": "rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src es2015_types -D -d ./es2015; node script/inject-sequences.js",
    "test": "mocha",
    "test:watch": "npm run test -- --watch"
  },
  "types": "index.d.ts",
  "version": "9.2.2"
}
