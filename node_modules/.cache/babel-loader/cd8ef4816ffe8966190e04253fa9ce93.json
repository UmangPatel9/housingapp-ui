{"ast":null,"code":"var _jsxFileName = \"G:\\\\Umang\\\\Housing app\\\\react app\\\\housingapp-ui\\\\src\\\\pages\\\\Management-signup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { IonContent, IonPage, IonGrid, IonRow, IonCol, IonLabel, IonInput, IonButton, IonSlides, IonSlide } from '@ionic/react';\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport Header from '../components/Header';\nimport Recaptcha from 'react-recaptcha';\nimport '@ionic/react/css/ionic-swiper.css';\nimport '../assets/css/Custom.css';\nimport '../assets/css/Responsive.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst slideOpts = {\n  initialSlide: 0,\n  speed: 400\n};\n\nfunction recaptchaLoaded() {\n  console.log('Recaptcha loaded successfully');\n}\n\nconst ManagementSignup = () => {\n  _s();\n\n  const mySlides = useRef(null);\n  const methods = useForm();\n  const {\n    register,\n    trigger,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = methods; // console.log(errors);\n\n  useEffect(() => {\n    mySlides.current.lockSwipes(true);\n  });\n\n  const next = async fields => {\n    const result = await trigger(fields);\n    if (!result) return;\n    await mySlides.current.lockSwipes(false);\n    await mySlides.current.slideNext();\n    await mySlides.current.lockSwipes(true);\n  };\n\n  const prev = async () => {\n    await mySlides.current.lockSwipes(false);\n    await mySlides.current.slidePrev();\n    await mySlides.current.lockSwipes(true);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      class: \"with-back-arrow with-step-arrow\",\n      onBack: prev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: /*#__PURE__*/_jsxDEV(IonGrid, {\n        children: /*#__PURE__*/_jsxDEV(IonRow, {\n          className: \"signup-form login-form-row\",\n          children: /*#__PURE__*/_jsxDEV(IonCol, {\n            size: \"10\",\n            sizeMd: \"6\",\n            sizeLg: \"4\",\n            children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: /*#__PURE__*/_jsxDEV(IonSlides, {\n                  pager: true,\n                  options: slideOpts,\n                  ref: mySlides,\n                  children: [/*#__PURE__*/_jsxDEV(IonSlide, {\n                    children: /*#__PURE__*/_jsxDEV(IonGrid, {\n                      children: /*#__PURE__*/_jsxDEV(IonRow, {\n                        children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"email-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Email*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 82,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"email\",\n                            ...register('email', {\n                              required: 'Please enter a valid email.',\n                              pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                message: 'Please enter a valid email.'\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 83,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"email\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 97,\n                              columnNumber: 50\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 94,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 81,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"password-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Password*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 102,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"password\",\n                            ...register('password1', {\n                              required: 'The password must match the following criteria: Minimum 8 characters, Include at least 1 letter, Include at least 1 number and maximum 12 characters long.',\n                              pattern: {\n                                value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\n                                message: 'The password must match the following criteria: Minimum 8 characters, Include at least 1 letter, Include at least 1 number and maximum 12 characters long.'\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 103,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"password1\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 117,\n                              columnNumber: 50\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 114,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 101,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"forget-password\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Confirm Password*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 122,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"password\",\n                            ...register('password2', {\n                              // required: true,\n                              validate: {\n                                noMatch: value => {\n                                  return value !== getValues(\"password1\") ? \"Passwords do not match\" : undefined;\n                                }\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 123,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"password2\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 140,\n                              columnNumber: 50\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 137,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 121,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"sign-up-btn\",\n                          children: /*#__PURE__*/_jsxDEV(IonButton, {\n                            expand: \"block\",\n                            shape: \"round\",\n                            fill: \"outline\",\n                            onClick: () => next(['email', 'password1', 'password2']),\n                            children: \"Continue\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 145,\n                            columnNumber: 43\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 40\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(IonSlide, {\n                    children: /*#__PURE__*/_jsxDEV(IonGrid, {\n                      children: /*#__PURE__*/_jsxDEV(IonRow, {\n                        children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"email-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"First Name*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"text\",\n                            ...register('firstName', {\n                              required: 'First name is a required field'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 160,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"firstName\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 170,\n                              columnNumber: 50\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 167,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"email-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Last Name*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"text\",\n                            ...register('lastName', {\n                              required: 'Last name is a required field'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 176,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"lastName\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 186,\n                              columnNumber: 50\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"email-field\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"label-with-tooltip\",\n                            children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                              className: \"form-lable\",\n                              children: \"Telephone:\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 192,\n                              columnNumber: 46\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"tooltip\",\n                              title: \"Add Telephone\",\n                              children: \"!\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 193,\n                              columnNumber: 46\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"number\",\n                            ...register('telephone', {\n                              minLength: 6,\n                              maxLength: 12\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"telephone\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 205,\n                              columnNumber: 50\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 202,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"google-recaptcha-btn\",\n                          children: /*#__PURE__*/_jsxDEV(Recaptcha, {\n                            sitekey: \"6LfL2pMcAAAAAJGqw3rePggWbAJtKARjHPlf-ax2\",\n                            render: \"explicit\",\n                            onloadCallback: recaptchaLoaded\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 210,\n                            columnNumber: 43\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 40\n                        }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                          size: \"12\",\n                          className: \"sign-up-btn\",\n                          children: /*#__PURE__*/_jsxDEV(IonButton, {\n                            className: \"secondary-button\",\n                            type: \"submit\",\n                            expand: \"block\",\n                            shape: \"round\",\n                            fill: \"outline\",\n                            children: \"Finalize\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 43\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 40\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 34\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ManagementSignup, \"6oprEIu5ZYXnjsVb4qIW7zYuKRg=\", false, function () {\n  return [useForm];\n});\n\n_c = ManagementSignup;\nexport default ManagementSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagementSignup\");","map":{"version":3,"sources":["G:/Umang/Housing app/react app/housingapp-ui/src/pages/Management-signup.tsx"],"names":["React","useEffect","useRef","IonContent","IonPage","IonGrid","IonRow","IonCol","IonLabel","IonInput","IonButton","IonSlides","IonSlide","FormProvider","useForm","ErrorMessage","Header","Recaptcha","slideOpts","initialSlide","speed","recaptchaLoaded","console","log","ManagementSignup","mySlides","methods","register","trigger","handleSubmit","getValues","formState","errors","current","lockSwipes","next","fields","result","slideNext","prev","slidePrev","onSubmit","data","required","pattern","value","message","color","validate","noMatch","undefined","minLength","maxLength"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport Recaptcha from 'react-recaptcha';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nfunction recaptchaLoaded() {\r\n   console.log('Recaptcha loaded successfully');\r\n}\r\n\r\nconst ManagementSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Please enter a valid email.',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'Please enter a valid email.'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'The password must match the following criteria: Minimum 8 characters, Include at least 1 letter, Include at least 1 number and maximum 12 characters long.',\r\n                                                pattern: {\r\n                                                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\r\n                                                  message: 'The password must match the following criteria: Minimum 8 characters, Include at least 1 letter, Include at least 1 number and maximum 12 characters long.'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <div className=\"label-with-tooltip\">\r\n                                             <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                             <div className=\"tooltip\" title=\"Add Telephone\">!</div>\r\n                                          </div>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"google-recaptcha-btn\">\r\n                                          <Recaptcha\r\n                                             sitekey=\"6LfL2pMcAAAAAJGqw3rePggWbAJtKARjHPlf-ax2\"\r\n                                             render=\"explicit\"\r\n                                             onloadCallback={recaptchaLoaded}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default ManagementSignup;"]},"metadata":{},"sourceType":"module"}