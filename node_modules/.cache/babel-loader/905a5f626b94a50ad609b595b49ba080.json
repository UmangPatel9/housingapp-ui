{"ast":null,"code":"var _jsxFileName = \"G:\\\\Umang\\\\Housing app\\\\react app\\\\housingapp-ui\\\\src\\\\pages\\\\Password-change.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { IonContent, IonPage, IonGrid, IonRow, IonCol, IonLabel, IonInput, IonButton } from '@ionic/react';\nimport HeaderMain from '../components/Header-main';\nimport Footer from '../components/Footer';\nimport FooterMobile from '../components/Footer-mobile';\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\nimport '../assets/css/Custom.css';\nimport '../assets/css/Responsive.css';\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PasswordChange = ({\n  path\n}) => {\n  _s();\n\n  const methods = useForm();\n  const {\n    register,\n    trigger,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = methods;\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderMain, {\n      pageTitle: \"Password Change\",\n      logoHide: \"hide-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      className: \"dashboard-wrapper manage-tenants-wrapper manage-rents-wrapper\",\n      fullscreen: true,\n      children: [/*#__PURE__*/_jsxDEV(IonGrid, {\n        className: \"dashboard-main-grid\",\n        children: /*#__PURE__*/_jsxDEV(IonRow, {\n          className: \"dashboard-main-row\",\n          children: [/*#__PURE__*/_jsxDEV(DashboardSidebar, {\n            path: path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n            className: \"dashboard-content my-account-content\",\n            size: \"12\",\n            sizeMd: \"12\",\n            sizeLg: \"6\",\n            sizeXl: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-content-inner\",\n              children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit(onSubmit),\n                  children: /*#__PURE__*/_jsxDEV(IonGrid, {\n                    children: /*#__PURE__*/_jsxDEV(IonRow, {\n                      children: /*#__PURE__*/_jsxDEV(IonCol, {\n                        size: \"12\",\n                        sizeMd: \"6\",\n                        className: \"email-field\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Email*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 58,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"email\",\n                            ...register('email', {\n                              required: 'Email is a required field',\n                              pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                message: 'invalid email address'\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 59,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"email\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 73,\n                              columnNumber: 53\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 70,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 57,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Password*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 78,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"password\",\n                            ...register('password1', {\n                              required: 'Password is Required',\n                              pattern: {\n                                value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\n                                message: 'Password should be minimum 8 characters and maximum 12 characters long, with 1 upparcase and 1 special character.'\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 79,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"password1\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 93,\n                              columnNumber: 53\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 90,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-field\",\n                          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                            className: \"form-lable\",\n                            children: \"Confirm Password*\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 98,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                            mode: \"md\",\n                            type: \"password\",\n                            ...register('password2', {\n                              // required: true,\n                              validate: {\n                                noMatch: value => {\n                                  return value !== getValues(\"password1\") ? \"Passwords do not match\" : undefined;\n                                }\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 99,\n                            columnNumber: 45\n                          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                            errors: errors,\n                            name: \"password2\",\n                            as: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"error-message\",\n                              style: {\n                                color: 'red'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 116,\n                              columnNumber: 53\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 113,\n                            columnNumber: 45\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-field\",\n                          children: /*#__PURE__*/_jsxDEV(IonButton, {\n                            className: \"secondary-button\",\n                            type: \"submit\",\n                            shape: \"round\",\n                            fill: \"outline\",\n                            children: \"Update\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 121,\n                            columnNumber: 45\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 56,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n            className: \"dashboard-posts\",\n            size: \"12\",\n            sizeMd: \"12\",\n            sizeLg: \"3\",\n            sizeXl: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(FooterMobile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordChange, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n\n_c = PasswordChange;\nexport default PasswordChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordChange\");","map":{"version":3,"sources":["G:/Umang/Housing app/react app/housingapp-ui/src/pages/Password-change.tsx"],"names":["React","IonContent","IonPage","IonGrid","IonRow","IonCol","IonLabel","IonInput","IonButton","HeaderMain","Footer","FooterMobile","DashboardSidebar","FormProvider","useForm","ErrorMessage","PasswordChange","path","methods","register","trigger","handleSubmit","getValues","formState","errors","onSubmit","data","console","log","required","pattern","value","message","color","validate","noMatch","undefined"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonLabel,\r\n    IonInput,\r\n    IonButton,\r\n} from '@ionic/react';\r\n\r\nimport HeaderMain from '../components/Header-main';\r\nimport Footer from '../components/Footer';\r\nimport FooterMobile from '../components/Footer-mobile';\r\nimport DashboardSidebar from '../components/Dahsboard-sidebar';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\nimport { Routes } from '../App';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n  \r\nconst PasswordChange: React.FC<{ path: string }> = ({path}) => {\r\n\r\n    const methods = useForm();\r\n    const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n    const onSubmit = (data: any) => {\r\n        console.log(data);\r\n    };\r\n   \r\n    return (\r\n        <IonPage>\r\n  \r\n           <HeaderMain pageTitle=\"Password Change\" logoHide=\"hide-logo\" />\r\n  \r\n           <IonContent className=\"dashboard-wrapper manage-tenants-wrapper manage-rents-wrapper\" fullscreen>\r\n                <IonGrid className=\"dashboard-main-grid\">\r\n                    <IonRow className=\"dashboard-main-row\">\r\n                        \r\n                        {/* sidebar start  */}\r\n                        <DashboardSidebar path={path} />\r\n                        {/* sidebar end  */}\r\n\r\n\r\n                        {/* dashboar content start */}\r\n                        <IonCol className=\"dashboard-content my-account-content\" size=\"12\" sizeMd=\"12\" sizeLg=\"6\" sizeXl=\"8\">\r\n                            <div className=\"dashboard-content-inner\">\r\n                                <FormProvider {...methods}>\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <IonGrid>\r\n                                        <IonRow>\r\n                                        <IonCol size=\"12\" sizeMd=\"6\" className=\"email-field\">\r\n                                        <div className=\"form-field\">\r\n                                            <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                            <IonInput\r\n                                                mode=\"md\"\r\n                                                type=\"email\"\r\n                                                {...register('email', {\r\n                                                    required: 'Email is a required field',\r\n                                                    pattern: {\r\n                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                    message: 'invalid email address'\r\n                                                    }\r\n                                                })}\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                errors={errors}\r\n                                                name=\"email\"\r\n                                                as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-field\">\r\n                                        <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                            <IonInput \r\n                                                mode=\"md\"\r\n                                                type=\"password\" \r\n                                                {...register('password1', {\r\n                                                    required: 'Password is Required',\r\n                                                    pattern: {\r\n                                                    value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$/i,\r\n                                                    message: 'Password should be minimum 8 characters and maximum 12 characters long, with 1 upparcase and 1 special character.'\r\n                                                    }\r\n                                                })}\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                errors={errors}\r\n                                                name=\"password1\"\r\n                                                as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-field\">\r\n                                            <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                            <IonInput \r\n                                                mode=\"md\"\r\n                                                type=\"password\" \r\n                                                {...register('password2', {\r\n                                                    // required: true,\r\n                                                    validate: {\r\n                                                    noMatch: (value: string) => {\r\n                                                        return value !== getValues(\"password1\")\r\n                                                            ? \"Passwords do not match\"\r\n                                                            : undefined;\r\n                                                    },\r\n                                                    },\r\n                                                })}\r\n                                            />\r\n                                            <ErrorMessage\r\n                                                errors={errors}\r\n                                                name=\"password2\"\r\n                                                as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-field\">\r\n                                            <IonButton className=\"secondary-button\" type=\"submit\" shape=\"round\" fill=\"outline\">\r\n                                                Update\r\n                                            </IonButton>\r\n                                        </div>\r\n\r\n                                        </IonCol>\r\n                                        </IonRow>\r\n                                    </IonGrid>\r\n                                </form>\r\n                                </FormProvider>\r\n                            </div>\r\n\r\n                        </IonCol>\r\n                        {/* dashboar content end */}\r\n\r\n\r\n                        {/* dashboar posts start */}\r\n                        <IonCol  className=\"dashboard-posts\" size=\"12\" sizeMd=\"12\" sizeLg=\"3\" sizeXl=\"2\">\r\n                            \r\n                        </IonCol>\r\n                        {/* dashboar post end */}\r\n    \r\n                    </IonRow>\r\n                </IonGrid>\r\n              \r\n                <Footer />\r\n\r\n            </IonContent>\r\n\r\n            <FooterMobile />\r\n      </IonPage>\r\n    );\r\n  };\r\n  \r\n  export default PasswordChange;"]},"metadata":{},"sourceType":"module"}