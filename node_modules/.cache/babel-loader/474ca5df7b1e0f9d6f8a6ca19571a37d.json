{"ast":null,"code":"var _jsxFileName = \"G:\\\\Umang\\\\Housing app\\\\react app\\\\housingapp-ui\\\\src\\\\pages\\\\Reset-Password.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonContent, IonPage, IonLabel, IonInput, IonButton, IonGrid, IonRow, IonCol } from '@ionic/react';\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport Header from '../components/Header';\nimport '../assets/css/Custom.css';\nimport '../assets/css/Responsive.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const methods = useForm();\n  const {\n    register,\n    trigger,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = methods;\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: /*#__PURE__*/_jsxDEV(IonGrid, {\n        children: /*#__PURE__*/_jsxDEV(IonRow, {\n          className: \"login-form-row\",\n          children: /*#__PURE__*/_jsxDEV(IonCol, {\n            size: \"10\",\n            sizeMd: \"6\",\n            sizeLg: \"4\",\n            children: /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(onSubmit),\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Create new password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Your new password must be different from previous used password.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(IonGrid, {\n                  children: /*#__PURE__*/_jsxDEV(IonRow, {\n                    children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                      size: \"12\",\n                      className: \"ion-margin-top\",\n                      children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                        className: \"form-lable\",\n                        children: \"Enter new password:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 46,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                        mode: \"md\",\n                        type: \"password\",\n                        ...register('password1', {\n                          required: 'Password Is Required'\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 48,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        errors: errors,\n                        name: \"password1\",\n                        as: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"error-message\",\n                          style: {\n                            color: 'red'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 58,\n                          columnNumber: 44\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 55,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 45,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                      size: \"12\",\n                      className: \"ion-margin-top\",\n                      children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n                        className: \"form-lable\",\n                        children: \"Cofnirm new password:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(IonInput, {\n                        mode: \"md\",\n                        type: \"password\",\n                        ...register('password2', {\n                          // required: true,\n                          validate: {\n                            noMatch: value => {\n                              return value !== getValues(\"password1\") ? \"Passwords do not match\" : undefined;\n                            }\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        errors: errors,\n                        name: \"password2\",\n                        as: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"error-message\",\n                          style: {\n                            color: 'red'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 82,\n                          columnNumber: 44\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                      size: \"12\",\n                      className: \"ion-margin-top\",\n                      children: /*#__PURE__*/_jsxDEV(IonButton, {\n                        type: \"submit\",\n                        expand: \"block\",\n                        shape: \"round\",\n                        fill: \"outline\",\n                        children: \"Reset Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 34\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ResetPassword, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["G:/Umang/Housing app/react app/housingapp-ui/src/pages/Reset-Password.tsx"],"names":["IonContent","IonPage","IonLabel","IonInput","IonButton","IonGrid","IonRow","IonCol","FormProvider","useForm","ErrorMessage","Header","ResetPassword","methods","register","trigger","handleSubmit","getValues","formState","errors","onSubmit","data","console","log","required","color","validate","noMatch","value","undefined"],"mappings":"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","sourcesContent":["import { \r\n  IonContent, \r\n  IonPage, \r\n  IonLabel, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol,  \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                     <FormProvider {...methods}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                           <h2>Create new password</h2>\r\n                           <p>Your new password must be different from previous used password.</p>\r\n\r\n                           <IonGrid>\r\n                              <IonRow>\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Enter new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput\r\n                                       mode=\"md\" \r\n                                       type=\"password\" \r\n                                       {...register('password1', {\r\n                                          required: 'Password Is Required'\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password1\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Cofnirm new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput \r\n                                       mode=\"md\"\r\n                                       type=\"password\" \r\n                                       {...register('password2', {\r\n                                          // required: true,\r\n                                          validate: {\r\n                                             noMatch: (value: string) => {\r\n                                                return value !== getValues(\"password1\")\r\n                                                   ? \"Passwords do not match\"\r\n                                                   : undefined;\r\n                                             },\r\n                                          },\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password2\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                                    Reset Password\r\n                                    </IonButton>\r\n                                 </IonCol>\r\n                              </IonRow>\r\n                           </IonGrid>\r\n\r\n                        </form>\r\n                     </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}