{
  "_args": [
    [
      {
        "raw": "ansi-escapes@^4.2.1",
        "scope": null,
        "escapedName": "ansi-escapes",
        "name": "ansi-escapes",
        "rawSpec": "^4.2.1",
        "spec": ">=4.2.1 <5.0.0",
        "type": "range"
      },
      "G:\\Umang\\Housing app\\react app\\housingapp-ui\\node_modules\\@jest\\core"
    ]
  ],
  "_from": "ansi-escapes@^4.2.1",
  "_hasShrinkwrap": false,
  "_id": "ansi-escapes@4.3.2",
  "_location": "/ansi-escapes",
  "_nodeVersion": "12.20.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ansi-escapes_4.3.2_1616593301387_0.23519493102116495"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.14.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ansi-escapes@^4.2.1",
    "scope": null,
    "escapedName": "ansi-escapes",
    "name": "ansi-escapes",
    "rawSpec": "^4.2.1",
    "spec": ">=4.2.1 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@jest/core",
    "/jest-watch-typeahead",
    "/jest-watcher",
    "/terminal-link"
  ],
  "_resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
  "_shasum": "6b2291d1db7d98b6521d5f1efa42d0f3a9feb65e",
  "_shrinkwrap": null,
  "_spec": "ansi-escapes@^4.2.1",
  "_where": "G:\\Umang\\Housing app\\react app\\housingapp-ui\\node_modules\\@jest\\core",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "https://sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/ansi-escapes/issues"
  },
  "dependencies": {
    "type-fest": "^0.21.3"
  },
  "description": "ANSI escape codes for manipulating the terminal",
  "devDependencies": {
    "@types/node": "^13.7.7",
    "ava": "^2.1.0",
    "tsd": "^0.14.0",
    "xo": "^0.25.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
    "shasum": "6b2291d1db7d98b6521d5f1efa42d0f3a9feb65e",
    "tarball": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
    "fileCount": 5,
    "unpackedSize": 16380,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgW0GVCRA9TVsSAnZWagAA01QP/iQzi3/Eh7+9gyoeDmRE\nZZDU23YdF16Mau6mjE93XbuYftwgPouvi927JL6TqTY7EVBC+kkgru60x7bJ\nYceDwou5XMnUx6vSX6JIGFUlkWNwgntopQHIY6ezoF25OpLOcmL/8srr/DU2\nch8IpOoDkTH61LC41tGNzy0WsueaxYzkiG0BFyY3/HZoHh9hrTgdBhrdtenl\nQWXSxAwediH+6ow7qdTIf6Dah2lg1964yGHjQy7niqJYAYToNWpGns2zSVKB\nBtA7+hITpd0ntzBtuQmgcVh8D2TGVtMO/QovOw5VqrLdEzHVDD0/s/JxDcGb\n5ZAwaDSY976VuYbfEKikVeGxSCrRdM4QvY9tzS86ghamQhwXUmPuV8PJvxbZ\neyCGER7X4TpKkLyzz+AkhkLjl07Afw9Gbv7UZ9aENhfBQcmT1aUhO2C69LQZ\negXieiqDHinSme6YKe4V6+NoYMse24iHlNXYXwr64XWpCJbjBBgtRGcSvC5X\n6HYOdVSdGGy6SDwwNaH9nV1ZWx1YTh0/uzyw0EK3dBIC/FY2XiBxK4uwIqVJ\nadXzrjt7KXN3Px/YhY/q4GMsej816TK8w1Q/W3tbQsYvVJUr+/0U+PTpRTPM\nfHwPwz/n9EauGLL/bq/2Vz7t1f23nInhfp0dYNynCv3lDvVvAk4ji1GHyo0S\nwGMJ\r\n=TqPN\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "funding": "https://github.com/sponsors/sindresorhus",
  "gitHead": "ca9d5f8eb6ecfcf6ef2d8764a056d865e68bf178",
  "homepage": "https://github.com/sindresorhus/ansi-escapes#readme",
  "keywords": [
    "ansi",
    "terminal",
    "console",
    "cli",
    "string",
    "tty",
    "escape",
    "escapes",
    "formatting",
    "shell",
    "xterm",
    "log",
    "logging",
    "command-line",
    "text",
    "vt100",
    "sequence",
    "control",
    "code",
    "codes",
    "cursor",
    "iterm",
    "iterm2"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "ansi-escapes",
  "optionalDependencies": {},
  "readme": "# ansi-escapes\n\n> [ANSI escape codes](http://www.termsys.demon.co.uk/vtansi.htm) for manipulating the terminal\n\n## Install\n\n```\n$ npm install ansi-escapes\n```\n\n## Usage\n\n```js\nconst ansiEscapes = require('ansi-escapes');\n\n// Moves the cursor two rows up and to the left\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\n//=> '\\u001B[2A\\u001B[1000D'\n```\n\n## API\n\n### cursorTo(x, y?)\n\nSet the absolute position of the cursor. `x0` `y0` is the top left of the screen.\n\n### cursorMove(x, y?)\n\nSet the position of the cursor relative to its current position.\n\n### cursorUp(count)\n\nMove cursor up a specific amount of rows. Default is `1`.\n\n### cursorDown(count)\n\nMove cursor down a specific amount of rows. Default is `1`.\n\n### cursorForward(count)\n\nMove cursor forward a specific amount of columns. Default is `1`.\n\n### cursorBackward(count)\n\nMove cursor backward a specific amount of columns. Default is `1`.\n\n### cursorLeft\n\nMove cursor to the left side.\n\n### cursorSavePosition\n\nSave cursor position.\n\n### cursorRestorePosition\n\nRestore saved cursor position.\n\n### cursorGetPosition\n\nGet cursor position.\n\n### cursorNextLine\n\nMove cursor to the next line.\n\n### cursorPrevLine\n\nMove cursor to the previous line.\n\n### cursorHide\n\nHide cursor.\n\n### cursorShow\n\nShow cursor.\n\n### eraseLines(count)\n\nErase from the current cursor position up the specified amount of rows.\n\n### eraseEndLine\n\nErase from the current cursor position to the end of the current line.\n\n### eraseStartLine\n\nErase from the current cursor position to the start of the current line.\n\n### eraseLine\n\nErase the entire current line.\n\n### eraseDown\n\nErase the screen from the current line down to the bottom of the screen.\n\n### eraseUp\n\nErase the screen from the current line up to the top of the screen.\n\n### eraseScreen\n\nErase the screen and move the cursor the top left position.\n\n### scrollUp\n\nScroll display up one line.\n\n### scrollDown\n\nScroll display down one line.\n\n### clearScreen\n\nClear the terminal screen. (Viewport)\n\n### clearTerminal\n\nClear the whole terminal, including scrollback buffer. (Not just the visible part of it)\n\n### beep\n\nOutput a beeping sound.\n\n### link(text, url)\n\nCreate a clickable link.\n\n[Supported terminals.](https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda) Use [`supports-hyperlinks`](https://github.com/jamestalmage/supports-hyperlinks) to detect link support.\n\n### image(filePath, options?)\n\nDisplay an image.\n\n*Currently only supported on iTerm2 >=3*\n\nSee [term-img](https://github.com/sindresorhus/term-img) for a higher-level module.\n\n#### input\n\nType: `Buffer`\n\nBuffer of an image. Usually read in with `fs.readFile()`.\n\n#### options\n\nType: `object`\n\n##### width\n##### height\n\nType: `string | number`\n\nThe width and height are given as a number followed by a unit, or the word \"auto\".\n\n- `N`: N character cells.\n- `Npx`: N pixels.\n- `N%`: N percent of the session's width or height.\n- `auto`: The image's inherent size will be used to determine an appropriate dimension.\n\n##### preserveAspectRatio\n\nType: `boolean`\\\nDefault: `true`\n\n### iTerm.setCwd(path?)\n\nType: `string`\\\nDefault: `process.cwd()`\n\n[Inform iTerm2](https://www.iterm2.com/documentation-escape-codes.html) of the current directory to help semantic history and enable [Cmd-clicking relative paths](https://coderwall.com/p/b7e82q/quickly-open-files-in-iterm-with-cmd-click).\n\n### iTerm.annotation(message, options?)\n\nCreates an escape code to display an \"annotation\" in iTerm2.\n\nAn annotation looks like this when shown:\n\n<img src=\"https://user-images.githubusercontent.com/924465/64382136-b60ac700-cfe9-11e9-8a35-9682e8dc4b72.png\" width=\"500\">\n\nSee the [iTerm Proprietary Escape Codes documentation](https://iterm2.com/documentation-escape-codes.html) for more information.\n\n#### message\n\nType: `string`\n\nThe message to display within the annotation.\n\nThe `|` character is disallowed and will be stripped.\n\n#### options\n\nType: `object`\n\n##### length\n\nType: `number`\\\nDefault: The remainder of the line\n\nNonzero number of columns to annotate.\n\n##### x\n\nType: `number`\\\nDefault: Cursor position\n\nStarting X coordinate.\n\nMust be used with `y` and `length`.\n\n##### y\n\nType: `number`\\\nDefault: Cursor position\n\nStarting Y coordinate.\n\nMust be used with `x` and `length`.\n\n##### isHidden\n\nType: `boolean`\\\nDefault: `false`\n\nCreate a \"hidden\" annotation.\n\nAnnotations created this way can be shown using the \"Show Annotations\" iTerm command.\n\n## Related\n\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-ansi-escapes?utm_source=npm-ansi-escapes&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/ansi-escapes.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "4.3.2"
}
