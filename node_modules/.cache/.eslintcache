[{"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx":"1","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts":"2","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts":"3","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx":"4","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx":"5","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx":"6","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx":"7","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx":"8","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx":"9","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx":"10","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx":"11","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx":"12","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx":"13","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx":"14","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx":"15","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx":"16","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx":"17","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx":"18","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx":"19","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx":"20","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx":"21","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx":"22","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx":"23","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx":"24","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx":"25","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx":"26","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx":"27","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx":"28","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx":"29","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx":"30","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-rents.tsx":"31","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsGeneralTab.tsx":"32","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsSearchTab.tsx":"33","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Rent-pay-details.tsx":"34","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentPayReceiptPopup.tsx":"35"},{"size":197,"mtime":1632199423730,"results":"36","hashOfConfig":"37"},{"size":5256,"mtime":1630685610000,"results":"38","hashOfConfig":"37"},{"size":425,"mtime":1630685610000,"results":"39","hashOfConfig":"37"},{"size":3906,"mtime":1634033327328,"results":"40","hashOfConfig":"37"},{"size":1171,"mtime":1633522834456,"results":"41","hashOfConfig":"37"},{"size":3214,"mtime":1633522553982,"results":"42","hashOfConfig":"37"},{"size":4817,"mtime":1633502948222,"results":"43","hashOfConfig":"37"},{"size":4415,"mtime":1633502942367,"results":"44","hashOfConfig":"37"},{"size":10622,"mtime":1633502982576,"results":"45","hashOfConfig":"37"},{"size":10624,"mtime":1633524265820,"results":"46","hashOfConfig":"37"},{"size":11624,"mtime":1633502978588,"results":"47","hashOfConfig":"37"},{"size":3906,"mtime":1634189347238,"results":"48","hashOfConfig":"37"},{"size":8665,"mtime":1634207863955,"results":"49","hashOfConfig":"37"},{"size":1507,"mtime":1633524545428,"results":"50","hashOfConfig":"37"},{"size":4439,"mtime":1633522070980,"results":"51","hashOfConfig":"37"},{"size":3831,"mtime":1634207020960,"results":"52","hashOfConfig":"37"},{"size":6043,"mtime":1634189321888,"results":"53","hashOfConfig":"37"},{"size":4102,"mtime":1634206267761,"results":"54","hashOfConfig":"37"},{"size":1788,"mtime":1634016874629,"results":"55","hashOfConfig":"37"},{"size":5764,"mtime":1633958231266,"results":"56","hashOfConfig":"37"},{"size":33808,"mtime":1634198160015,"results":"57","hashOfConfig":"37"},{"size":1637,"mtime":1634118561272,"results":"58","hashOfConfig":"37"},{"size":4130,"mtime":1634204458360,"results":"59","hashOfConfig":"37"},{"size":5273,"mtime":1633947879703,"results":"60","hashOfConfig":"37"},{"size":7273,"mtime":1633921683389,"results":"61","hashOfConfig":"37"},{"size":3767,"mtime":1634189340178,"results":"62","hashOfConfig":"37"},{"size":9958,"mtime":1634189313117,"results":"63","hashOfConfig":"37"},{"size":26528,"mtime":1634189304025,"results":"64","hashOfConfig":"37"},{"size":9500,"mtime":1634189290980,"results":"65","hashOfConfig":"37"},{"size":12945,"mtime":1634198438356,"results":"66","hashOfConfig":"37"},{"size":4004,"mtime":1634189327217,"results":"67","hashOfConfig":"37"},{"size":9524,"mtime":1634014150836,"results":"68","hashOfConfig":"37"},{"size":7479,"mtime":1634113289973,"results":"69","hashOfConfig":"37"},{"size":8811,"mtime":1634198543120,"results":"70","hashOfConfig":"37"},{"size":3377,"mtime":1634113261762,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1ftw0h2",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\index.tsx",[],["155","156"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\serviceWorkerRegistration.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\reportWebVitals.ts",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\App.tsx",["157"],"import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonRouterOutlet } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\n\nimport Home from './pages/Index';\nimport ForgetPassword from './pages/Forget-Password';\nimport ResetPassword from './pages/Reset-Password';\nimport Signup from './pages/Signup';\nimport StaffSignup from './pages/Staff-signup';\nimport TenantSignup from './pages/Tenant-signup';\nimport ManagementDashboard from './pages/Management-dashboard';\nimport ManagementDashboardWithNoProperty from './pages/Management-dashboard-with-no-property';\nimport ManagementSignup from './pages/Management-signup';\nimport ManageProperties from './pages/Manage-properties';\nimport AddNewProperty from './pages/Add-new-property';\nimport ManageTenants from './pages/Manage-tenants';\nimport LeaseInfo from './pages/Lease-info';\nimport EditLeaseInfo from './pages/Edit-lease-info';\nimport AddNewLease from './pages/Add-new-lease';\nimport LeaseRenewalProposal from './pages/lease-renewal-proposal';\nimport ManageRents from './pages/Manage-rents';\nimport RentPayDetails from './pages/Rent-pay-details';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonRouterOutlet>\n\n        <Route exact path=\"/index\">\n          <Home />\n        </Route>\n        <Route exact path=\"/\">\n          {/* <Redirect to=\"/index\" /> */}\n          <Home />\n        </Route>\n        <Route exact path=\"/forget-password\">\n          <ForgetPassword />\n        </Route>\n        <Route exact path=\"/reset-password\">\n          <ResetPassword />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route exact path=\"/management-signup\">\n          <ManagementSignup />\n        </Route>\n        <Route exact path=\"/staff-signup\">\n          <StaffSignup />\n        </Route>\n        <Route exact path=\"/tenant-signup\">\n          <TenantSignup />\n        </Route>\n        <Route exact path=\"/management-dashboard\">\n          <ManagementDashboard />\n        </Route>\n        <Route exact path=\"/management-dashboard-with-no-property\">\n          <ManagementDashboardWithNoProperty />\n        </Route>\n        <Route exact path=\"/manage-properties\">\n          <ManageProperties />\n        </Route>\n        <Route exact path=\"/add-new-property\">\n          <AddNewProperty />\n        </Route>\n        <Route exact path=\"/manage-tenants\">\n          <ManageTenants />\n        </Route>\n        <Route exact path=\"/manage-tenants-general\">\n          <ManageTenants />\n        </Route>\n        <Route exact path=\"/manage-tenants-search\">\n          <ManageTenants />\n        </Route>\n        <Route exact path=\"/lease-info\">\n          <LeaseInfo />\n        </Route>\n        <Route exact path=\"/edit-lease-info\">\n          <EditLeaseInfo />\n        </Route>\n        <Route exact path=\"/add-new-lease\">\n          <AddNewLease />\n        </Route>\n        <Route exact path=\"/lease-renewal-proposal\">\n          <LeaseRenewalProposal />\n        </Route>\n        <Route exact path=\"/manage-rents\">\n          <ManageRents />\n        </Route>\n        <Route exact path=\"/rent-pay-details\">\n          <RentPayDetails />\n        </Route>\n\n      </IonRouterOutlet>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Forget-Password.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Signup.tsx",["158","159","160"],"import React, { useRef, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonContent, IonPage, IonLabel, IonInput, IonButton, IonGrid, IonRow, IonCol, IonItem, IonList, IonRadioGroup, IonListHeader, IonRadio } from '@ionic/react';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst TENANT = \"tenant\"\r\nconst MANAGEMENT = \"management\"\r\nconst STAFF = \"staff\"\r\n\r\nconst Signup: React.FC = () => {\r\n\r\n  const [userType, setUserType] = useState<string>();\r\n  // const [selected, setSelected] = useState<string>();\r\n  var radioButtonValue = \"\";\r\n  let history = useHistory();\r\n  const inputChangeHandler = (event: CustomEvent) => {\r\n    console.log(event?.detail?.value);\r\n    setUserType(event?.detail?.value); \r\n\r\n    // if(event.detail.value && event.detail.value === \"tenant\") {\r\n    //   console.log('tanant selected');\r\n    //   radioButtonValue = \"tenant\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"management\") {\r\n    //   console.log('management selected');\r\n    //   radioButtonValue = \"management\";\r\n    // }\r\n    // else if(event.detail.value && event.detail.value === \"staff\") {\r\n    //   console.log('staff selected');\r\n    //   radioButtonValue = \"staff\";\r\n    // }\r\n\r\n  };\r\n  \r\n\r\n  const pageRediect = () => {\r\n    history.push(`/${userType}-signup`);\r\n    // switch(userType) {\r\n    //   case TENANT: {\r\n    //     history.push(\"/Tenant-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case MANAGEMENT: {\r\n    //     history.push(\"/Management-signup\");\r\n    //     break;\r\n    //   }\r\n    //   case STAFF: {\r\n    //     history.push(\"/Staff-signup\");\r\n    //     break;\r\n    //   }\r\n    //   default: {\r\n    //     break;\r\n    //   }\r\n       \r\n    // }\r\n\r\n    // if ( radioButtonValue == \"tenant\" ) {\r\n    //   console.log('tenant checked');\r\n    //   history.push(\"/Tenant-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"management\" ) {\r\n    //   console.log('management checked');\r\n    //   history.push(\"/Management-signup\");\r\n    // }\r\n    // else if ( radioButtonValue == \"staff\" ) {\r\n    //   console.log('staff checked');\r\n    //   history.push(\"/Staff-signup\");\r\n    // }\r\n  };\r\n\r\n  const doNothing = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n\r\n        <Header class=\"with-back-arrow\" onBack={doNothing} />\r\n\r\n        <IonContent fullscreen>\r\n            <IonGrid>\r\n                <IonRow className=\"signup-form login-form-row \">\r\n                    <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"6\">\r\n                        {/* <p>What are you registering as?</p> */}\r\n                        <IonList>\r\n                          <IonRadioGroup defaultValue={TENANT} onIonChange={inputChangeHandler}>\r\n                            <IonListHeader>\r\n                              <IonLabel>\r\n                                What are you registering as?\r\n                              </IonLabel>\r\n                            </IonListHeader>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Tenant\r\n                                <p>I am (or plan on) renting an apartment, condos or houses.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={TENANT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Management\r\n                                <p>I am plan to add and manage properties or apartments to rent.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={MANAGEMENT} />\r\n                            </IonItem>\r\n\r\n                            <IonItem className=\"user-select-item\">\r\n                              <IonLabel>\r\n                                Staff\r\n                                <p>I am staff member for a property.</p>\r\n                              </IonLabel>\r\n                              <IonRadio mode=\"md\" value={STAFF} />\r\n                              \r\n                            </IonItem>\r\n\r\n                          </IonRadioGroup>\r\n                        </IonList>\r\n\r\n                        \r\n                    </IonCol>\r\n\r\n                    <IonCol size=\"8\" sizeMd=\"4\" sizeLg=\"4\">\r\n                      <IonButton className=\"secondary-button\" type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" onClick={pageRediect}>\r\n                          Continue\r\n                      </IonButton>\r\n                    </IonCol>\r\n\r\n                </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Signup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Reset-Password.tsx",["161"],"import { \r\n  IonContent, \r\n  IonPage, \r\n  IonLabel, \r\n  IonInput, \r\n  IonButton, \r\n  IonGrid, \r\n  IonRow, \r\n  IonCol,  \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n\r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   const doNothing = () => {\r\n\r\n   }\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow\"  onBack={doNothing}/>\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                     <FormProvider {...methods}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                           <h2>Create new password</h2>\r\n                           <p>Your new password must be different from previous used password.</p>\r\n\r\n                           <IonGrid>\r\n                              <IonRow>\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Enter new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput\r\n                                       mode=\"md\" \r\n                                       type=\"password\" \r\n                                       {...register('password1', {\r\n                                          required: 'Password is Required'\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password1\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonLabel className=\"form-lable\">Confirm new password:</IonLabel>\r\n                                    {/* <IonInput type=\"password\" placeholder=\"Password\" /> */}\r\n                                    <IonInput \r\n                                       mode=\"md\"\r\n                                       type=\"password\" \r\n                                       {...register('password2', {\r\n                                          // required: true,\r\n                                          validate: {\r\n                                             noMatch: (value: string) => {\r\n                                                return value !== getValues(\"password1\")\r\n                                                   ? \"Passwords do not match\"\r\n                                                   : undefined;\r\n                                             },\r\n                                          },\r\n                                       })}\r\n                                    />\r\n                                    <ErrorMessage\r\n                                       errors={errors}\r\n                                       name=\"password2\"\r\n                                       as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                    />\r\n                                 </IonCol>\r\n\r\n                                 <IonCol size=\"12\" className=\"ion-margin-top\">\r\n                                    <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\" >\r\n                                    Reset Password\r\n                                    </IonButton>\r\n                                 </IonCol>\r\n                              </IonRow>\r\n                           </IonGrid>\r\n\r\n                        </form>\r\n                     </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n        </IonContent>\r\n\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-signup.tsx",["162"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst ManagementSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default ManagementSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Staff-signup.tsx",["163","164"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst StaffSignup: React.FC = () => {\r\n\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, setValue, formState: { errors } } = methods;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\" onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                   value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                   message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default StaffSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Tenant-signup.tsx",["165"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { \r\n   IonContent, \r\n   IonPage, \r\n   IonGrid, \r\n   IonRow,\r\n   IonCol, \r\n   IonLabel, \r\n   IonInput, \r\n   IonButton, \r\n    IonSlides, \r\n    IonSlide, \r\n} from '@ionic/react';\r\n\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport '@ionic/react/css/ionic-swiper.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst slideOpts = {\r\n   initialSlide: 0,\r\n   speed: 400\r\n};\r\n\r\nconst TenantSignup: React.FC = () => {\r\n   const mySlides = useRef<any>(null);\r\n\r\n   const methods = useForm();\r\n   const { register, trigger, handleSubmit, getValues, formState: { errors } } = methods;\r\n   ;\r\n   ;\r\n   // console.log(errors);\r\n\r\n   useEffect(() => {\r\n      mySlides.current.lockSwipes(true);\r\n   });\r\n\r\n   const next = async (fields: any) => {\r\n      const result = await trigger(fields);\r\n      if (!result) return;\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slideNext();\r\n      await mySlides.current.lockSwipes(true);\r\n   };\r\n   const prev = async () => {\r\n      await mySlides.current.lockSwipes(false);\r\n      await mySlides.current.slidePrev();\r\n      await mySlides.current.lockSwipes(true);\r\n    };\r\n  \r\n    \r\n   const onSubmit = (data: any) => {\r\n      console.log(data);\r\n   };\r\n\r\n\r\n   return (\r\n      <IonPage>\r\n\r\n         <Header class=\"with-back-arrow with-step-arrow\"  onBack={prev} />\r\n\r\n         <IonContent fullscreen>\r\n            <IonGrid>\r\n               <IonRow className=\"signup-form login-form-row\">\r\n                  <IonCol size=\"10\" sizeMd=\"6\" sizeLg=\"4\">\r\n                  <FormProvider {...methods}>\r\n                     <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <IonSlides pager={true} options={slideOpts} ref={mySlides}>\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Email*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"email\"\r\n                                             {...register('email', {\r\n                                                required: 'Email is a required field',\r\n                                                pattern: {\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: 'invalid email address'\r\n                                                }\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"email\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"password-field\">\r\n                                          <IonLabel className=\"form-lable\">Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password1', {\r\n                                                required: 'Password is Required'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password1\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"forget-password\">\r\n                                          <IonLabel className=\"form-lable\">Confirm Password*</IonLabel>\r\n                                          <IonInput \r\n                                             mode=\"md\"\r\n                                             type=\"password\" \r\n                                             {...register('password2', {\r\n                                                // required: true,\r\n                                                validate: {\r\n                                                   noMatch: (value: string) => {\r\n                                                      return value !== getValues(\"password1\")\r\n                                                         ? \"Passwords do not match\"\r\n                                                         : undefined;\r\n                                                   },\r\n                                                },\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"password2\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => next(['email','password1', 'password2'])}>\r\n                                             Continue\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                           <IonSlide>\r\n                                 <IonGrid>\r\n                                    <IonRow>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">First Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\"   \r\n                                             {...register('firstName', {\r\n                                                required: 'First name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"firstName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Last Name*</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"text\" \r\n                                             {...register('lastName', {\r\n                                                required: 'Last name is a required field'\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"lastName\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Telephone:</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"telephone\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       <IonCol size=\"12\" className=\"email-field\">\r\n                                          <IonLabel className=\"form-lable\">Lease Code (Optional):</IonLabel>\r\n                                          <IonInput\r\n                                             mode=\"md\"\r\n                                             type=\"number\" \r\n                                             {...register('telephone', {\r\n                                                minLength: 6, maxLength: 12,\r\n                                             })}\r\n                                          />\r\n                                          <ErrorMessage\r\n                                             errors={errors}\r\n                                             name=\"number\"\r\n                                             as={<div className=\"error-message\" style={{ color: 'red' }} />}\r\n                                          />\r\n                                       </IonCol>\r\n\r\n                                       {/* <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton expand=\"block\" shape=\"round\" fill=\"outline\" onClick={() => prev()}>\r\n                                             previous\r\n                                          </IonButton>\r\n                                       </IonCol> */}\r\n\r\n                                       <IonCol size=\"12\" className=\"sign-up-btn\">\r\n                                          <IonButton type=\"submit\" expand=\"block\" shape=\"round\" fill=\"outline\">\r\n                                             Finalize\r\n                                          </IonButton>\r\n                                       </IonCol>\r\n\r\n                                    </IonRow>\r\n                                 </IonGrid>\r\n                           </IonSlide>\r\n\r\n                        </IonSlides>\r\n                     </form>\r\n                  </FormProvider>\r\n                  </IonCol>\r\n\r\n               </IonRow>\r\n            </IonGrid>\r\n         </IonContent>\r\n\r\n      </IonPage>\r\n   );\r\n};\r\n\r\nexport default TenantSignup;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Header-main.tsx",["166"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Index.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Change-Property-Popup.tsx",["167","168","169","170"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-properties.tsx",["171","172","173"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Dahsboard-sidebar.tsx",["174","175","176","177","178","179","180","181","182","183","184","185"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyMoreMenu.tsx",["186","187","188","189","190"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyMoreMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" routerLink=\"#\">Modify</IonButton>\r\n                    </IonItem>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\"  color=\"danger\" routerLink=\"#\">Remove</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyMoreMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\Footer-mobile.tsx",["191","192"],"import React, { useState } from \"react\";\r\n\r\nimport { \r\n    IonFooter, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonButton,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonList,\r\n    IonItem,\r\n    IonAvatar,\r\n    IonLabel\r\n} from '@ionic/react';\r\n\r\nimport { menuOutline, settingsSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst FooterMobile: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <IonFooter className=\"ion-hide-lg-up\">\r\n            <IonGrid>\r\n\r\n                <IonRow>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-notification-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/bell-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-home-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/home-icon.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton className=\"footer-message-button\" fill=\"clear\">\r\n                            <IonIcon slot=\"icon-only\" src=\"/assets/images/mail_outline_black_24dp.svg\" />\r\n                        </IonButton>\r\n                    </IonCol>\r\n\r\n                    <IonPopover\r\n                        cssClass='footer-menu' \r\n                        mode=\"ios\"\r\n                        event={popoverState.event}\r\n                        isOpen={popoverState.showPopover}\r\n                        onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n                    >\r\n                        <IonList className=\"footer-mobile-menu\">\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">\r\n                                        <IonIcon icon=\"/assets/images/swap-horizontal.svg\"  />\r\n                                        <span className=\"\">Tenant Account</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/ios-person.svg\"  />\r\n                                        <span className=\"\">Account Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon=\"/assets/images/bill-icon.svg\"  />\r\n                                        <span className=\"\">Billing History</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon icon={settingsSharp}  />\r\n                                        <span className=\"\">Service Settings</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">FAQ</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                            <IonItem>\r\n                                <IonButton className=\"\" fill=\"clear\" routerLink=\"#\">\r\n                                    <div className=\"\">    \r\n                                        <IonIcon />\r\n                                        <span className=\"\">Logout</span>\r\n                                    </div>\r\n                                </IonButton>\r\n                            </IonItem>\r\n\r\n                        </IonList>\r\n                    </IonPopover>\r\n                    <IonCol className=\"footer-bottom-col\" size=\"3\">\r\n                        <IonButton \r\n                            className=\"footer-menu-button\" \r\n                            fill=\"clear\"\r\n                            onClick={\r\n                                    (e) => {\r\n                                    // e.persist();\r\n                                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                                }}\r\n                        >\r\n                            <IonIcon slot=\"icon-only\" icon={menuOutline} />\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n\r\n            </IonGrid>\r\n        </IonFooter>\r\n        \r\n    );\r\n};\r\n\r\nexport default FooterMobile;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-property.tsx",["193","194","195","196","197"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManagePropertyArchievedMenu.tsx",["198","199","200","201","202"],"import React, { useState } from 'react';\r\n\r\nimport { \r\n    IonContent, \r\n    IonPage, \r\n    IonButton, \r\n    IonGrid, \r\n    IonRow, \r\n    IonCol, \r\n    IonList,\r\n    IonIcon,\r\n    IonPopover,\r\n    IonItem,\r\n} from '@ionic/react';\r\n\r\nimport { ellipsisVerticalSharp } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManagePropertyArchievedMenu: React.FC = () => {\r\n\r\n    const [popoverState, setShowPopover] = useState<{showPopover: boolean, event: Event | undefined}>({ showPopover: false, event: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <IonPopover\r\n                cssClass='manage-property-more-menu'\r\n                mode=\"ios\"\r\n                event={popoverState.event}\r\n                isOpen={popoverState.showPopover}\r\n                onDidDismiss={() => setShowPopover({ showPopover: false, event: undefined })}\r\n            >   \r\n                <IonList>\r\n                    <IonItem>\r\n                        <IonButton fill=\"clear\" routerLink=\"#\">Restore</IonButton>\r\n                    </IonItem>\r\n                </IonList>\r\n            </IonPopover>\r\n\r\n            <IonButton \r\n            className=\"manage-property-more-menu-button\" \r\n            fill=\"clear\" \r\n            onClick={\r\n                (e) => {\r\n                    // e.persist();\r\n                    setShowPopover({ showPopover: true, event: e.nativeEvent })\r\n                }}\r\n            >\r\n                <IonIcon slot=\"icon-only\" icon={ellipsisVerticalSharp} />\r\n            </IonButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagePropertyArchievedMenu;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-tenants.tsx",["203"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageTenanatSearchTab.tsx",["204"],"import React from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol\r\n} from '@ionic/react';\r\n\r\nimport { searchSharp, addSharp } from \"ionicons/icons\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManageTenanatSearchTab: React.FC = () => {\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"find-digi-lease-block\">\r\n\r\n                <h6><b>Find</b> or <b>create</b> a Digi-Lease using the apartment number.</h6>\r\n\r\n                <div className=\"search-box\">\r\n                    <IonLabel>Apartment #</IonLabel>\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"204\"}></IonInput>\r\n                    <IonButton expand=\"full\" fill=\"solid\" shape=\"round\">\r\n                        <div className=\"\">    \r\n                            <IonIcon icon={searchSharp}  />\r\n                            <span className=\"\">Search</span>\r\n                        </div>\r\n                    </IonButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <h6>Here are all the lease results for <b><u>Apt 204a</u></b></h6>\r\n                \r\n                <div className=\"search-result-box\">\r\n                    <h5>Upcoming</h5>\r\n                    <div className=\"lease-renewal\">\r\n                        <IonButton className=\"lease-renewal-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/lease-renewal-proposal\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"ion-align-items-center\">\r\n                                <IonCol sizeXs=\"2\" sizeMd=\"1\" sizeLg=\"1\" sizeXl=\"1\" className=\"\">\r\n                                    <IonIcon icon=\"assets/images/exclamation-mark.svg\"  />\r\n                                </IonCol>\r\n                                <IonCol sizeXs=\"8\" sizeMd=\"10\" sizeLg=\"10\" sizeXl=\"10\" className=\"\">\r\n                                    <div className=\"renewal-lease-info\">\r\n                                        <h6><u>Lease Renewal.</u></h6>\r\n                                        <p>This lease expires on <b>Dec. 30th 2020.</b></p>\r\n                                        <p>Please Tap here to propose new lease</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol sizeXs=\"2\" sizeMd=\"1\" sizeLg=\"1\" sizeXl=\"1\" className=\"\">\r\n                                    <IonIcon icon=\"assets/images/plus-icon.svg\" />\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Current</h5>\r\n                    <div className=\"tenants-lease-info\">\r\n                        <IonButton className=\"edit-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/edit-lease-info\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"7\" className=\"start-end-date-block\">\r\n                                    <div className=\"start-date-block\">\r\n                                        <h6>Start Date</h6>\r\n                                        <p>July</p>\r\n                                        <p>1<sup>st</sup></p>\r\n                                        <p>2020</p>\r\n                                    </div>\r\n                                    <div className=\"to-block\">\r\n                                        <p>To</p>\r\n                                        <IonIcon icon=\"assets/images/arrow-right.svg\" />\r\n                                    </div>\r\n                                    <div className=\"end-date-block\">\r\n                                        <h6>End Date</h6>\r\n                                        <p>June</p>\r\n                                        <p>31<sup>st</sup></p>\r\n                                        <p>2021</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" className=\"\">\r\n                                    <div className=\"tenant-lease-info\">\r\n                                        <h6>Tenants</h6>\r\n                                        <ol>\r\n                                            <li>John Smith</li>\r\n                                            <li>Dianna Smith</li>\r\n                                        </ol>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Past</h5>\r\n                    <div className=\"tenants-lease-info\">\r\n                        <IonButton className=\"view-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/lease-info\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"7\" className=\"start-end-date-block\">\r\n                                    <div className=\"start-date-block\">\r\n                                        <h6>Start Date</h6>\r\n                                        <p>July</p>\r\n                                        <p>1<sup>st</sup></p>\r\n                                        <p>2020</p>\r\n                                    </div>\r\n                                    <div className=\"to-block\">\r\n                                        <p>To</p>\r\n                                        <IonIcon icon=\"assets/images/arrow-right.svg\" />\r\n                                    </div>\r\n                                    <div className=\"end-date-block\">\r\n                                        <h6>End Date</h6>\r\n                                        <p>June</p>\r\n                                        <p>31<sup>st</sup></p>\r\n                                        <p>2021</p>\r\n                                    </div>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" className=\"\">\r\n                                    <div className=\"tenant-lease-info\">\r\n                                        <h6>Tenants</h6>\r\n                                        <ol>\r\n                                            <li>John Smith</li>\r\n                                            <li>Dianna Smith</li>\r\n                                        </ol>\r\n                                    </div>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManageTenanatSearchTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Management-dashboard-with-no-property.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Lease-info.tsx",["205","206","207","208"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Edit-lease-info.tsx",["209","210","211"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Add-new-lease.tsx",["212","213","214","215"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\lease-renewal-proposal.tsx",["216","217"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Manage-rents.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsGeneralTab.tsx",[],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\ManageRentsSearchTab.tsx",["218"],"import React, {useState} from \"react\";\r\n\r\nimport {  \r\n    IonLabel, \r\n    IonButton, \r\n    IonIcon, \r\n    IonInput,\r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    useIonPopover,\r\n    createAnimation,\r\n    IonModal\r\n} from '@ionic/react';\r\n\r\nimport { searchSharp, close } from \"ionicons/icons\";\r\n\r\nimport RentPayReceiptPopup from \"./RentPayReceiptPopup\";\r\n\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst ManageRentsSearchTab: React.FC = () => {\r\n\r\n    // const [present, dismiss] = useIonPopover(RentPayReceiptPopup, { onHide: () => dismiss() });\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const enterAnimation = (baseEl: any) => {\r\n        const backdropAnimation = createAnimation()\r\n          .addElement(baseEl.querySelector('ion-backdrop')!)\r\n          .fromTo('opacity', '0.01', 'var(--backdrop-opacity)');\r\n    \r\n        const wrapperAnimation = createAnimation()\r\n          .addElement(baseEl.querySelector('.modal-wrapper')!)\r\n          .keyframes([\r\n            { offset: 0, opacity: '0', transform: 'scale(0)' },\r\n            { offset: 1, opacity: '0.99', transform: 'scale(1)' }\r\n          ]);\r\n    \r\n        return createAnimation()\r\n          .addElement(baseEl)\r\n          .easing('ease-out')\r\n          .duration(500)\r\n          .addAnimation([backdropAnimation, wrapperAnimation]);\r\n    }\r\n    \r\n    const leaveAnimation = (baseEl: any) => {\r\n        return enterAnimation(baseEl).direction('reverse');\r\n    }\r\n\r\n    return (\r\n        <div className=\"tab-content\">\r\n\r\n            <div className=\"find-digi-lease-block\">\r\n\r\n                <h6>Find an apartment and manage its rent.</h6>\r\n\r\n                <div className=\"search-box\">\r\n                    <IonLabel>Apartment #</IonLabel>\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"502\"}></IonInput>\r\n                    <IonButton expand=\"full\" fill=\"solid\" shape=\"round\">\r\n                        <div className=\"\">    \r\n                            <IonIcon icon={searchSharp}  />\r\n                            <span className=\"\">Search</span>\r\n                        </div>\r\n                    </IonButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"digi-lease-search-results-box\">\r\n                <h6><b>Payment history</b> for <b><u>Apt 502</u></b></h6>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Upcoming (Current Lease)</h5>\r\n                    <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                        <IonButton className=\"edit-lease-info-button\" fill=\"clear\" expand=\"full\" shape=\"round\" routerLink=\"/rent-pay-details\"></IonButton>\r\n                         <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"3\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"rent-price-block due-block\">\r\n                                    <h6>Due:</h6>\r\n                                    <p>$910</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"payment-date-block\">\r\n                                    <h6>Due Date:</h6>\r\n                                    <p>Feb. 1st 2021</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" sizeMd=\"6\" sizeLg=\"8\" sizeXl=\"8\" className=\"rent-period-block\">\r\n                                    <h6>Rent Period:</h6>\r\n                                    <p>Jan. 1st <IonIcon icon=\"assets/images/arrow-right.svg\" />Jan. 30th</p>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                    </div>\r\n                    <IonRow className=\"ion-justify-content-center\">\r\n                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                            <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </div>\r\n\r\n                <div className=\"search-result-box\">\r\n                    <h5>Past</h5>\r\n                    <div className=\"tenants-lease-info tenants-lease-payment-info \">\r\n                        {/* <IonButton \r\n                            className=\"view-lease-info-button\"\r\n                            fill=\"clear\" \r\n                            expand=\"full\" \r\n                            shape=\"round\"\r\n                            onClick={() =>\r\n                                present({\r\n                                  cssClass: 'rent-pay-receipt-popup'\r\n                                })\r\n                            }\r\n                        >\r\n                        </IonButton> */}\r\n                        <IonButton \r\n                            className=\"view-lease-info-button\" \r\n                            fill=\"clear\" \r\n                            expand=\"full\" \r\n                            shape=\"round\" \r\n                            onClick={() => setShowModal(true)}\r\n                        >\r\n                        </IonButton>\r\n                        <IonGrid className=\"\">\r\n                            <IonRow className=\"\">\r\n                                <IonCol size=\"3\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"rent-price-block paid-block\">\r\n                                    <h6>Paid:</h6>\r\n                                    <p>$900</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"4\" sizeMd=\"3\" sizeLg=\"2\" sizeXl=\"2\" className=\"payment-date-block\">\r\n                                    <h6>Pay Date:</h6>\r\n                                    <p>Jan. 1st 2021</p>\r\n                                </IonCol>\r\n                                <IonCol size=\"5\" sizeMd=\"6\" sizeLg=\"8\" sizeXl=\"8\" className=\"rent-period-block\">\r\n                                    <h6>Rent Period:</h6>\r\n                                    <p>Dec. 1st <IonIcon icon=\"assets/images/arrow-right.svg\" />Dec. 30th</p>\r\n                                </IonCol>\r\n                            </IonRow>\r\n                        </IonGrid>                                    \r\n                     </div>\r\n                     <IonRow className=\"ion-justify-content-center\">\r\n                        <IonCol size=\"6\" sizeMd=\"4\" sizeLg=\"4\" sizeXl=\"3\" className=\"\">\r\n                            <IonButton className=\"show-more-button\" expand=\"full\" shape=\"round\" fill=\"solid\">More</IonButton>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonModal isOpen={showModal} enterAnimation={enterAnimation} leaveAnimation=        {leaveAnimation} cssClass=\"rent-pay-receipt-popup\">\r\n                            <IonButton className=\"close-popup-button\" fill=\"clear\" onClick={() => setShowModal(false)}> \r\n                                <IonIcon icon={close} />\r\n                            </IonButton>\r\n                            <RentPayReceiptPopup />\r\n                            {/* <IonButton onClick={() => setShowModal(false)}>Close Modal</IonButton> */}\r\n                    </IonModal>\r\n                    \r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default ManageRentsSearchTab;","G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\pages\\Rent-pay-details.tsx",["219","220","221"],"G:\\Umang\\Housing app\\react app\\housingapp-ui\\src\\components\\RentPayReceiptPopup.tsx",["222","223","224","225"],"import React from 'react';\r\n\r\nimport { \r\n    IonGrid,\r\n    IonRow,\r\n    IonCol,\r\n    IonButton,\r\n    IonIcon,\r\n    IonInput,\r\n    IonLabel,\r\n    createAnimation\r\n} from '@ionic/react';\r\n\r\nimport { close } from \"ionicons/icons\";\r\n\r\nimport '../assets/css/Custom.css';\r\nimport '../assets/css/Responsive.css';\r\n\r\nconst RentPayReceiptPopup: React.FC = () => {\r\n\r\n    \r\n    \r\n\r\n    return (\r\n\r\n        <IonGrid className=\"rent-pay-receipt-popup-wrapper\">\r\n\r\n            <div className=\"popup-title\">\r\n                <h4>Receipt</h4>\r\n                {/* <IonButton className=\"close-popup-button\" fill=\"clear\">\r\n                    <IonIcon icon={close} />\r\n                </IonButton> */}\r\n            </div> \r\n\r\n            <IonRow className=\"receipt-details\">\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Apartment</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"201\"} name=\"receiptApartment\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Rent Period</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"Jan. 1st - Jan. 30th, 2020\"} name=\"receiptRentPeriod\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Payment Method</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"Interac\"} name=\"receiptPaymentMethod\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Card Number</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"**** **** *123\"} name=\"receiptCardNumber\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>Rent Cost</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"$900\"} name=\"receiptRentCost\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>TPS</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"N/A\"} name=\"receiptTPS\" readonly></IonInput>\r\n                </IonCol>\r\n\r\n                <IonCol size=\"6\">\r\n                    <IonLabel>TVQ</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"6\">\r\n                    <IonInput mode=\"md\" type=\"text\" value={\"N/A\"} name=\"receiptTVQ\" readonly></IonInput>\r\n                </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow  className=\"receipt-amount\">\r\n                <IonCol size=\"12\">\r\n                    <IonLabel>Total Paid</IonLabel>\r\n                </IonCol>\r\n                <IonCol size=\"12\">\r\n                    <p className=\"total-rent-paid\"><b>$900 CAD</b></p>\r\n                </IonCol>\r\n                <p className=\"rent-paid-date\">Paid: <span className=\"paid-date\">22/Jan/2020</span></p>\r\n            </IonRow>\r\n\r\n        </IonGrid> \r\n        // </IonPopover>\r\n        \r\n    );\r\n};\r\n\r\nexport default RentPayReceiptPopup;",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":18},{"ruleId":"230","severity":1,"message":"234","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":23},{"ruleId":"230","severity":1,"message":"235","line":4,"column":41,"nodeType":"232","messageId":"233","endLine":4,"endColumn":49},{"ruleId":"230","severity":1,"message":"236","line":19,"column":7,"nodeType":"232","messageId":"233","endLine":19,"endColumn":23},{"ruleId":"230","severity":1,"message":"237","line":23,"column":22,"nodeType":"232","messageId":"233","endLine":23,"endColumn":29},{"ruleId":"230","severity":1,"message":"238","line":1,"column":36,"nodeType":"232","messageId":"233","endLine":1,"endColumn":44},{"ruleId":"230","severity":1,"message":"238","line":1,"column":36,"nodeType":"232","messageId":"233","endLine":1,"endColumn":44},{"ruleId":"230","severity":1,"message":"239","line":35,"column":56,"nodeType":"232","messageId":"233","endLine":35,"endColumn":64},{"ruleId":"230","severity":1,"message":"238","line":1,"column":36,"nodeType":"232","messageId":"233","endLine":1,"endColumn":44},{"ruleId":"230","severity":1,"message":"240","line":36,"column":12,"nodeType":"232","messageId":"233","endLine":36,"endColumn":19},{"ruleId":"230","severity":1,"message":"238","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"241","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},{"ruleId":"230","severity":1,"message":"242","line":2,"column":22,"nodeType":"232","messageId":"233","endLine":2,"endColumn":41},{"ruleId":"230","severity":1,"message":"243","line":2,"column":43,"nodeType":"232","messageId":"233","endLine":2,"endColumn":48},{"ruleId":"230","severity":1,"message":"238","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"244","line":10,"column":5,"nodeType":"232","messageId":"233","endLine":10,"endColumn":18},{"ruleId":"230","severity":1,"message":"245","line":39,"column":11,"nodeType":"232","messageId":"233","endLine":39,"endColumn":24},{"ruleId":"230","severity":1,"message":"238","line":1,"column":16,"nodeType":"232","messageId":"233","endLine":1,"endColumn":24},{"ruleId":"230","severity":1,"message":"246","line":17,"column":7,"nodeType":"232","messageId":"233","endLine":17,"endColumn":14},{"ruleId":"230","severity":1,"message":"247","line":18,"column":7,"nodeType":"232","messageId":"233","endLine":18,"endColumn":12},{"ruleId":"230","severity":1,"message":"248","line":19,"column":7,"nodeType":"232","messageId":"233","endLine":19,"endColumn":14},{"ruleId":"230","severity":1,"message":"249","line":20,"column":7,"nodeType":"232","messageId":"233","endLine":20,"endColumn":12},{"ruleId":"230","severity":1,"message":"250","line":21,"column":7,"nodeType":"232","messageId":"233","endLine":21,"endColumn":12},{"ruleId":"251","severity":1,"message":"252","line":33,"column":25,"nodeType":"253","messageId":"254","endLine":33,"endColumn":27},{"ruleId":"255","severity":1,"message":"256","line":50,"column":33,"nodeType":"257","endLine":50,"endColumn":82},{"ruleId":"255","severity":1,"message":"256","line":61,"column":33,"nodeType":"257","endLine":61,"endColumn":78},{"ruleId":"255","severity":1,"message":"256","line":72,"column":33,"nodeType":"257","endLine":72,"endColumn":76},{"ruleId":"255","severity":1,"message":"256","line":83,"column":33,"nodeType":"257","endLine":83,"endColumn":80},{"ruleId":"255","severity":1,"message":"256","line":94,"column":33,"nodeType":"257","endLine":94,"endColumn":75},{"ruleId":"230","severity":1,"message":"258","line":4,"column":5,"nodeType":"232","messageId":"233","endLine":4,"endColumn":15},{"ruleId":"230","severity":1,"message":"259","line":5,"column":5,"nodeType":"232","messageId":"233","endLine":5,"endColumn":12},{"ruleId":"230","severity":1,"message":"260","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":12},{"ruleId":"230","severity":1,"message":"261","line":8,"column":5,"nodeType":"232","messageId":"233","endLine":8,"endColumn":11},{"ruleId":"230","severity":1,"message":"262","line":9,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":11},{"ruleId":"230","severity":1,"message":"263","line":13,"column":5,"nodeType":"232","messageId":"233","endLine":13,"endColumn":14},{"ruleId":"230","severity":1,"message":"264","line":14,"column":5,"nodeType":"232","messageId":"233","endLine":14,"endColumn":13},{"ruleId":"230","severity":1,"message":"265","line":17,"column":5,"nodeType":"232","messageId":"233","endLine":17,"endColumn":12},{"ruleId":"230","severity":1,"message":"266","line":44,"column":12,"nodeType":"232","messageId":"233","endLine":44,"endColumn":16},{"ruleId":"230","severity":1,"message":"267","line":44,"column":18,"nodeType":"232","messageId":"233","endLine":44,"endColumn":25},{"ruleId":"230","severity":1,"message":"268","line":52,"column":65,"nodeType":"232","messageId":"233","endLine":52,"endColumn":74},{"ruleId":"230","severity":1,"message":"269","line":67,"column":11,"nodeType":"232","messageId":"233","endLine":67,"endColumn":15},{"ruleId":"230","severity":1,"message":"258","line":4,"column":5,"nodeType":"232","messageId":"233","endLine":4,"endColumn":15},{"ruleId":"230","severity":1,"message":"259","line":5,"column":5,"nodeType":"232","messageId":"233","endLine":5,"endColumn":12},{"ruleId":"230","severity":1,"message":"260","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":12},{"ruleId":"230","severity":1,"message":"261","line":8,"column":5,"nodeType":"232","messageId":"233","endLine":8,"endColumn":11},{"ruleId":"230","severity":1,"message":"262","line":9,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":11},{"ruleId":"230","severity":1,"message":"270","line":28,"column":11,"nodeType":"232","messageId":"233","endLine":28,"endColumn":19},{"ruleId":"230","severity":1,"message":"271","line":13,"column":23,"nodeType":"232","messageId":"233","endLine":13,"endColumn":31},{"ruleId":"230","severity":1,"message":"238","line":1,"column":24,"nodeType":"232","messageId":"233","endLine":1,"endColumn":32},{"ruleId":"230","severity":1,"message":"272","line":9,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":12},{"ruleId":"230","severity":1,"message":"265","line":18,"column":5,"nodeType":"232","messageId":"233","endLine":18,"endColumn":12},{"ruleId":"230","severity":1,"message":"273","line":21,"column":32,"nodeType":"232","messageId":"233","endLine":21,"endColumn":43},{"ruleId":"230","severity":1,"message":"272","line":11,"column":5,"nodeType":"232","messageId":"233","endLine":11,"endColumn":12},{"ruleId":"230","severity":1,"message":"273","line":25,"column":32,"nodeType":"232","messageId":"233","endLine":25,"endColumn":43},{"ruleId":"230","severity":1,"message":"240","line":48,"column":12,"nodeType":"232","messageId":"233","endLine":48,"endColumn":19},{"ruleId":"230","severity":1,"message":"272","line":9,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":12},{"ruleId":"230","severity":1,"message":"265","line":19,"column":5,"nodeType":"232","messageId":"233","endLine":19,"endColumn":12},{"ruleId":"230","severity":1,"message":"274","line":22,"column":10,"nodeType":"232","messageId":"233","endLine":22,"endColumn":15},{"ruleId":"230","severity":1,"message":"273","line":22,"column":32,"nodeType":"232","messageId":"233","endLine":22,"endColumn":43},{"ruleId":"230","severity":1,"message":"272","line":9,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":12},{"ruleId":"230","severity":1,"message":"273","line":21,"column":32,"nodeType":"232","messageId":"233","endLine":21,"endColumn":43},{"ruleId":"230","severity":1,"message":"275","line":11,"column":5,"nodeType":"232","messageId":"233","endLine":11,"endColumn":18},{"ruleId":"230","severity":1,"message":"276","line":33,"column":9,"nodeType":"232","messageId":"233","endLine":33,"endColumn":16},{"ruleId":"230","severity":1,"message":"277","line":43,"column":12,"nodeType":"232","messageId":"233","endLine":43,"endColumn":25},{"ruleId":"230","severity":1,"message":"278","line":43,"column":27,"nodeType":"232","messageId":"233","endLine":43,"endColumn":43},{"ruleId":"230","severity":1,"message":"279","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":14},{"ruleId":"230","severity":1,"message":"280","line":8,"column":5,"nodeType":"232","messageId":"233","endLine":8,"endColumn":12},{"ruleId":"230","severity":1,"message":"281","line":11,"column":5,"nodeType":"232","messageId":"233","endLine":11,"endColumn":20},{"ruleId":"230","severity":1,"message":"274","line":14,"column":10,"nodeType":"232","messageId":"233","endLine":14,"endColumn":15},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'IonInput' is defined but never used.","'radioButtonValue' is assigned a value but never used.","'trigger' is assigned a value but never used.","'useState' is defined but never used.","'setValue' is assigned a value but never used.","'present' is assigned a value but never used.","'withRouter' is defined but never used.","'RouteComponentProps' is defined but never used.","'Route' is defined but never used.","'IonRadioGroup' is defined but never used.","'toggleReorder' is assigned a value but never used.","'TENANTS' is assigned a value but never used.","'RENTS' is assigned a value but never used.","'REPAIRS' is assigned a value but never used.","'POSTS' is assigned a value but never used.","'STAFF' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IonContent' is defined but never used.","'IonPage' is defined but never used.","'IonGrid' is defined but never used.","'IonRow' is defined but never used.","'IonCol' is defined but never used.","'IonAvatar' is defined but never used.","'IonLabel' is defined but never used.","'IonItem' is defined but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'getValues' is assigned a value but never used.","'prev' is assigned a value but never used.","'location' is assigned a value but never used.","'addSharp' is defined but never used.","'IonList' is defined but never used.","'chevronDown' is defined but never used.","'close' is defined but never used.","'useIonPopover' is defined but never used.","'history' is assigned a value but never used.","'exitFileAlert' is assigned a value but never used.","'setExitFileAlert' is assigned a value but never used.","'IonButton' is defined but never used.","'IonIcon' is defined but never used.","'createAnimation' is defined but never used.","no-global-assign","no-unsafe-negation"]