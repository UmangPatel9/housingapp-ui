{"ast":null,"code":"var _jsxFileName = \"G:\\\\Umang\\\\Housing app\\\\react app\\\\housingapp-ui\\\\src\\\\components\\\\Accordion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Accordion = ({\n  title,\n  content\n}) => {\n  _s();\n\n  const [active, setActive] = useState(false);\n  const [height, setHeight] = useState('0px');\n  const [rotate, setRotate] = useState('transform duration-700 ease');\n  const contentSpace = useRef(null);\n\n  function toggleAccordion() {\n    // setActive(active === false ? true : false)\n    setActive(prevState => !prevState); // @ts-ignore\n\n    setHeight(active ? '0px' : `${contentSpace.current.scrollHeight}px`);\n    setRotate(active ? 'transform duration-700 ease' : 'transform duration-700 ease rotate-180');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"py-6 box-border appearance-none cursor-pointer focus:outline-none flex items-center justify-between\",\n      onClick: toggleAccordion,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"inline-block text-footnote light\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentSpace,\n      style: {\n        maxHeight: `${height}`\n      },\n      className: \"panel overflow-auto transition-max-height duration-700 ease-in-out\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pb-10\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accordion, \"f7qiGf4LfIf4t470I5pcT5BjjhU=\");\n\n_c = Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["G:/Umang/Housing app/react app/housingapp-ui/src/components/Accordion.tsx"],"names":["React","useRef","useState","Accordion","title","content","active","setActive","height","setHeight","rotate","setRotate","contentSpace","toggleAccordion","prevState","current","scrollHeight","maxHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAOA,OAAO,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AACzE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,6BAAD,CAApC;AAEA,QAAMU,YAAY,GAAGX,MAAM,CAAC,IAAD,CAA3B;;AAEA,WAASY,eAAT,GAA2B;AACzB;AACAN,IAAAA,SAAS,CAAEO,SAAD,IAAe,CAACA,SAAjB,CAAT,CAFyB,CAGzB;;AACAL,IAAAA,SAAS,CAACH,MAAM,GAAG,KAAH,GAAY,GAAEM,YAAY,CAACG,OAAb,CAAqBC,YAAa,IAAvD,CAAT;AACAL,IAAAA,SAAS,CAACL,MAAM,GAAG,6BAAH,GAAmC,wCAA1C,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,qGADZ;AAEE,MAAA,OAAO,EAAEO,eAFX;AAAA,6BAIE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA,kBAAiDT;AAAjD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AACE,MAAA,GAAG,EAAEQ,YADP;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,SAAS,EAAG,GAAET,MAAO;AAAvB,OAFT;AAGE,MAAA,SAAS,EAAC,oEAHZ;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBH;AAAxB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CArCM;;GAAMF,S;;KAAAA,S","sourcesContent":["import React, { useRef, useState } from 'react'\r\n\r\ninterface AccordionProps {\r\n  title: React.ReactNode\r\n  content: React.ReactNode\r\n}\r\n\r\nexport const Accordion: React.FC<AccordionProps> = ({ title, content }) => {\r\n  const [active, setActive] = useState(false)\r\n  const [height, setHeight] = useState('0px')\r\n  const [rotate, setRotate] = useState('transform duration-700 ease')\r\n\r\n  const contentSpace = useRef(null)\r\n\r\n  function toggleAccordion() {\r\n    // setActive(active === false ? true : false)\r\n    setActive((prevState) => !prevState)\r\n    // @ts-ignore\r\n    setHeight(active ? '0px' : `${contentSpace.current.scrollHeight}px`)\r\n    setRotate(active ? 'transform duration-700 ease' : 'transform duration-700 ease rotate-180')\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <button\r\n        className=\"py-6 box-border appearance-none cursor-pointer focus:outline-none flex items-center justify-between\"\r\n        onClick={toggleAccordion}\r\n      >\r\n        <p className=\"inline-block text-footnote light\">{title}</p>\r\n        {/* <img\r\n          src={`${appConfig.publicUrl}/img/icons/chevron-up.svg`}\r\n          alt=\"Chevron icon\"\r\n          className={`${rotate} inline-block`}\r\n        /> */}\r\n      </button>\r\n      <div\r\n        ref={contentSpace}\r\n        style={{ maxHeight: `${height}` }}\r\n        className=\"panel overflow-auto transition-max-height duration-700 ease-in-out\"\r\n      >\r\n        <div className=\"pb-10\">{content}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}