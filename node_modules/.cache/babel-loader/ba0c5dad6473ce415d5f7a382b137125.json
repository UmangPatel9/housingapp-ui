{"ast":null,"code":"var _jsxFileName = \"G:\\\\Umang\\\\Housing app\\\\react app\\\\housingapp-ui\\\\src\\\\pages\\\\CheckboxExamples.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider } from '@ionic/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkboxList = [{\n  val: 'Pepperoni',\n  isChecked: true\n}, {\n  val: 'Sausage',\n  isChecked: false\n}, {\n  val: 'Mushroom',\n  isChecked: false\n}];\nexport const CheckboxExamples = () => {\n  _s();\n\n  const [checked, setChecked] = useState(false);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"CheckboxExamples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      children: /*#__PURE__*/_jsxDEV(IonList, {\n        children: [/*#__PURE__*/_jsxDEV(IonItemDivider, {\n          children: \"Default Checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            children: [\"Checked: \", JSON.stringify(checked)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            checked: checked,\n            onIonChange: e => setChecked(e.detail.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItemDivider, {\n          children: \"Disabled Checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n          children: /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItemDivider, {\n          children: \"Checkbox Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            color: \"danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            color: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            color: \"dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonItemDivider, {\n          children: \"Checkboxes in a List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), checkboxList.map(({\n          val,\n          isChecked\n        }, i) => /*#__PURE__*/_jsxDEV(IonItem, {\n          children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IonCheckbox, {\n            slot: \"end\",\n            value: val,\n            checked: isChecked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckboxExamples, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n\n_c = CheckboxExamples;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxExamples\");","map":{"version":3,"sources":["G:/Umang/Housing app/react app/housingapp-ui/src/pages/CheckboxExamples.tsx"],"names":["React","useState","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonCheckbox","IonList","IonItem","IonLabel","IonItemDivider","checkboxList","val","isChecked","CheckboxExamples","checked","setChecked","JSON","stringify","e","detail","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider } from '@ionic/react';\r\n\r\nconst checkboxList = [\r\n  { val: 'Pepperoni', isChecked: true },\r\n  { val: 'Sausage', isChecked: false },\r\n  { val: 'Mushroom', isChecked: false }\r\n];\r\n\r\nexport const CheckboxExamples: React.FC = () => {\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonTitle>CheckboxExamples</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent>\r\n        <IonList>\r\n          <IonItemDivider>Default Checkbox</IonItemDivider>\r\n          <IonItem>\r\n            <IonLabel>Checked: {JSON.stringify(checked)}</IonLabel>\r\n            <IonCheckbox checked={checked} onIonChange={e => setChecked(e.detail.checked)} />\r\n          </IonItem>\r\n\r\n          <IonItemDivider>Disabled Checkbox</IonItemDivider>\r\n          <IonItem><IonCheckbox slot=\"end\" disabled={true} /></IonItem>\r\n\r\n          <IonItemDivider>Checkbox Colors</IonItemDivider>\r\n          <IonItem>\r\n            <IonCheckbox slot=\"end\" color=\"primary\" />\r\n            <IonCheckbox slot=\"end\" color=\"secondary\" />\r\n            <IonCheckbox slot=\"end\" color=\"danger\" />\r\n            <IonCheckbox slot=\"end\" color=\"light\" />\r\n            <IonCheckbox slot=\"end\" color=\"dark\" />\r\n          </IonItem>\r\n          <IonItemDivider>Checkboxes in a List</IonItemDivider>\r\n\r\n          {checkboxList.map(({ val, isChecked }, i) => (\r\n            <IonItem key={i}>\r\n              <IonLabel>{val}</IonLabel>\r\n              <IonCheckbox slot=\"end\" value={val} checked={isChecked} />\r\n            </IonItem>\r\n          ))}\r\n        </IonList>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}